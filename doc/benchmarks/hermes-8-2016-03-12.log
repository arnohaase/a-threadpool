# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.___testSimpleScheduling01
# Parameters: (strategy = a-sync-block)

# Run progress: 0,00% complete, ETA 12:43:12
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
8429,851 ops/s
# Warmup Iteration   2: 9120,866 ops/s
# Warmup Iteration   3: 8992,475 ops/s
Iteration   1: 9034,801 ops/s
Iteration   2: 8907,675 ops/s
Iteration   3: 9126,216 ops/s
Iteration   4: 9150,463 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=119085503, numSharedTasksExecuted=119085503, numSteals=0, numExceptions=0, numParks=321557, numFalseAlarmUnparks=5016, numSharedQueueSwitches=0, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=123859307, numSharedTasksExecuted=123859307, numSteals=0, numExceptions=0, numParks=327914, numFalseAlarmUnparks=4210, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=117253627, numSharedTasksExecuted=117253627, numSteals=0, numExceptions=0, numParks=320833, numFalseAlarmUnparks=3312, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=120954267, numSharedTasksExecuted=120954267, numSteals=0, numExceptions=0, numParks=325399, numFalseAlarmUnparks=2918, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=117971610, numSharedTasksExecuted=117971610, numSteals=0, numExceptions=0, numParks=323704, numFalseAlarmUnparks=1933, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=123954633, numSharedTasksExecuted=123954633, numSteals=0, numExceptions=0, numParks=333777, numFalseAlarmUnparks=1583, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=117148495, numSharedTasksExecuted=117148495, numSteals=0, numExceptions=0, numParks=319421, numFalseAlarmUnparks=1331, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=118391566, numSharedTasksExecuted=118391566, numSteals=0, numExceptions=0, numParks=325372, numFalseAlarmUnparks=1500, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
--------------------------------
9056,926 ops/s

# Run progress: 0,23% complete, ETA 12:46:38
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
8529,414 ops/s
# Warmup Iteration   2: 8685,918 ops/s
# Warmup Iteration   3: 8916,295 ops/s
Iteration   1: 9040,500 ops/s
Iteration   2: 9128,393 ops/s
Iteration   3: 9057,112 ops/s
Iteration   4: 9121,779 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=130808965, numSharedTasksExecuted=130808965, numSteals=0, numExceptions=0, numParks=330616, numFalseAlarmUnparks=5204, numSharedQueueSwitches=0, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=125140202, numSharedTasksExecuted=125140202, numSteals=0, numExceptions=0, numParks=329807, numFalseAlarmUnparks=4114, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=124574843, numSharedTasksExecuted=124574843, numSteals=0, numExceptions=0, numParks=325896, numFalseAlarmUnparks=3157, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=124991680, numSharedTasksExecuted=124991680, numSteals=0, numExceptions=0, numParks=332876, numFalseAlarmUnparks=2615, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=122896867, numSharedTasksExecuted=122896867, numSteals=0, numExceptions=0, numParks=325706, numFalseAlarmUnparks=1844, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=120901022, numSharedTasksExecuted=120901022, numSteals=0, numExceptions=0, numParks=333966, numFalseAlarmUnparks=1681, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=89381153, numSharedTasksExecuted=89381153, numSteals=0, numExceptions=0, numParks=298698, numFalseAlarmUnparks=1521, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=120982276, numSharedTasksExecuted=120982276, numSteals=0, numExceptions=0, numParks=330807, numFalseAlarmUnparks=1678, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
--------------------------------
9022,352 ops/s


Result "___testSimpleScheduling01":
  9064,622 Â±(99.9%) 108,674 ops/s [Average]
  (min, avg, max) = (8907,675, 9064,622, 9150,463), stdev = 71,881
  CI (99.9%): [8955,947, 9173,296] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.___testSimpleScheduling01
# Parameters: (strategy = a-sync-nocheck)

# Run progress: 0,46% complete, ETA 12:44:48
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
8618,334 ops/s
# Warmup Iteration   2: 8941,889 ops/s
# Warmup Iteration   3: 8999,453 ops/s
Iteration   1: 9182,714 ops/s
Iteration   2: 9131,775 ops/s
Iteration   3: 9197,812 ops/s
Iteration   4: 9158,275 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=122617923, numSharedTasksExecuted=122617923, numSteals=0, numExceptions=0, numParks=331760, numFalseAlarmUnparks=5462, numSharedQueueSwitches=0, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=123329499, numSharedTasksExecuted=123329499, numSteals=0, numExceptions=0, numParks=336969, numFalseAlarmUnparks=4786, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=119347606, numSharedTasksExecuted=119347606, numSteals=0, numExceptions=0, numParks=323981, numFalseAlarmUnparks=3460, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=117919834, numSharedTasksExecuted=117919834, numSteals=0, numExceptions=0, numParks=323635, numFalseAlarmUnparks=2674, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=129973481, numSharedTasksExecuted=129973481, numSteals=0, numExceptions=0, numParks=354471, numFalseAlarmUnparks=2308, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=119815283, numSharedTasksExecuted=119815283, numSteals=0, numExceptions=0, numParks=334914, numFalseAlarmUnparks=2144, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=117170844, numSharedTasksExecuted=117170844, numSteals=0, numExceptions=0, numParks=328089, numFalseAlarmUnparks=2008, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=116995538, numSharedTasksExecuted=116995538, numSteals=0, numExceptions=0, numParks=329167, numFalseAlarmUnparks=2245, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
--------------------------------
9031,388 ops/s

# Run progress: 0,69% complete, ETA 12:43:09
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
8646,189 ops/s
# Warmup Iteration   2: 9097,789 ops/s
# Warmup Iteration   3: 9496,483 ops/s
Iteration   1: 9364,360 ops/s
Iteration   2: 9133,116 ops/s
Iteration   3: 9129,970 ops/s
Iteration   4: 9095,950 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=127019705, numSharedTasksExecuted=127019705, numSteals=0, numExceptions=0, numParks=338299, numFalseAlarmUnparks=5514, numSharedQueueSwitches=0, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=134632215, numSharedTasksExecuted=134632215, numSteals=0, numExceptions=0, numParks=338964, numFalseAlarmUnparks=3540, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=123277415, numSharedTasksExecuted=123277415, numSteals=0, numExceptions=0, numParks=335793, numFalseAlarmUnparks=3426, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=124047348, numSharedTasksExecuted=124047348, numSteals=0, numExceptions=0, numParks=338041, numFalseAlarmUnparks=2709, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=126466216, numSharedTasksExecuted=126466216, numSteals=0, numExceptions=0, numParks=343614, numFalseAlarmUnparks=2319, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=123531676, numSharedTasksExecuted=123531676, numSteals=0, numExceptions=0, numParks=338176, numFalseAlarmUnparks=1963, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=88818746, numSharedTasksExecuted=88818746, numSteals=0, numExceptions=0, numParks=298618, numFalseAlarmUnparks=2059, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=122660687, numSharedTasksExecuted=122660687, numSteals=0, numExceptions=0, numParks=339556, numFalseAlarmUnparks=2272, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
--------------------------------
9074,725 ops/s


Result "___testSimpleScheduling01":
  9150,008 Â±(99.9%) 136,207 ops/s [Average]
  (min, avg, max) = (9031,388, 9150,008, 9364,360), stdev = 90,092
  CI (99.9%): [9013,802, 9286,215] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.___testSimpleScheduling01
# Parameters: (strategy = a-lock-block)

# Run progress: 0,93% complete, ETA 12:41:19
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
8616,030 ops/s
# Warmup Iteration   2: 8685,788 ops/s
# Warmup Iteration   3: 8797,688 ops/s
Iteration   1: 8664,223 ops/s
Iteration   2: 8827,756 ops/s
Iteration   3: 8631,676 ops/s
Iteration   4: 8526,938 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=118293046, numSharedTasksExecuted=118293046, numSteals=0, numExceptions=0, numParks=316058, numFalseAlarmUnparks=4195, numSharedQueueSwitches=0, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=117388217, numSharedTasksExecuted=117388217, numSteals=0, numExceptions=0, numParks=318966, numFalseAlarmUnparks=3396, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=117657559, numSharedTasksExecuted=117657559, numSteals=0, numExceptions=0, numParks=317842, numFalseAlarmUnparks=2713, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=115593554, numSharedTasksExecuted=115593554, numSteals=0, numExceptions=0, numParks=315105, numFalseAlarmUnparks=2059, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=122386559, numSharedTasksExecuted=122386559, numSteals=0, numExceptions=0, numParks=320536, numFalseAlarmUnparks=1596, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=118541287, numSharedTasksExecuted=118541287, numSteals=0, numExceptions=0, numParks=326077, numFalseAlarmUnparks=1357, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=116526756, numSharedTasksExecuted=116526756, numSteals=0, numExceptions=0, numParks=323114, numFalseAlarmUnparks=1332, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=92430030, numSharedTasksExecuted=92430030, numSteals=0, numExceptions=0, numParks=285140, numFalseAlarmUnparks=1409, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
--------------------------------
8679,753 ops/s

# Run progress: 1,16% complete, ETA 12:39:36
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
8470,596 ops/s
# Warmup Iteration   2: 8779,178 ops/s
# Warmup Iteration   3: 8716,673 ops/s
Iteration   1: 8651,887 ops/s
Iteration   2: 8744,645 ops/s
Iteration   3: 8597,375 ops/s
Iteration   4: 8583,347 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=116286631, numSharedTasksExecuted=116286631, numSteals=0, numExceptions=0, numParks=315123, numFalseAlarmUnparks=4838, numSharedQueueSwitches=0, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=117648349, numSharedTasksExecuted=117648349, numSteals=0, numExceptions=0, numParks=313171, numFalseAlarmUnparks=3744, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=115418939, numSharedTasksExecuted=115418939, numSteals=0, numExceptions=0, numParks=308987, numFalseAlarmUnparks=3644, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=112258392, numSharedTasksExecuted=112258392, numSteals=0, numExceptions=0, numParks=305356, numFalseAlarmUnparks=2838, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=120617004, numSharedTasksExecuted=120617004, numSteals=0, numExceptions=0, numParks=333195, numFalseAlarmUnparks=2870, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=112104109, numSharedTasksExecuted=112104109, numSteals=0, numExceptions=0, numParks=315540, numFalseAlarmUnparks=2661, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=111382939, numSharedTasksExecuted=111382939, numSteals=0, numExceptions=0, numParks=313582, numFalseAlarmUnparks=2781, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=108124645, numSharedTasksExecuted=108124645, numSteals=0, numExceptions=0, numParks=308538, numFalseAlarmUnparks=3138, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
--------------------------------
8517,619 ops/s


Result "___testSimpleScheduling01":
  8642,522 Â±(99.9%) 143,696 ops/s [Average]
  (min, avg, max) = (8517,619, 8642,522, 8827,756), stdev = 95,046
  CI (99.9%): [8498,826, 8786,218] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.___testSimpleScheduling01
# Parameters: (strategy = a-nonblocking)

# Run progress: 1,39% complete, ETA 12:37:48
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
8800,008 ops/s
# Warmup Iteration   2: 9113,949 ops/s
# Warmup Iteration   3: 9130,041 ops/s
Iteration   1: 9028,586 ops/s
Iteration   2: 8957,623 ops/s
Iteration   3: 9024,134 ops/s
Iteration   4: 8975,138 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=125743894, numSharedTasksExecuted=125743894, numSteals=0, numExceptions=0, numParks=329348, numFalseAlarmUnparks=5115, numSharedQueueSwitches=0, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=128811201, numSharedTasksExecuted=128811201, numSteals=0, numExceptions=0, numParks=337569, numFalseAlarmUnparks=3826, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=123732924, numSharedTasksExecuted=123732924, numSteals=0, numExceptions=0, numParks=334667, numFalseAlarmUnparks=2886, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=123212347, numSharedTasksExecuted=123212347, numSteals=0, numExceptions=0, numParks=334257, numFalseAlarmUnparks=2247, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=121254921, numSharedTasksExecuted=121254921, numSteals=0, numExceptions=0, numParks=333765, numFalseAlarmUnparks=1908, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=123007287, numSharedTasksExecuted=123007287, numSteals=0, numExceptions=0, numParks=333714, numFalseAlarmUnparks=1485, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=90078559, numSharedTasksExecuted=90078559, numSteals=0, numExceptions=0, numParks=301240, numFalseAlarmUnparks=1553, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=118229875, numSharedTasksExecuted=118229875, numSteals=0, numExceptions=0, numParks=329755, numFalseAlarmUnparks=1616, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
--------------------------------
9013,109 ops/s

# Run progress: 1,62% complete, ETA 12:36:02
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
9229,555 ops/s
# Warmup Iteration   2: 9110,777 ops/s
# Warmup Iteration   3: 9126,721 ops/s
Iteration   1: 9068,183 ops/s
Iteration   2: 8967,150 ops/s
Iteration   3: 8957,839 ops/s
Iteration   4: 9078,814 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=128706508, numSharedTasksExecuted=128706508, numSteals=0, numExceptions=0, numParks=339610, numFalseAlarmUnparks=3971, numSharedQueueSwitches=0, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=125727477, numSharedTasksExecuted=125727477, numSteals=0, numExceptions=0, numParks=342021, numFalseAlarmUnparks=3876, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=124942335, numSharedTasksExecuted=124942335, numSteals=0, numExceptions=0, numParks=339684, numFalseAlarmUnparks=3398, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=123158197, numSharedTasksExecuted=123158197, numSteals=0, numExceptions=0, numParks=337979, numFalseAlarmUnparks=2375, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=121415520, numSharedTasksExecuted=121415520, numSteals=0, numExceptions=0, numParks=335245, numFalseAlarmUnparks=2066, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=125861414, numSharedTasksExecuted=125861414, numSteals=0, numExceptions=0, numParks=341615, numFalseAlarmUnparks=2041, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=87456383, numSharedTasksExecuted=87456383, numSteals=0, numExceptions=0, numParks=306295, numFalseAlarmUnparks=2131, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=119253174, numSharedTasksExecuted=119253174, numSteals=0, numExceptions=0, numParks=342460, numFalseAlarmUnparks=2447, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
--------------------------------
9006,740 ops/s


Result "___testSimpleScheduling01":
  9007,732 Â±(99.9%) 65,997 ops/s [Average]
  (min, avg, max) = (8957,623, 9007,732, 9078,814), stdev = 43,653
  CI (99.9%): [8941,734, 9073,729] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.___testSimpleScheduling01
# Parameters: (strategy = no-conc)

# Run progress: 1,85% complete, ETA 12:34:14
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
114562,998 ops/s
# Warmup Iteration   2: 97847,181 ops/s
# Warmup Iteration   3: 117445,914 ops/s
Iteration   1: 117300,124 ops/s
Iteration   2: 117452,169 ops/s
Iteration   3: 117293,568 ops/s
Iteration   4: 117353,888 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
117325,550 ops/s

# Run progress: 2,08% complete, ETA 12:32:26
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
114460,611 ops/s
# Warmup Iteration   2: 97661,026 ops/s
# Warmup Iteration   3: 117459,139 ops/s
Iteration   1: 117194,809 ops/s
Iteration   2: 117478,240 ops/s
Iteration   3: 117186,840 ops/s
Iteration   4: 117379,391 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
117275,246 ops/s


Result "___testSimpleScheduling01":
  117323,983 Â±(99.9%) 145,674 ops/s [Average]
  (min, avg, max) = (117186,840, 117323,983, 117478,240), stdev = 96,354
  CI (99.9%): [117178,309, 117469,657] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.___testSimpleScheduling01
# Parameters: (strategy = ForkJoinLifo)

# Run progress: 2,31% complete, ETA 12:30:36
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
5074,730 ops/s
# Warmup Iteration   2: 5130,733 ops/s
# Warmup Iteration   3: 4999,484 ops/s
Iteration   1: 5053,153 ops/s
Iteration   2: 5069,957 ops/s
Iteration   3: 4932,627 ops/s
Iteration   4: 4842,018 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
4836,469 ops/s

# Run progress: 2,55% complete, ETA 12:28:48
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
5105,319 ops/s
# Warmup Iteration   2: 5357,667 ops/s
# Warmup Iteration   3: 5304,955 ops/s
Iteration   1: 4863,543 ops/s
Iteration   2: 4850,583 ops/s
Iteration   3: 4884,461 ops/s
Iteration   4: 4887,267 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
4871,064 ops/s


Result "___testSimpleScheduling01":
  4909,114 Â±(99.9%) 128,468 ops/s [Average]
  (min, avg, max) = (4836,469, 4909,114, 5069,957), stdev = 84,974
  CI (99.9%): [4780,646, 5037,583] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.___testSimpleScheduling01
# Parameters: (strategy = J9FjSharedQueues)

# Run progress: 2,78% complete, ETA 12:26:59
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
3424,446 ops/s
# Warmup Iteration   2: 2958,699 ops/s
# Warmup Iteration   3: 3069,185 ops/s
Iteration   1: 2982,076 ops/s
Iteration   2: 2929,696 ops/s
Iteration   3: 3012,069 ops/s
Iteration   4: 2890,441 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
2920,652 ops/s

# Run progress: 3,01% complete, ETA 12:25:12
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
3790,252 ops/s
# Warmup Iteration   2: 3934,677 ops/s
# Warmup Iteration   3: 3450,668 ops/s
Iteration   1: 3449,588 ops/s
Iteration   2: 3443,318 ops/s
Iteration   3: 3417,468 ops/s
Iteration   4: 3396,019 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
3410,287 ops/s


Result "___testSimpleScheduling01":
  3185,161 Â±(99.9%) 383,457 ops/s [Average]
  (min, avg, max) = (2890,441, 3185,161, 3449,588), stdev = 253,633
  CI (99.9%): [2801,704, 3568,618] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.___testSimpleScheduling01
# Parameters: (strategy = J9FjLifo)

# Run progress: 3,24% complete, ETA 12:23:24
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
3673,771 ops/s
# Warmup Iteration   2: 3685,760 ops/s
# Warmup Iteration   3: 3758,220 ops/s
Iteration   1: 3685,285 ops/s
Iteration   2: 3519,474 ops/s
Iteration   3: 3548,383 ops/s
Iteration   4: 3491,281 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
3586,395 ops/s

# Run progress: 3,47% complete, ETA 12:21:37
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
3811,361 ops/s
# Warmup Iteration   2: 3714,242 ops/s
# Warmup Iteration   3: 3618,895 ops/s
Iteration   1: 3553,776 ops/s
Iteration   2: 3428,197 ops/s
Iteration   3: 3474,324 ops/s
Iteration   4: 3430,031 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
3424,795 ops/s


Result "___testSimpleScheduling01":
  3514,194 Â±(99.9%) 125,316 ops/s [Average]
  (min, avg, max) = (3424,795, 3514,194, 3685,285), stdev = 82,889
  CI (99.9%): [3388,879, 3639,510] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.___testSimpleScheduling01
# Parameters: (strategy = J9FjFifo)

# Run progress: 3,70% complete, ETA 12:19:49
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
3854,958 ops/s
# Warmup Iteration   2: 4097,179 ops/s
# Warmup Iteration   3: 4001,905 ops/s
Iteration   1: 3854,787 ops/s
Iteration   2: 3824,251 ops/s
Iteration   3: 3813,326 ops/s
Iteration   4: 3772,067 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
3820,723 ops/s

# Run progress: 3,94% complete, ETA 12:18:02
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
3588,967 ops/s
# Warmup Iteration   2: 4039,448 ops/s
# Warmup Iteration   3: 3824,672 ops/s
Iteration   1: 3779,810 ops/s
Iteration   2: 3843,743 ops/s
Iteration   3: 3799,513 ops/s
Iteration   4: 3744,757 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
3733,904 ops/s


Result "___testSimpleScheduling01":
  3798,688 Â±(99.9%) 61,104 ops/s [Average]
  (min, avg, max) = (3733,904, 3798,688, 3854,787), stdev = 40,417
  CI (99.9%): [3737,584, 3859,792] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 7 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.recPar_00010a
# Parameters: (strategy = a-sync-block)

# Run progress: 4,17% complete, ETA 12:16:14
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
9858,394 ops/s
# Warmup Iteration   2: 9084,758 ops/s
# Warmup Iteration   3: 10020,525 ops/s
Iteration   1: 9601,339 ops/s
Iteration   2: 9375,960 ops/s
Iteration   3: 9350,935 ops/s
Iteration   4: 9348,250 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2048471321, numSharedTasksExecuted=204847133, numSteals=0, numExceptions=0, numParks=10, numFalseAlarmUnparks=0, numSharedQueueSwitches=408983, numLocalSubmits=1843624188, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1824982751, numSharedTasksExecuted=182498276, numSteals=0, numExceptions=0, numParks=10, numFalseAlarmUnparks=0, numSharedQueueSwitches=418028, numLocalSubmits=1642484475, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=917404461, numSharedTasksExecuted=91740447, numSteals=0, numExceptions=0, numParks=10, numFalseAlarmUnparks=0, numSharedQueueSwitches=255922, numLocalSubmits=825664014, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=762209221, numSharedTasksExecuted=76220923, numSteals=0, numExceptions=0, numParks=10, numFalseAlarmUnparks=0, numSharedQueueSwitches=236571, numLocalSubmits=685988298, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1619864351, numSharedTasksExecuted=161986436, numSteals=0, numExceptions=0, numParks=10, numFalseAlarmUnparks=0, numSharedQueueSwitches=405513, numLocalSubmits=1457877915, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=581022341, numSharedTasksExecuted=58102235, numSteals=0, numExceptions=0, numParks=10, numFalseAlarmUnparks=0, numSharedQueueSwitches=236034, numLocalSubmits=522920106, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1144177881, numSharedTasksExecuted=114417789, numSteals=0, numExceptions=0, numParks=10, numFalseAlarmUnparks=0, numSharedQueueSwitches=351796, numLocalSubmits=1029760092, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1092777681, numSharedTasksExecuted=109277769, numSteals=0, numExceptions=0, numParks=10, numFalseAlarmUnparks=0, numSharedQueueSwitches=366479, numLocalSubmits=983499912, approximateLocalQueueSize=0}
--------------------------------
9388,584 ops/s

# Run progress: 4,40% complete, ETA 12:14:40
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
8208,013 ops/s
# Warmup Iteration   2: 7691,687 ops/s
# Warmup Iteration   3: 6916,539 ops/s
Iteration   1: 7123,907 ops/s
Iteration   2: 7004,367 ops/s
Iteration   3: 6996,469 ops/s
Iteration   4: 7068,175 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=812057377, numSharedTasksExecuted=81205738, numSteals=2, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=223829, numLocalSubmits=730851638, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2020104386, numSharedTasksExecuted=202010439, numSteals=1, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=431726, numLocalSubmits=1818093946, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=585470613, numSharedTasksExecuted=58547063, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=197049, numLocalSubmits=526923552, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=556674173, numSharedTasksExecuted=55667419, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=169762, numLocalSubmits=501006755, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=864798178, numSharedTasksExecuted=86479818, numSteals=1, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=365170, numLocalSubmits=778318359, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=969309042, numSharedTasksExecuted=96930905, numSteals=1, numExceptions=0, numParks=10, numFalseAlarmUnparks=1, numSharedQueueSwitches=217966, numLocalSubmits=872378137, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=681972376, numSharedTasksExecuted=68197239, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=217968, numLocalSubmits=613775138, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1005783863, numSharedTasksExecuted=100578387, numSteals=1, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=366444, numLocalSubmits=905205475, approximateLocalQueueSize=0}
--------------------------------
7011,775 ops/s


Result "recPar_00010a":
  8226,976 Â±(99.9%) 1893,958 ops/s [Average]
  (min, avg, max) = (6996,469, 8226,976, 9601,339), stdev = 1252,736
  CI (99.9%): [6333,018, 10120,934] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 7 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.recPar_00010a
# Parameters: (strategy = a-sync-nocheck)

# Run progress: 4,63% complete, ETA 12:13:04
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
9787,589 ops/s
# Warmup Iteration   2: 11240,412 ops/s
# Warmup Iteration   3: 9996,763 ops/s
Iteration   1: 9953,371 ops/s
Iteration   2: 9928,264 ops/s
Iteration   3: 9892,564 ops/s
Iteration   4: 9897,327 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1039549805, numSharedTasksExecuted=103954981, numSteals=1, numExceptions=0, numParks=11, numFalseAlarmUnparks=2, numSharedQueueSwitches=336473, numLocalSubmits=935594824, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1605817110, numSharedTasksExecuted=160581712, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=378352, numLocalSubmits=1445235399, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1738408951, numSharedTasksExecuted=173840896, numSteals=0, numExceptions=0, numParks=11, numFalseAlarmUnparks=1, numSharedQueueSwitches=374328, numLocalSubmits=1564568055, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1631983573, numSharedTasksExecuted=163198359, numSteals=0, numExceptions=0, numParks=11, numFalseAlarmUnparks=1, numSharedQueueSwitches=338336, numLocalSubmits=1468785215, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=666977431, numSharedTasksExecuted=66697744, numSteals=0, numExceptions=0, numParks=10, numFalseAlarmUnparks=1, numSharedQueueSwitches=313804, numLocalSubmits=600279687, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1015802945, numSharedTasksExecuted=101580295, numSteals=1, numExceptions=0, numParks=10, numFalseAlarmUnparks=0, numSharedQueueSwitches=323093, numLocalSubmits=914222649, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1710015489, numSharedTasksExecuted=171001549, numSteals=1, numExceptions=0, numParks=11, numFalseAlarmUnparks=1, numSharedQueueSwitches=383884, numLocalSubmits=1539013939, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1124054704, numSharedTasksExecuted=112405472, numSteals=1, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=343613, numLocalSubmits=1011649232, approximateLocalQueueSize=0}
--------------------------------
9891,241 ops/s

# Run progress: 4,86% complete, ETA 12:11:27
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
10692,880 ops/s
# Warmup Iteration   2: 10851,235 ops/s
# Warmup Iteration   3: 10280,037 ops/s
Iteration   1: 9940,381 ops/s
Iteration   2: 9944,234 ops/s
Iteration   3: 9930,915 ops/s
Iteration   4: 9895,244 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=989603711, numSharedTasksExecuted=98960371, numSteals=2, numExceptions=0, numParks=10, numFalseAlarmUnparks=0, numSharedQueueSwitches=338062, numLocalSubmits=890643338, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=656116027, numSharedTasksExecuted=65611603, numSteals=2, numExceptions=0, numParks=10, numFalseAlarmUnparks=1, numSharedQueueSwitches=331828, numLocalSubmits=590504424, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1084414955, numSharedTasksExecuted=108441497, numSteals=0, numExceptions=0, numParks=10, numFalseAlarmUnparks=0, numSharedQueueSwitches=335772, numLocalSubmits=975973461, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1328662464, numSharedTasksExecuted=132866248, numSteals=1, numExceptions=0, numParks=10, numFalseAlarmUnparks=1, numSharedQueueSwitches=310451, numLocalSubmits=1195796217, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1321431813, numSharedTasksExecuted=132143183, numSteals=0, numExceptions=0, numParks=10, numFalseAlarmUnparks=1, numSharedQueueSwitches=375920, numLocalSubmits=1189288631, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1786118236, numSharedTasksExecuted=178611826, numSteals=1, numExceptions=0, numParks=10, numFalseAlarmUnparks=0, numSharedQueueSwitches=380578, numLocalSubmits=1607506411, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1739655082, numSharedTasksExecuted=173965508, numSteals=3, numExceptions=0, numParks=13, numFalseAlarmUnparks=3, numSharedQueueSwitches=387726, numLocalSubmits=1565689571, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1686497720, numSharedTasksExecuted=168649772, numSteals=2, numExceptions=0, numParks=10, numFalseAlarmUnparks=1, numSharedQueueSwitches=400418, numLocalSubmits=1517847947, approximateLocalQueueSize=0}
--------------------------------
10074,560 ops/s


Result "recPar_00010a":
  9934,810 Â±(99.9%) 82,355 ops/s [Average]
  (min, avg, max) = (9891,241, 9934,810, 10074,560), stdev = 54,473
  CI (99.9%): [9852,455, 10017,165] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 7 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.recPar_00010a
# Parameters: (strategy = a-lock-block)

# Run progress: 5,09% complete, ETA 12:09:48
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
10652,122 ops/s
# Warmup Iteration   2: 11003,966 ops/s
# Warmup Iteration   3: 10098,825 ops/s
Iteration   1: 10130,065 ops/s
Iteration   2: 10082,905 ops/s
Iteration   3: 10079,819 ops/s
Iteration   4: 10084,592 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2189517573, numSharedTasksExecuted=218951758, numSteals=1, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=429755, numLocalSubmits=1970565814, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1052715909, numSharedTasksExecuted=105271592, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=375002, numLocalSubmits=947444318, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2168908301, numSharedTasksExecuted=216890831, numSteals=0, numExceptions=0, numParks=10, numFalseAlarmUnparks=1, numSharedQueueSwitches=410992, numLocalSubmits=1952017470, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1133767941, numSharedTasksExecuted=113376795, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=296808, numLocalSubmits=1020391146, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2023455201, numSharedTasksExecuted=202345521, numSteals=0, numExceptions=0, numParks=10, numFalseAlarmUnparks=1, numSharedQueueSwitches=440138, numLocalSubmits=1821109680, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=613198251, numSharedTasksExecuted=61319826, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=317813, numLocalSubmits=551878425, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=666677151, numSharedTasksExecuted=66667716, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=341739, numLocalSubmits=600009435, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=864669681, numSharedTasksExecuted=86466969, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=354735, numLocalSubmits=778202712, approximateLocalQueueSize=0}
--------------------------------
10015,545 ops/s

# Run progress: 5,32% complete, ETA 12:08:10
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
7699,736 ops/s
# Warmup Iteration   2: 7371,886 ops/s
# Warmup Iteration   3: 7150,364 ops/s
Iteration   1: 6817,433 ops/s
Iteration   2: 6667,165 ops/s
Iteration   3: 6643,396 ops/s
Iteration   4: 6669,301 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1265718231, numSharedTasksExecuted=126571824, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=275384, numLocalSubmits=1139146407, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1089815949, numSharedTasksExecuted=108981595, numSteals=1, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=324046, numLocalSubmits=980834353, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=749227495, numSharedTasksExecuted=74922750, numSteals=1, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=206389, numLocalSubmits=674304744, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=803813147, numSharedTasksExecuted=80381316, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=191458, numLocalSubmits=723431832, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1208076631, numSharedTasksExecuted=120807664, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=328037, numLocalSubmits=1087268967, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=718797292, numSharedTasksExecuted=71879730, numSteals=1, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=205945, numLocalSubmits=646917562, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=627692531, numSharedTasksExecuted=62769254, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=240041, numLocalSubmits=564923277, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=675038732, numSharedTasksExecuted=67503875, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=287684, numLocalSubmits=607534858, approximateLocalQueueSize=0}
--------------------------------
6674,766 ops/s


Result "recPar_00010a":
  8386,499 Â±(99.9%) 2697,805 ops/s [Average]
  (min, avg, max) = (6643,396, 8386,499, 10130,065), stdev = 1784,431
  CI (99.9%): [5688,694, 11084,303] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 7 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.recPar_00010a
# Parameters: (strategy = a-nonblocking)

# Run progress: 5,56% complete, ETA 12:06:30
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
8579,736 ops/s
# Warmup Iteration   2: 9945,293 ops/s
# Warmup Iteration   3: 8893,667 ops/s
Iteration   1: 8649,426 ops/s
Iteration   2: 8543,146 ops/s
Iteration   3: 8627,667 ops/s
Iteration   4: 8538,643 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1359463683, numSharedTasksExecuted=135946369, numSteals=1, numExceptions=0, numParks=12, numFalseAlarmUnparks=1, numSharedQueueSwitches=326373, numLocalSubmits=1223517313, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1601569216, numSharedTasksExecuted=160156922, numSteals=1, numExceptions=0, numParks=11, numFalseAlarmUnparks=1, numSharedQueueSwitches=393095, numLocalSubmits=1441412293, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1376125631, numSharedTasksExecuted=137612564, numSteals=0, numExceptions=0, numParks=12, numFalseAlarmUnparks=1, numSharedQueueSwitches=302398, numLocalSubmits=1238513067, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=941609589, numSharedTasksExecuted=94160960, numSteals=0, numExceptions=0, numParks=11, numFalseAlarmUnparks=0, numSharedQueueSwitches=239599, numLocalSubmits=847448630, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1252646081, numSharedTasksExecuted=125264609, numSteals=0, numExceptions=0, numParks=12, numFalseAlarmUnparks=1, numSharedQueueSwitches=360151, numLocalSubmits=1127381472, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=568509791, numSharedTasksExecuted=56850980, numSteals=0, numExceptions=0, numParks=13, numFalseAlarmUnparks=3, numSharedQueueSwitches=254669, numLocalSubmits=511658811, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=988321621, numSharedTasksExecuted=98832163, numSteals=0, numExceptions=0, numParks=11, numFalseAlarmUnparks=0, numSharedQueueSwitches=297738, numLocalSubmits=889489458, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1047504396, numSharedTasksExecuted=104750441, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=349569, numLocalSubmits=942753956, approximateLocalQueueSize=0}
--------------------------------
8583,641 ops/s

# Run progress: 5,79% complete, ETA 12:04:50
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
10648,083 ops/s
# Warmup Iteration   2: 10626,848 ops/s
# Warmup Iteration   3: 10024,651 ops/s
Iteration   1: 9710,128 ops/s
Iteration   2: 9650,705 ops/s
Iteration   3: 9678,839 ops/s
Iteration   4: 9645,141 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1866807735, numSharedTasksExecuted=186680773, numSteals=2, numExceptions=0, numParks=10, numFalseAlarmUnparks=0, numSharedQueueSwitches=384691, numLocalSubmits=1680126960, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1171157252, numSharedTasksExecuted=117115725, numSteals=2, numExceptions=0, numParks=10, numFalseAlarmUnparks=1, numSharedQueueSwitches=371742, numLocalSubmits=1054041525, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1838970102, numSharedTasksExecuted=183897012, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=361190, numLocalSubmits=1655073091, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=611424982, numSharedTasksExecuted=61142500, numSteals=0, numExceptions=0, numParks=8, numFalseAlarmUnparks=0, numSharedQueueSwitches=235930, numLocalSubmits=550282484, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1662784793, numSharedTasksExecuted=166278481, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=400284, numLocalSubmits=1496506313, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=670872195, numSharedTasksExecuted=67087219, numSteals=2, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=285363, numLocalSubmits=603784974, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=879393552, numSharedTasksExecuted=87939356, numSteals=1, numExceptions=0, numParks=10, numFalseAlarmUnparks=0, numSharedQueueSwitches=318028, numLocalSubmits=791454196, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1598469397, numSharedTasksExecuted=159846942, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=399876, numLocalSubmits=1438622457, approximateLocalQueueSize=0}
--------------------------------
9688,806 ops/s


Result "recPar_00010a":
  9131,614 Â±(99.9%) 867,386 ops/s [Average]
  (min, avg, max) = (8538,643, 9131,614, 9710,128), stdev = 573,722
  CI (99.9%): [8264,228, 9999,000] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 7 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.recPar_00010a
# Parameters: (strategy = no-conc)

# Run progress: 6,02% complete, ETA 12:03:09
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
81133,900 ops/s
# Warmup Iteration   2: 84812,616 ops/s
# Warmup Iteration   3: 79137,973 ops/s
Iteration   1: 81320,117 ops/s
Iteration   2: 81450,770 ops/s
Iteration   3: 81639,747 ops/s
Iteration   4: 81626,576 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
81244,400 ops/s

# Run progress: 6,25% complete, ETA 12:01:28
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
83827,694 ops/s
# Warmup Iteration   2: 85978,533 ops/s
# Warmup Iteration   3: 79217,486 ops/s
Iteration   1: 80491,451 ops/s
Iteration   2: 79629,548 ops/s
Iteration   3: 80515,760 ops/s
Iteration   4: 80519,267 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
80531,642 ops/s


Result "recPar_00010a":
  80896,928 Â±(99.9%) 993,023 ops/s [Average]
  (min, avg, max) = (79629,548, 80896,928, 81639,747), stdev = 656,823
  CI (99.9%): [79903,905, 81889,950] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 7 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.recPar_00010a
# Parameters: (strategy = ForkJoinLifo)

# Run progress: 6,48% complete, ETA 11:59:46
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
7219,358 ops/s
# Warmup Iteration   2: 7944,329 ops/s
# Warmup Iteration   3: 7301,741 ops/s
Iteration   1: 7282,918 ops/s
Iteration   2: 7134,731 ops/s
Iteration   3: 7271,159 ops/s
Iteration   4: 7294,792 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
7307,201 ops/s

# Run progress: 6,71% complete, ETA 11:58:04
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
7774,257 ops/s
# Warmup Iteration   2: 9230,037 ops/s
# Warmup Iteration   3: 8228,597 ops/s
Iteration   1: 8392,773 ops/s
Iteration   2: 8402,962 ops/s
Iteration   3: 8437,663 ops/s
Iteration   4: 8454,811 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
8424,535 ops/s


Result "recPar_00010a":
  7840,354 Â±(99.9%) 930,855 ops/s [Average]
  (min, avg, max) = (7134,731, 7840,354, 8454,811), stdev = 615,703
  CI (99.9%): [6909,499, 8771,209] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 7 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.recPar_00010a
# Parameters: (strategy = J9FjSharedQueues)

# Run progress: 6,94% complete, ETA 11:56:21
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
2028,604 ops/s
# Warmup Iteration   2: 2141,135 ops/s
# Warmup Iteration   3: 2146,466 ops/s
Iteration   1: 1992,528 ops/s
Iteration   2: 1954,632 ops/s
Iteration   3: 1947,906 ops/s
Iteration   4: 1955,119 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
1955,306 ops/s

# Run progress: 7,18% complete, ETA 11:54:38
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
2096,261 ops/s
# Warmup Iteration   2: 2165,413 ops/s
# Warmup Iteration   3: 2178,887 ops/s
Iteration   1: 2018,527 ops/s
Iteration   2: 1984,769 ops/s
Iteration   3: 1991,735 ops/s
Iteration   4: 1985,572 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
1984,046 ops/s


Result "recPar_00010a":
  1977,014 Â±(99.9%) 34,411 ops/s [Average]
  (min, avg, max) = (1947,906, 1977,014, 2018,527), stdev = 22,760
  CI (99.9%): [1942,603, 2011,425] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 7 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.recPar_00010a
# Parameters: (strategy = J9FjLifo)

# Run progress: 7,41% complete, ETA 11:52:55
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
6517,647 ops/s
# Warmup Iteration   2: 6965,279 ops/s
# Warmup Iteration   3: 6289,315 ops/s
Iteration   1: 6205,059 ops/s
Iteration   2: 6211,714 ops/s
Iteration   3: 6241,352 ops/s
Iteration   4: 6259,628 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
6250,331 ops/s

# Run progress: 7,64% complete, ETA 11:51:12
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
7139,342 ops/s
# Warmup Iteration   2: 7382,224 ops/s
# Warmup Iteration   3: 6967,069 ops/s
Iteration   1: 7096,645 ops/s
Iteration   2: 7118,912 ops/s
Iteration   3: 7168,166 ops/s
Iteration   4: 7186,876 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
7153,777 ops/s


Result "recPar_00010a":
  6689,246 Â±(99.9%) 727,452 ops/s [Average]
  (min, avg, max) = (6205,059, 6689,246, 7186,876), stdev = 481,165
  CI (99.9%): [5961,794, 7416,699] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 7 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.recPar_00010a
# Parameters: (strategy = J9FjFifo)

# Run progress: 7,87% complete, ETA 11:49:28
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
7154,043 ops/s
# Warmup Iteration   2: 7585,408 ops/s
# Warmup Iteration   3: 6898,818 ops/s
Iteration   1: 6855,597 ops/s
Iteration   2: 6871,966 ops/s
Iteration   3: 6904,514 ops/s
Iteration   4: 6924,002 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
6893,263 ops/s

# Run progress: 8,10% complete, ETA 11:47:44
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
6595,992 ops/s
# Warmup Iteration   2: 6689,232 ops/s
# Warmup Iteration   3: 6069,128 ops/s
Iteration   1: 6243,118 ops/s
Iteration   2: 6291,879 ops/s
Iteration   3: 6232,992 ops/s
Iteration   4: 6257,473 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
6250,268 ops/s


Result "recPar_00010a":
  6572,507 Â±(99.9%) 506,987 ops/s [Average]
  (min, avg, max) = (6232,992, 6572,507, 6924,002), stdev = 335,341
  CI (99.9%): [6065,520, 7079,495] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 7 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.recPar_00010b
# Parameters: (strategy = a-sync-block)

# Run progress: 8,33% complete, ETA 11:46:00
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
916296,021 ops/s
# Warmup Iteration   2: 958991,668 ops/s
# Warmup Iteration   3: 879424,883 ops/s
Iteration   1: 886482,063 ops/s
Iteration   2: 887441,768 ops/s
Iteration   3: 869389,001 ops/s
Iteration   4: 874966,963 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=197648906, numSharedTasksExecuted=19766328, numSteals=22266, numExceptions=0, numParks=189577, numFalseAlarmUnparks=25446, numSharedQueueSwitches=19711617, numLocalSubmits=177885873, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=179659452, numSharedTasksExecuted=17965766, numSteals=22577, numExceptions=0, numParks=180771, numFalseAlarmUnparks=24710, numSharedQueueSwitches=17911968, numLocalSubmits=161693042, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=168226152, numSharedTasksExecuted=16821778, numSteals=21956, numExceptions=0, numParks=165373, numFalseAlarmUnparks=21617, numSharedQueueSwitches=16775839, numLocalSubmits=151402637, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=150021061, numSharedTasksExecuted=15002390, numSteals=19244, numExceptions=0, numParks=153407, numFalseAlarmUnparks=22652, numSharedQueueSwitches=14960029, numLocalSubmits=135018778, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=128767206, numSharedTasksExecuted=12877168, numSteals=17266, numExceptions=0, numParks=138980, numFalseAlarmUnparks=22639, numSharedQueueSwitches=12838933, numLocalSubmits=115890630, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=68060368, numSharedTasksExecuted=6805535, numSteals=13848, numExceptions=0, numParks=98109, numFalseAlarmUnparks=19067, numSharedQueueSwitches=6777719, numLocalSubmits=61254100, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=29704906, numSharedTasksExecuted=2970053, numSteals=10157, numExceptions=0, numParks=67484, numFalseAlarmUnparks=14090, numSharedQueueSwitches=2953312, numLocalSubmits=26734078, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=14136747, numSharedTasksExecuted=1413469, numSteals=6000, numExceptions=0, numParks=41754, numFalseAlarmUnparks=9414, numSharedQueueSwitches=1402295, numLocalSubmits=12723173, approximateLocalQueueSize=0}
--------------------------------
887277,724 ops/s

# Run progress: 8,56% complete, ETA 11:44:16
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
924651,172 ops/s
# Warmup Iteration   2: 967304,105 ops/s
# Warmup Iteration   3: 876307,393 ops/s
Iteration   1: 891847,457 ops/s
Iteration   2: 895154,665 ops/s
Iteration   3: 885048,239 ops/s
Iteration   4: 895968,551 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=191043118, numSharedTasksExecuted=19105073, numSteals=24198, numExceptions=0, numParks=190600, numFalseAlarmUnparks=25808, numSharedQueueSwitches=19047482, numLocalSubmits=171939397, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=183188113, numSharedTasksExecuted=18318162, numSteals=24147, numExceptions=0, numParks=178684, numFalseAlarmUnparks=24268, numSharedQueueSwitches=18265511, numLocalSubmits=164868107, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=171661070, numSharedTasksExecuted=17165463, numSteals=22175, numExceptions=0, numParks=165734, numFalseAlarmUnparks=23680, numSharedQueueSwitches=17116695, numLocalSubmits=154493909, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=159588183, numSharedTasksExecuted=15959937, numSteals=19627, numExceptions=0, numParks=150374, numFalseAlarmUnparks=21459, numSharedQueueSwitches=15916210, numLocalSubmits=143630997, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=129076697, numSharedTasksExecuted=12908181, numSteals=17754, numExceptions=0, numParks=137000, numFalseAlarmUnparks=22936, numSharedQueueSwitches=12871918, numLocalSubmits=116169585, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=67393274, numSharedTasksExecuted=6738748, numSteals=14386, numExceptions=0, numParks=97130, numFalseAlarmUnparks=18984, numSharedQueueSwitches=6715740, numLocalSubmits=60653421, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=32044516, numSharedTasksExecuted=3204033, numSteals=10062, numExceptions=0, numParks=67260, numFalseAlarmUnparks=14071, numSharedQueueSwitches=3188757, numLocalSubmits=28839844, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=13629517, numSharedTasksExecuted=1362859, numSteals=6287, numExceptions=0, numParks=42084, numFalseAlarmUnparks=9599, numSharedQueueSwitches=1353239, numLocalSubmits=12266772, approximateLocalQueueSize=0}
--------------------------------
893501,270 ops/s


Result "recPar_00010b":
  886707,770 Â±(99.9%) 13055,530 ops/s [Average]
  (min, avg, max) = (869389,001, 886707,770, 895968,551), stdev = 8635,425
  CI (99.9%): [873652,240, 899763,300] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 7 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.recPar_00010b
# Parameters: (strategy = a-sync-nocheck)

# Run progress: 8,80% complete, ETA 11:42:31
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
901291,601 ops/s
# Warmup Iteration   2: 945284,470 ops/s
# Warmup Iteration   3: 890980,194 ops/s
Iteration   1: 881152,039 ops/s
Iteration   2: 882782,880 ops/s
Iteration   3: 887580,532 ops/s
Iteration   4: 890536,010 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=196000793, numSharedTasksExecuted=19599862, numSteals=20701, numExceptions=0, numParks=183361, numFalseAlarmUnparks=23819, numSharedQueueSwitches=19545123, numLocalSubmits=176400235, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=183623679, numSharedTasksExecuted=18362299, numSteals=19943, numExceptions=0, numParks=174170, numFalseAlarmUnparks=23438, numSharedQueueSwitches=18308792, numLocalSubmits=165261317, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=170405972, numSharedTasksExecuted=17040873, numSteals=18416, numExceptions=0, numParks=161099, numFalseAlarmUnparks=22411, numSharedQueueSwitches=16992143, numLocalSubmits=153365312, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=154134040, numSharedTasksExecuted=15413342, numSteals=17602, numExceptions=0, numParks=147168, numFalseAlarmUnparks=21281, numSharedQueueSwitches=15370985, numLocalSubmits=138720287, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=131114536, numSharedTasksExecuted=13111440, numSteals=15701, numExceptions=0, numParks=131799, numFalseAlarmUnparks=21255, numSharedQueueSwitches=13069181, numLocalSubmits=118002988, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=64589866, numSharedTasksExecuted=6459239, numSteals=11949, numExceptions=0, numParks=92791, numFalseAlarmUnparks=18006, numSharedQueueSwitches=6433944, numLocalSubmits=58131464, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=26981291, numSharedTasksExecuted=2698169, numSteals=7996, numExceptions=0, numParks=60074, numFalseAlarmUnparks=12549, numSharedQueueSwitches=2684559, numLocalSubmits=24283552, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=12820021, numSharedTasksExecuted=1281803, numSteals=4872, numExceptions=0, numParks=36272, numFalseAlarmUnparks=8169, numSharedQueueSwitches=1270821, numLocalSubmits=11538016, approximateLocalQueueSize=0}
--------------------------------
881926,182 ops/s

# Run progress: 9,03% complete, ETA 11:40:47
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
915871,224 ops/s
# Warmup Iteration   2: 932269,808 ops/s
# Warmup Iteration   3: 868709,656 ops/s
Iteration   1: 880832,420 ops/s
Iteration   2: 877634,327 ops/s
Iteration   3: 876340,750 ops/s
Iteration   4: 879612,162 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=190594588, numSharedTasksExecuted=19059837, numSteals=23577, numExceptions=0, numParks=193550, numFalseAlarmUnparks=26560, numSharedQueueSwitches=19004336, numLocalSubmits=171535198, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=179621091, numSharedTasksExecuted=17962488, numSteals=22128, numExceptions=0, numParks=181700, numFalseAlarmUnparks=25032, numSharedQueueSwitches=17910577, numLocalSubmits=161659149, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=169847883, numSharedTasksExecuted=16984659, numSteals=20885, numExceptions=0, numParks=166105, numFalseAlarmUnparks=23273, numSharedQueueSwitches=16938988, numLocalSubmits=152862746, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=152264229, numSharedTasksExecuted=15225538, numSteals=20358, numExceptions=0, numParks=154255, numFalseAlarmUnparks=22870, numSharedQueueSwitches=15183068, numLocalSubmits=137036725, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=130311029, numSharedTasksExecuted=13030919, numSteals=17935, numExceptions=0, numParks=138280, numFalseAlarmUnparks=23134, numSharedQueueSwitches=12992489, numLocalSubmits=117279717, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=67382227, numSharedTasksExecuted=6738606, numSteals=13532, numExceptions=0, numParks=97177, numFalseAlarmUnparks=19333, numSharedQueueSwitches=6708072, numLocalSubmits=60644512, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=29889975, numSharedTasksExecuted=2989135, numSteals=9656, numExceptions=0, numParks=66131, numFalseAlarmUnparks=14058, numSharedQueueSwitches=2974360, numLocalSubmits=26901744, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=12584586, numSharedTasksExecuted=1258386, numSteals=6046, numExceptions=0, numParks=40823, numFalseAlarmUnparks=9578, numSharedQueueSwitches=1248898, numLocalSubmits=11326249, approximateLocalQueueSize=0}
--------------------------------
876471,739 ops/s


Result "recPar_00010b":
  881486,904 Â±(99.9%) 6972,477 ops/s [Average]
  (min, avg, max) = (876340,750, 881486,904, 890536,010), stdev = 4611,862
  CI (99.9%): [874514,427, 888459,381] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 7 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.recPar_00010b
# Parameters: (strategy = a-lock-block)

# Run progress: 9,26% complete, ETA 11:39:03
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
936549,989 ops/s
# Warmup Iteration   2: 956494,832 ops/s
# Warmup Iteration   3: 855858,394 ops/s
Iteration   1: 880206,921 ops/s
Iteration   2: 881142,078 ops/s
Iteration   3: 885336,363 ops/s
Iteration   4: 884706,480 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=194760148, numSharedTasksExecuted=19475055, numSteals=24450, numExceptions=0, numParks=188885, numFalseAlarmUnparks=25521, numSharedQueueSwitches=19420881, numLocalSubmits=175282692, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=180704554, numSharedTasksExecuted=18070789, numSteals=22267, numExceptions=0, numParks=178138, numFalseAlarmUnparks=24579, numSharedQueueSwitches=18020936, numLocalSubmits=162634571, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=171273973, numSharedTasksExecuted=17127114, numSteals=21336, numExceptions=0, numParks=165250, numFalseAlarmUnparks=24121, numSharedQueueSwitches=17080362, numLocalSubmits=154145793, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=153802356, numSharedTasksExecuted=15380590, numSteals=19281, numExceptions=0, numParks=150116, numFalseAlarmUnparks=23166, numSharedQueueSwitches=15335558, numLocalSubmits=138422215, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=128945783, numSharedTasksExecuted=12895894, numSteals=17405, numExceptions=0, numParks=136098, numFalseAlarmUnparks=22815, numSharedQueueSwitches=12857399, numLocalSubmits=116052943, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=66741792, numSharedTasksExecuted=6673692, numSteals=14374, numExceptions=0, numParks=94560, numFalseAlarmUnparks=18123, numSharedQueueSwitches=6650560, numLocalSubmits=60067389, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=29760088, numSharedTasksExecuted=2975733, numSteals=9733, numExceptions=0, numParks=65063, numFalseAlarmUnparks=13484, numSharedQueueSwitches=2959688, numLocalSubmits=26784057, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=11738654, numSharedTasksExecuted=1173875, numSteals=6077, numExceptions=0, numParks=39087, numFalseAlarmUnparks=9159, numSharedQueueSwitches=1165310, numLocalSubmits=10564946, approximateLocalQueueSize=0}
--------------------------------
882478,801 ops/s

# Run progress: 9,49% complete, ETA 11:37:18
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
925814,470 ops/s
# Warmup Iteration   2: 937355,453 ops/s
# Warmup Iteration   3: 894581,078 ops/s
Iteration   1: 877854,098 ops/s
Iteration   2: 880753,667 ops/s
Iteration   3: 887447,844 ops/s
Iteration   4: 883235,963 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=196859815, numSharedTasksExecuted=19685722, numSteals=20831, numExceptions=0, numParks=183165, numFalseAlarmUnparks=24454, numSharedQueueSwitches=19631454, numLocalSubmits=177173091, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=180578160, numSharedTasksExecuted=18057954, numSteals=19457, numExceptions=0, numParks=172813, numFalseAlarmUnparks=23438, numSharedQueueSwitches=18008271, numLocalSubmits=162520404, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=171045101, numSharedTasksExecuted=17104715, numSteals=18240, numExceptions=0, numParks=159321, numFalseAlarmUnparks=22521, numSharedQueueSwitches=17057430, numLocalSubmits=153940654, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=154566741, numSharedTasksExecuted=15456658, numSteals=17285, numExceptions=0, numParks=146580, numFalseAlarmUnparks=21548, numSharedQueueSwitches=15412495, numLocalSubmits=139110008, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=130128603, numSharedTasksExecuted=13012777, numSteals=15716, numExceptions=0, numParks=130724, numFalseAlarmUnparks=21158, numSharedQueueSwitches=12976452, numLocalSubmits=117115544, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=66024270, numSharedTasksExecuted=6602042, numSteals=11809, numExceptions=0, numParks=89030, numFalseAlarmUnparks=17419, numSharedQueueSwitches=6579595, numLocalSubmits=59421700, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=26220990, numSharedTasksExecuted=2622391, numSteals=8043, numExceptions=0, numParks=59499, numFalseAlarmUnparks=12762, numSharedQueueSwitches=2607787, numLocalSubmits=23599611, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=11020778, numSharedTasksExecuted=1102194, numSteals=4568, numExceptions=0, numParks=34757, numFalseAlarmUnparks=8061, numSharedQueueSwitches=1093726, numLocalSubmits=9918993, approximateLocalQueueSize=0}
--------------------------------
877099,869 ops/s


Result "recPar_00010b":
  882026,208 Â±(99.9%) 4952,846 ops/s [Average]
  (min, avg, max) = (877099,869, 882026,208, 887447,844), stdev = 3276,001
  CI (99.9%): [877073,362, 886979,054] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 7 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.recPar_00010b
# Parameters: (strategy = a-nonblocking)

# Run progress: 9,72% complete, ETA 11:35:33
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
936365,633 ops/s
# Warmup Iteration   2: 968111,396 ops/s
# Warmup Iteration   3: 858046,817 ops/s
Iteration   1: 879690,302 ops/s
Iteration   2: 884261,833 ops/s
Iteration   3: 884824,065 ops/s
Iteration   4: 885201,705 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=195627660, numSharedTasksExecuted=19563998, numSteals=22555, numExceptions=0, numParks=180779, numFalseAlarmUnparks=24127, numSharedQueueSwitches=19512264, numLocalSubmits=176066426, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=181828369, numSharedTasksExecuted=18183161, numSteals=22931, numExceptions=0, numParks=171716, numFalseAlarmUnparks=23033, numSharedQueueSwitches=18132515, numLocalSubmits=163645642, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=166627340, numSharedTasksExecuted=16662489, numSteals=21536, numExceptions=0, numParks=158527, numFalseAlarmUnparks=22078, numSharedQueueSwitches=16618067, numLocalSubmits=149964062, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=155341454, numSharedTasksExecuted=15534260, numSteals=19604, numExceptions=0, numParks=144942, numFalseAlarmUnparks=21091, numSharedQueueSwitches=15493798, numLocalSubmits=139807122, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=136038498, numSharedTasksExecuted=13602639, numSteals=19670, numExceptions=0, numParks=129544, numFalseAlarmUnparks=19661, numSharedQueueSwitches=13563805, numLocalSubmits=122433631, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=64282975, numSharedTasksExecuted=6428087, numSteals=13595, numExceptions=0, numParks=90124, numFalseAlarmUnparks=17277, numSharedQueueSwitches=6405483, numLocalSubmits=57854320, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=27392157, numSharedTasksExecuted=2739056, numSteals=9506, numExceptions=0, numParks=59740, numFalseAlarmUnparks=12539, numSharedQueueSwitches=2724831, numLocalSubmits=24652997, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=12389015, numSharedTasksExecuted=1239064, numSteals=5631, numExceptions=0, numParks=36560, numFalseAlarmUnparks=8202, numSharedQueueSwitches=1231132, numLocalSubmits=11150514, approximateLocalQueueSize=0}
--------------------------------
887614,899 ops/s

# Run progress: 9,95% complete, ETA 11:33:48
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
941957,170 ops/s
# Warmup Iteration   2: 971541,055 ops/s
# Warmup Iteration   3: 849533,864 ops/s
Iteration   1: 893185,267 ops/s
Iteration   2: 893802,854 ops/s
Iteration   3: 886452,637 ops/s
Iteration   4: 892222,040 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=196859324, numSharedTasksExecuted=19684671, numSteals=22378, numExceptions=0, numParks=175956, numFalseAlarmUnparks=22037, numSharedQueueSwitches=19630729, numLocalSubmits=177171800, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=185080433, numSharedTasksExecuted=18508793, numSteals=19821, numExceptions=0, numParks=166836, numFalseAlarmUnparks=22092, numSharedQueueSwitches=18461298, numLocalSubmits=166573147, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=175903235, numSharedTasksExecuted=17590182, numSteals=19170, numExceptions=0, numParks=153534, numFalseAlarmUnparks=20660, numSharedQueueSwitches=17545627, numLocalSubmits=158312560, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=154163377, numSharedTasksExecuted=15417336, numSteals=17389, numExceptions=0, numParks=141825, numFalseAlarmUnparks=20268, numSharedQueueSwitches=15379246, numLocalSubmits=138747737, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=133103535, numSharedTasksExecuted=13310274, numSteals=16254, numExceptions=0, numParks=126652, numFalseAlarmUnparks=19976, numSharedQueueSwitches=13273559, numLocalSubmits=119793190, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=64502826, numSharedTasksExecuted=6450416, numSteals=11748, numExceptions=0, numParks=85400, numFalseAlarmUnparks=16277, numSharedQueueSwitches=6427079, numLocalSubmits=58052932, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=26945178, numSharedTasksExecuted=2694331, numSteals=8323, numExceptions=0, numParks=56545, numFalseAlarmUnparks=11588, numSharedQueueSwitches=2681048, numLocalSubmits=24250684, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=11134490, numSharedTasksExecuted=1113244, numSteals=5052, numExceptions=0, numParks=33668, numFalseAlarmUnparks=7709, numSharedQueueSwitches=1102980, numLocalSubmits=10021101, approximateLocalQueueSize=0}
--------------------------------
896701,847 ops/s


Result "recPar_00010b":
  888395,745 Â±(99.9%) 8063,654 ops/s [Average]
  (min, avg, max) = (879690,302, 888395,745, 896701,847), stdev = 5333,608
  CI (99.9%): [880332,091, 896459,399] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 7 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.recPar_00010b
# Parameters: (strategy = no-conc)

# Run progress: 10,19% complete, ETA 11:32:03
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
70991911,576 ops/s
# Warmup Iteration   2: 73556796,110 ops/s
# Warmup Iteration   3: 68031713,972 ops/s
Iteration   1: 68535217,033 ops/s
Iteration   2: 68583457,132 ops/s
Iteration   3: 68622608,560 ops/s
Iteration   4: 68631321,871 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
68353224,471 ops/s

# Run progress: 10,42% complete, ETA 11:30:18
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
72682255,267 ops/s
# Warmup Iteration   2: 68690831,641 ops/s
# Warmup Iteration   3: 65634867,706 ops/s
Iteration   1: 66770506,818 ops/s
Iteration   2: 66916735,633 ops/s
Iteration   3: 66997734,855 ops/s
Iteration   4: 66916721,119 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
66934108,463 ops/s


Result "recPar_00010b":
  67726163,596 Â±(99.9%) 1312915,594 ops/s [Average]
  (min, avg, max) = (66770506,818, 67726163,596, 68631321,871), stdev = 868412,375
  CI (99.9%): [66413248,001, 69039079,190] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 7 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.recPar_00010b
# Parameters: (strategy = ForkJoinLifo)

# Run progress: 10,65% complete, ETA 11:28:33
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
946166,510 ops/s
# Warmup Iteration   2: 961389,994 ops/s
# Warmup Iteration   3: 897609,109 ops/s
Iteration   1: 893183,325 ops/s
Iteration   2: 885039,716 ops/s
Iteration   3: 887967,990 ops/s
Iteration   4: 885280,328 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
887173,299 ops/s

# Run progress: 10,88% complete, ETA 11:26:47
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
977400,831 ops/s
# Warmup Iteration   2: 988246,419 ops/s
# Warmup Iteration   3: 925294,641 ops/s
Iteration   1: 912541,531 ops/s
Iteration   2: 914836,702 ops/s
Iteration   3: 914540,603 ops/s
Iteration   4: 913763,660 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
914632,106 ops/s


Result "recPar_00010b":
  900895,926 Â±(99.9%) 21265,338 ops/s [Average]
  (min, avg, max) = (885039,716, 900895,926, 914836,702), stdev = 14065,704
  CI (99.9%): [879630,588, 922161,264] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 7 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.recPar_00010b
# Parameters: (strategy = J9FjSharedQueues)

# Run progress: 11,11% complete, ETA 11:25:01
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
748337,751 ops/s
# Warmup Iteration   2: 774757,665 ops/s
# Warmup Iteration   3: 742654,802 ops/s
Iteration   1: 711630,262 ops/s
Iteration   2: 685481,905 ops/s
Iteration   3: 694250,342 ops/s
Iteration   4: 703874,090 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
712869,080 ops/s

# Run progress: 11,34% complete, ETA 11:23:16
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
736234,048 ops/s
# Warmup Iteration   2: 812160,231 ops/s
# Warmup Iteration   3: 759962,157 ops/s
Iteration   1: 707958,056 ops/s
Iteration   2: 693342,351 ops/s
Iteration   3: 717674,381 ops/s
Iteration   4: 707429,598 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
722216,749 ops/s


Result "recPar_00010b":
  705672,681 Â±(99.9%) 17506,432 ops/s [Average]
  (min, avg, max) = (685481,905, 705672,681, 722216,749), stdev = 11579,421
  CI (99.9%): [688166,250, 723179,113] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 7 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.recPar_00010b
# Parameters: (strategy = J9FjLifo)

# Run progress: 11,57% complete, ETA 11:21:30
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
911210,077 ops/s
# Warmup Iteration   2: 927118,997 ops/s
# Warmup Iteration   3: 859739,500 ops/s
Iteration   1: 854846,987 ops/s
Iteration   2: 849460,110 ops/s
Iteration   3: 851551,355 ops/s
Iteration   4: 853152,368 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
852474,412 ops/s

# Run progress: 11,81% complete, ETA 11:19:44
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
908852,881 ops/s
# Warmup Iteration   2: 932984,076 ops/s
# Warmup Iteration   3: 863841,762 ops/s
Iteration   1: 859465,953 ops/s
Iteration   2: 856645,332 ops/s
Iteration   3: 857537,485 ops/s
Iteration   4: 856292,920 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
854512,308 ops/s


Result "recPar_00010b":
  854593,923 Â±(99.9%) 4556,535 ops/s [Average]
  (min, avg, max) = (849460,110, 854593,923, 859465,953), stdev = 3013,866
  CI (99.9%): [850037,388, 859150,458] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 7 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.recPar_00010b
# Parameters: (strategy = J9FjFifo)

# Run progress: 12,04% complete, ETA 11:17:58
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
911422,743 ops/s
# Warmup Iteration   2: 927077,465 ops/s
# Warmup Iteration   3: 868785,450 ops/s
Iteration   1: 863838,469 ops/s
Iteration   2: 860317,355 ops/s
Iteration   3: 862009,671 ops/s
Iteration   4: 863515,876 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
862110,999 ops/s

# Run progress: 12,27% complete, ETA 11:16:12
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
904515,187 ops/s
# Warmup Iteration   2: 917923,030 ops/s
# Warmup Iteration   3: 860107,055 ops/s
Iteration   1: 860017,663 ops/s
Iteration   2: 851705,106 ops/s
Iteration   3: 853213,489 ops/s
Iteration   4: 853458,049 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
853016,031 ops/s


Result "recPar_00010b":
  858320,271 Â±(99.9%) 7370,662 ops/s [Average]
  (min, avg, max) = (851705,106, 858320,271, 863838,469), stdev = 4875,237
  CI (99.9%): [850949,608, 865690,933] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 7 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.recPar_01000
# Parameters: (strategy = a-sync-block)

# Run progress: 12,50% complete, ETA 11:14:26
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
76111,078 ops/s
# Warmup Iteration   2: 79522,917 ops/s
# Warmup Iteration   3: 74876,833 ops/s
Iteration   1: 73941,838 ops/s
Iteration   2: 73977,836 ops/s
Iteration   3: 73670,603 ops/s
Iteration   4: 73540,829 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=836749212, numSharedTasksExecuted=1101292, numSteals=10916601, numExceptions=0, numParks=2362541, numFalseAlarmUnparks=266549, numSharedQueueSwitches=987587, numLocalSubmits=836020617, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1310263367, numSharedTasksExecuted=737566, numSteals=5765096, numExceptions=0, numParks=868580, numFalseAlarmUnparks=59903, numSharedQueueSwitches=619999, numLocalSubmits=1308901127, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1602700185, numSharedTasksExecuted=819182, numSteals=4886987, numExceptions=0, numParks=899741, numFalseAlarmUnparks=60436, numSharedQueueSwitches=657136, numLocalSubmits=1600886151, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1471942744, numSharedTasksExecuted=752565, numSteals=2290396, numExceptions=0, numParks=765928, numFalseAlarmUnparks=83497, numSharedQueueSwitches=565820, numLocalSubmits=1470131986, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=775974894, numSharedTasksExecuted=893641, numSteals=6085237, numExceptions=0, numParks=1677117, numFalseAlarmUnparks=204615, numSharedQueueSwitches=789144, numLocalSubmits=775313041, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=462471179, numSharedTasksExecuted=1360734, numSteals=9276378, numExceptions=0, numParks=2914096, numFalseAlarmUnparks=450581, numSharedQueueSwitches=1256196, numLocalSubmits=462125052, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=565405941, numSharedTasksExecuted=1210918, numSteals=7547194, numExceptions=0, numParks=2683195, numFalseAlarmUnparks=472205, numSharedQueueSwitches=1106580, numLocalSubmits=564973806, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=802458486, numSharedTasksExecuted=952076, numSteals=5954274, numExceptions=0, numParks=1836823, numFalseAlarmUnparks=259134, numSharedQueueSwitches=839611, numLocalSubmits=801786254, approximateLocalQueueSize=0}
--------------------------------
73245,399 ops/s

# Run progress: 12,73% complete, ETA 11:12:40
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
62863,452 ops/s
# Warmup Iteration   2: 56990,628 ops/s
# Warmup Iteration   3: 52188,050 ops/s
Iteration   1: 52329,432 ops/s
Iteration   2: 52164,611 ops/s
Iteration   3: 52390,170 ops/s
Iteration   4: 52295,867 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=949911123, numSharedTasksExecuted=580586, numSteals=4115923, numExceptions=0, numParks=1222336, numFalseAlarmUnparks=154734, numSharedQueueSwitches=486084, numLocalSubmits=948851090, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=978394688, numSharedTasksExecuted=594789, numSteals=6293076, numExceptions=0, numParks=865165, numFalseAlarmUnparks=40991, numSharedQueueSwitches=509451, numLocalSubmits=977359481, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=612458126, numSharedTasksExecuted=760243, numSteals=9018991, numExceptions=0, numParks=1484924, numFalseAlarmUnparks=96810, numSharedQueueSwitches=683543, numLocalSubmits=611876839, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=467913868, numSharedTasksExecuted=829731, numSteals=8183451, numExceptions=0, numParks=1506742, numFalseAlarmUnparks=119063, numSharedQueueSwitches=757409, numLocalSubmits=467490346, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=783630018, numSharedTasksExecuted=687093, numSteals=7015653, numExceptions=0, numParks=1099275, numFalseAlarmUnparks=65287, numSharedQueueSwitches=601298, numLocalSubmits=782846014, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=625494885, numSharedTasksExecuted=686662, numSteals=6799025, numExceptions=0, numParks=1206604, numFalseAlarmUnparks=88444, numSharedQueueSwitches=611605, numLocalSubmits=624894942, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=630245729, numSharedTasksExecuted=663301, numSteals=5920570, numExceptions=0, numParks=1091165, numFalseAlarmUnparks=82615, numSharedQueueSwitches=587852, numLocalSubmits=629639729, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=530623571, numSharedTasksExecuted=776275, numSteals=6406379, numExceptions=0, numParks=1252243, numFalseAlarmUnparks=103639, numSharedQueueSwitches=697986, numLocalSubmits=530134887, approximateLocalQueueSize=0}
--------------------------------
52566,143 ops/s


Result "recPar_01000":
  63012,273 Â±(99.9%) 16996,376 ops/s [Average]
  (min, avg, max) = (52164,611, 63012,273, 73977,836), stdev = 11242,050
  CI (99.9%): [46015,897, 80008,649] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 7 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.recPar_01000
# Parameters: (strategy = a-sync-nocheck)

# Run progress: 12,96% complete, ETA 11:10:54
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
81455,580 ops/s
# Warmup Iteration   2: 107105,861 ops/s
# Warmup Iteration   3: 96260,825 ops/s
Iteration   1: 97239,264 ops/s
Iteration   2: 96446,132 ops/s
Iteration   3: 96847,873 ops/s
Iteration   4: 96280,076 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1680580127, numSharedTasksExecuted=1282571, numSteals=5751500, numExceptions=0, numParks=2308918, numFalseAlarmUnparks=494977, numSharedQueueSwitches=1093869, numLocalSubmits=1678942972, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1722513702, numSharedTasksExecuted=1137931, numSteals=3723845, numExceptions=0, numParks=1646766, numFalseAlarmUnparks=321170, numSharedQueueSwitches=927211, numLocalSubmits=1720683782, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1441402797, numSharedTasksExecuted=1115454, numSteals=3557469, numExceptions=0, numParks=1659824, numFalseAlarmUnparks=313604, numSharedQueueSwitches=926505, numLocalSubmits=1439946579, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1592454146, numSharedTasksExecuted=1061996, numSteals=2782240, numExceptions=0, numParks=1333283, numFalseAlarmUnparks=245055, numSharedQueueSwitches=843763, numLocalSubmits=1590734666, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=824527774, numSharedTasksExecuted=1349915, numSteals=4701840, numExceptions=0, numParks=2798778, numFalseAlarmUnparks=849921, numSharedQueueSwitches=1211679, numLocalSubmits=823877497, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=545312835, numSharedTasksExecuted=1713552, numSteals=5848385, numExceptions=0, numParks=4318407, numFalseAlarmUnparks=1427295, numSharedQueueSwitches=1581396, numLocalSubmits=544926371, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=664418732, numSharedTasksExecuted=1538644, numSteals=4492701, numExceptions=0, numParks=4065996, numFalseAlarmUnparks=1514513, numSharedQueueSwitches=1402439, numLocalSubmits=663943546, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1768849895, numSharedTasksExecuted=1040005, numSteals=2599902, numExceptions=0, numParks=1151318, numFalseAlarmUnparks=182450, numSharedQueueSwitches=799924, numLocalSubmits=1766764527, approximateLocalQueueSize=0}
--------------------------------
96730,542 ops/s

# Run progress: 13,19% complete, ETA 11:09:09
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
82050,328 ops/s
# Warmup Iteration   2: 81475,298 ops/s
# Warmup Iteration   3: 75226,648 ops/s
Iteration   1: 75016,880 ops/s
Iteration   2: 74314,696 ops/s
Iteration   3: 73978,318 ops/s
Iteration   4: 75197,178 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1486208564, numSharedTasksExecuted=982436, numSteals=8990167, numExceptions=0, numParks=1237643, numFalseAlarmUnparks=81599, numSharedQueueSwitches=848129, numLocalSubmits=1484684726, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1374028091, numSharedTasksExecuted=1019183, numSteals=7434426, numExceptions=0, numParks=1884548, numFalseAlarmUnparks=194756, numSharedQueueSwitches=880055, numLocalSubmits=1372673983, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1584114228, numSharedTasksExecuted=810805, numSteals=4045670, numExceptions=0, numParks=813889, numFalseAlarmUnparks=58664, numSharedQueueSwitches=651814, numLocalSubmits=1582174290, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=691591070, numSharedTasksExecuted=918785, numSteals=3687585, numExceptions=0, numParks=2171132, numFalseAlarmUnparks=565072, numSharedQueueSwitches=811950, numLocalSubmits=690999017, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=607239238, numSharedTasksExecuted=1226921, numSteals=8543110, numExceptions=0, numParks=1915392, numFalseAlarmUnparks=214814, numSharedQueueSwitches=1118314, numLocalSubmits=606719222, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=485659032, numSharedTasksExecuted=1130377, numSteals=5696095, numExceptions=0, numParks=2245259, numFalseAlarmUnparks=403356, numSharedQueueSwitches=1031237, numLocalSubmits=485265195, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=867667141, numSharedTasksExecuted=861790, numSteals=5086565, numExceptions=0, numParks=1076851, numFalseAlarmUnparks=95368, numSharedQueueSwitches=750764, numLocalSubmits=866832262, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=840789644, numSharedTasksExecuted=987008, numSteals=5770076, numExceptions=0, numParks=1450816, numFalseAlarmUnparks=167959, numSharedQueueSwitches=868364, numLocalSubmits=840011008, approximateLocalQueueSize=0}
--------------------------------
74501,510 ops/s


Result "recPar_01000":
  85655,247 Â±(99.9%) 17626,577 ops/s [Average]
  (min, avg, max) = (73978,318, 85655,247, 97239,264), stdev = 11658,890
  CI (99.9%): [68028,670, 103281,824] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 7 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.recPar_01000
# Parameters: (strategy = a-lock-block)

# Run progress: 13,43% complete, ETA 11:07:23
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
100776,680 ops/s
# Warmup Iteration   2: 97671,704 ops/s
# Warmup Iteration   3: 90310,879 ops/s
Iteration   1: 91128,826 ops/s
Iteration   2: 91338,522 ops/s
Iteration   3: 91173,009 ops/s
Iteration   4: 90711,915 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1498354156, numSharedTasksExecuted=1296152, numSteals=3754807, numExceptions=0, numParks=2032088, numFalseAlarmUnparks=480593, numSharedQueueSwitches=1077513, numLocalSubmits=1496958656, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1786733684, numSharedTasksExecuted=1181026, numSteals=3250536, numExceptions=0, numParks=1102367, numFalseAlarmUnparks=152604, numSharedQueueSwitches=918679, numLocalSubmits=1784752515, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=757077030, numSharedTasksExecuted=1127369, numSteals=4071069, numExceptions=0, numParks=1318254, numFalseAlarmUnparks=209458, numSharedQueueSwitches=1008449, numLocalSubmits=756462077, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1728050110, numSharedTasksExecuted=1091893, numSteals=2640503, numExceptions=0, numParks=866746, numFalseAlarmUnparks=116483, numSharedQueueSwitches=816846, numLocalSubmits=1726030304, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=727688371, numSharedTasksExecuted=1167555, numSteals=3714771, numExceptions=0, numParks=1772865, numFalseAlarmUnparks=371984, numSharedQueueSwitches=1037545, numLocalSubmits=727116593, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1549317180, numSharedTasksExecuted=950611, numSteals=2618545, numExceptions=0, numParks=1051991, numFalseAlarmUnparks=158534, numSharedQueueSwitches=717803, numLocalSubmits=1547524787, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=837430228, numSharedTasksExecuted=1161864, numSteals=3317504, numExceptions=0, numParks=1837493, numFalseAlarmUnparks=435736, numSharedQueueSwitches=1020178, numLocalSubmits=836731976, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=782823249, numSharedTasksExecuted=1691012, numSteals=5825792, numExceptions=0, numParks=3089152, numFalseAlarmUnparks=799060, numSharedQueueSwitches=1542926, numLocalSubmits=782229618, approximateLocalQueueSize=0}
--------------------------------
90160,365 ops/s

# Run progress: 13,66% complete, ETA 11:05:37
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
72380,958 ops/s
# Warmup Iteration   2: 71064,529 ops/s
# Warmup Iteration   3: 67628,015 ops/s
Iteration   1: 66118,304 ops/s
Iteration   2: 66455,818 ops/s
Iteration   3: 66813,074 ops/s
Iteration   4: 66251,902 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1718384585, numSharedTasksExecuted=867166, numSteals=10686511, numExceptions=0, numParks=978545, numFalseAlarmUnparks=31389, numSharedQueueSwitches=743766, numLocalSubmits=1716541854, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1091260674, numSharedTasksExecuted=828394, numSteals=7503989, numExceptions=0, numParks=1257109, numFalseAlarmUnparks=83696, numSharedQueueSwitches=713258, numLocalSubmits=1090146584, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=699999473, numSharedTasksExecuted=872562, numSteals=8559407, numExceptions=0, numParks=819166, numFalseAlarmUnparks=46363, numSharedQueueSwitches=781734, numLocalSubmits=699329385, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=560348610, numSharedTasksExecuted=1068760, numSteals=10297758, numExceptions=0, numParks=1182144, numFalseAlarmUnparks=75319, numSharedQueueSwitches=975860, numLocalSubmits=559836095, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=457298625, numSharedTasksExecuted=996633, numSteals=7222424, numExceptions=0, numParks=1940969, numFalseAlarmUnparks=255950, numSharedQueueSwitches=906700, numLocalSubmits=456904842, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=805454617, numSharedTasksExecuted=760025, numSteals=5292211, numExceptions=0, numParks=1011649, numFalseAlarmUnparks=92217, numSharedQueueSwitches=662505, numLocalSubmits=804656471, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=860655597, numSharedTasksExecuted=688135, numSteals=4679288, numExceptions=0, numParks=653505, numFalseAlarmUnparks=36861, numSharedQueueSwitches=593322, numLocalSubmits=859750018, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=874755827, numSharedTasksExecuted=986491, numSteals=7451570, numExceptions=0, numParks=1527455, numFalseAlarmUnparks=158589, numSharedQueueSwitches=867776, numLocalSubmits=873924593, approximateLocalQueueSize=0}
--------------------------------
66685,782 ops/s


Result "recPar_01000":
  78683,752 Â±(99.9%) 19480,366 ops/s [Average]
  (min, avg, max) = (66118,304, 78683,752, 91338,522), stdev = 12885,056
  CI (99.9%): [59203,386, 98164,117] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 7 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.recPar_01000
# Parameters: (strategy = a-nonblocking)

# Run progress: 13,89% complete, ETA 11:03:51
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
91767,842 ops/s
# Warmup Iteration   2: 92863,061 ops/s
# Warmup Iteration   3: 85051,586 ops/s
Iteration   1: 87081,081 ops/s
Iteration   2: 86732,000 ops/s
Iteration   3: 86149,541 ops/s
Iteration   4: 85459,935 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1811056141, numSharedTasksExecuted=1218234, numSteals=7901581, numExceptions=0, numParks=1910474, numFalseAlarmUnparks=191849, numSharedQueueSwitches=1042300, numLocalSubmits=1809284859, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1926511461, numSharedTasksExecuted=942001, numSteals=3700922, numExceptions=0, numParks=793723, numFalseAlarmUnparks=47114, numSharedQueueSwitches=741605, numLocalSubmits=1924124258, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1404062556, numSharedTasksExecuted=851952, numSteals=3907921, numExceptions=0, numParks=768003, numFalseAlarmUnparks=57933, numSharedQueueSwitches=707690, numLocalSubmits=1402524218, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=869841098, numSharedTasksExecuted=1254465, numSteals=7387441, numExceptions=0, numParks=1860079, numFalseAlarmUnparks=240838, numSharedQueueSwitches=1120056, numLocalSubmits=869098078, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1127036439, numSharedTasksExecuted=923865, numSteals=4008129, numExceptions=0, numParks=1163941, numFalseAlarmUnparks=144750, numSharedQueueSwitches=781012, numLocalSubmits=1125928125, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=841734552, numSharedTasksExecuted=1132161, numSteals=5148401, numExceptions=0, numParks=1638818, numFalseAlarmUnparks=235700, numSharedQueueSwitches=1004937, numLocalSubmits=841029187, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=623831162, numSharedTasksExecuted=1422247, numSteals=6783969, numExceptions=0, numParks=2376695, numFalseAlarmUnparks=400321, numSharedQueueSwitches=1296924, numLocalSubmits=623350795, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=592544599, numSharedTasksExecuted=1451701, numSteals=6983782, numExceptions=0, numParks=2288142, numFalseAlarmUnparks=371672, numSharedQueueSwitches=1326202, numLocalSubmits=592081862, approximateLocalQueueSize=0}
--------------------------------
87471,460 ops/s

# Run progress: 14,12% complete, ETA 11:02:05
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
69314,179 ops/s
# Warmup Iteration   2: 69812,135 ops/s
# Warmup Iteration   3: 57518,776 ops/s
Iteration   1: 59905,215 ops/s
Iteration   2: 60254,711 ops/s
Iteration   3: 60447,133 ops/s
Iteration   4: 60425,158 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1369816709, numSharedTasksExecuted=637380, numSteals=3241463, numExceptions=0, numParks=839587, numFalseAlarmUnparks=75734, numSharedQueueSwitches=499040, numLocalSubmits=1368180162, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=487582867, numSharedTasksExecuted=1022073, numSteals=10147191, numExceptions=0, numParks=2230626, numFalseAlarmUnparks=229829, numSharedQueueSwitches=936666, numLocalSubmits=487187768, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=464381359, numSharedTasksExecuted=912339, numSteals=8501755, numExceptions=0, numParks=1785813, numFalseAlarmUnparks=173379, numSharedQueueSwitches=831733, numLocalSubmits=464004737, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=663619589, numSharedTasksExecuted=776489, numSteals=6726027, numExceptions=0, numParks=1302508, numFalseAlarmUnparks=114476, numSharedQueueSwitches=694021, numLocalSubmits=663049420, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1481039579, numSharedTasksExecuted=660785, numSteals=4222014, numExceptions=0, numParks=692157, numFalseAlarmUnparks=36921, numSharedQueueSwitches=522433, numLocalSubmits=1479283922, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=768489803, numSharedTasksExecuted=744467, numSteals=5798966, numExceptions=0, numParks=1240725, numFalseAlarmUnparks=113112, numSharedQueueSwitches=653149, numLocalSubmits=767800783, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=539554078, numSharedTasksExecuted=909700, numSteals=6700678, numExceptions=0, numParks=1690597, numFalseAlarmUnparks=196059, numSharedQueueSwitches=822359, numLocalSubmits=539112484, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=647683024, numSharedTasksExecuted=758942, numSteals=5338881, numExceptions=0, numParks=1269062, numFalseAlarmUnparks=137603, numSharedQueueSwitches=670585, numLocalSubmits=647125557, approximateLocalQueueSize=0}
--------------------------------
60442,358 ops/s


Result "recPar_01000":
  73436,859 Â±(99.9%) 20960,006 ops/s [Average]
  (min, avg, max) = (59905,215, 73436,859, 87471,460), stdev = 13863,746
  CI (99.9%): [52476,854, 94396,865] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 7 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.recPar_01000
# Parameters: (strategy = no-conc)

# Run progress: 14,35% complete, ETA 11:00:18
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
638074,974 ops/s
# Warmup Iteration   2: 655322,586 ops/s
# Warmup Iteration   3: 598119,891 ops/s
Iteration   1: 599981,181 ops/s
Iteration   2: 599958,977 ops/s
Iteration   3: 599613,081 ops/s
Iteration   4: 600687,434 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
599210,422 ops/s

# Run progress: 14,58% complete, ETA 10:58:32
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
661143,113 ops/s
# Warmup Iteration   2: 670569,055 ops/s
# Warmup Iteration   3: 613935,627 ops/s
Iteration   1: 616707,112 ops/s
Iteration   2: 617251,260 ops/s
Iteration   3: 617279,118 ops/s
Iteration   4: 618579,912 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
617475,012 ops/s


Result "recPar_01000":
  608674,351 Â±(99.9%) 14026,679 ops/s [Average]
  (min, avg, max) = (599210,422, 608674,351, 618579,912), stdev = 9277,780
  CI (99.9%): [594647,672, 622701,030] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 7 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.recPar_01000
# Parameters: (strategy = ForkJoinLifo)

# Run progress: 14,81% complete, ETA 10:56:46
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
99325,614 ops/s
# Warmup Iteration   2: 103960,907 ops/s
# Warmup Iteration   3: 96290,667 ops/s
Iteration   1: 96429,642 ops/s
Iteration   2: 96468,848 ops/s
Iteration   3: 96631,282 ops/s
Iteration   4: 96137,541 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
96261,599 ops/s

# Run progress: 15,05% complete, ETA 10:55:00
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
98658,190 ops/s
# Warmup Iteration   2: 102624,380 ops/s
# Warmup Iteration   3: 92417,552 ops/s
Iteration   1: 95312,156 ops/s
Iteration   2: 94527,349 ops/s
Iteration   3: 94814,082 ops/s
Iteration   4: 95299,125 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
94944,642 ops/s


Result "recPar_01000":
  95682,627 Â±(99.9%) 1185,763 ops/s [Average]
  (min, avg, max) = (94527,349, 95682,627, 96631,282), stdev = 784,309
  CI (99.9%): [94496,864, 96868,389] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 7 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.recPar_01000
# Parameters: (strategy = J9FjSharedQueues)

# Run progress: 15,28% complete, ETA 10:53:13
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
16651,301 ops/s
# Warmup Iteration   2: 17295,186 ops/s
# Warmup Iteration   3: 17325,592 ops/s
Iteration   1: 15691,956 ops/s
Iteration   2: 15347,171 ops/s
Iteration   3: 15376,823 ops/s
Iteration   4: 15375,975 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
15344,835 ops/s

# Run progress: 15,51% complete, ETA 10:51:27
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
16092,491 ops/s
# Warmup Iteration   2: 16932,485 ops/s
# Warmup Iteration   3: 16958,926 ops/s
Iteration   1: 15477,753 ops/s
Iteration   2: 15005,237 ops/s
Iteration   3: 15059,402 ops/s
Iteration   4: 15094,074 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
15002,789 ops/s


Result "recPar_01000":
  15277,601 Â±(99.9%) 346,091 ops/s [Average]
  (min, avg, max) = (15002,789, 15277,601, 15691,956), stdev = 228,918
  CI (99.9%): [14931,510, 15623,693] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 7 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.recPar_01000
# Parameters: (strategy = J9FjLifo)

# Run progress: 15,74% complete, ETA 10:49:40
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
70736,956 ops/s
# Warmup Iteration   2: 71502,222 ops/s
# Warmup Iteration   3: 65301,179 ops/s
Iteration   1: 65277,761 ops/s
Iteration   2: 65790,942 ops/s
Iteration   3: 65948,927 ops/s
Iteration   4: 65786,054 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
65866,011 ops/s

# Run progress: 15,97% complete, ETA 10:47:54
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
71977,759 ops/s
# Warmup Iteration   2: 75869,876 ops/s
# Warmup Iteration   3: 69046,629 ops/s
Iteration   1: 68184,304 ops/s
Iteration   2: 68195,622 ops/s
Iteration   3: 68264,622 ops/s
Iteration   4: 68406,312 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
68432,937 ops/s


Result "recPar_01000":
  67015,349 Â±(99.9%) 2062,656 ops/s [Average]
  (min, avg, max) = (65277,761, 67015,349, 68432,937), stdev = 1364,319
  CI (99.9%): [64952,693, 69078,005] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 7 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.recPar_01000
# Parameters: (strategy = J9FjFifo)

# Run progress: 16,20% complete, ETA 10:46:07
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
75570,926 ops/s
# Warmup Iteration   2: 80159,962 ops/s
# Warmup Iteration   3: 71424,627 ops/s
Iteration   1: 70543,300 ops/s
Iteration   2: 71040,248 ops/s
Iteration   3: 71007,468 ops/s
Iteration   4: 70991,257 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
70996,021 ops/s

# Run progress: 16,44% complete, ETA 10:44:21
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
79402,022 ops/s
# Warmup Iteration   2: 85837,680 ops/s
# Warmup Iteration   3: 80606,037 ops/s
Iteration   1: 75466,840 ops/s
Iteration   2: 75894,269 ops/s
Iteration   3: 75896,432 ops/s
Iteration   4: 75714,764 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
75960,099 ops/s


Result "recPar_01000":
  73351,070 Â±(99.9%) 3892,138 ops/s [Average]
  (min, avg, max) = (70543,300, 73351,070, 75960,099), stdev = 2574,408
  CI (99.9%): [69458,932, 77243,208] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 7 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.recPar_10000
# Parameters: (strategy = a-sync-block)

# Run progress: 16,67% complete, ETA 10:42:34
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
11225,589 ops/s
# Warmup Iteration   2: 12410,458 ops/s
# Warmup Iteration   3: 11113,005 ops/s
Iteration   1: 11523,395 ops/s
Iteration   2: 11598,225 ops/s
Iteration   3: 11453,160 ops/s
Iteration   4: 11513,738 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2042302937, numSharedTasksExecuted=146345, numSteals=5179437, numExceptions=0, numParks=1354471, numFalseAlarmUnparks=256937, numSharedQueueSwitches=128531, numLocalSubmits=2042110047, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1972919330, numSharedTasksExecuted=150666, numSteals=2957206, numExceptions=0, numParks=1947593, numFalseAlarmUnparks=692734, numSharedQueueSwitches=131557, numLocalSubmits=1972734405, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2148076476, numSharedTasksExecuted=108320, numSteals=887051, numExceptions=0, numParks=395655, numFalseAlarmUnparks=94241, numSharedQueueSwitches=87956, numLocalSubmits=2147837525, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=695127024, numSharedTasksExecuted=220044, numSteals=5719142, numExceptions=0, numParks=5872866, numFalseAlarmUnparks=2850808, numSharedQueueSwitches=202798, numLocalSubmits=695066378, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1198084211, numSharedTasksExecuted=124168, numSteals=2410388, numExceptions=0, numParks=1131825, numFalseAlarmUnparks=365578, numSharedQueueSwitches=109149, numLocalSubmits=1197972453, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2216293975, numSharedTasksExecuted=112284, numSteals=713350, numExceptions=0, numParks=318622, numFalseAlarmUnparks=74453, numSharedQueueSwitches=89096, numLocalSubmits=2216037161, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1141456160, numSharedTasksExecuted=155557, numSteals=3142078, numExceptions=0, numParks=2716026, numFalseAlarmUnparks=1167320, numSharedQueueSwitches=138479, numLocalSubmits=1141351551, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=801829895, numSharedTasksExecuted=204233, numSteals=5493243, numExceptions=0, numParks=4535220, numFalseAlarmUnparks=1968757, numSharedQueueSwitches=187071, numLocalSubmits=801758871, approximateLocalQueueSize=0}
--------------------------------
11518,157 ops/s

# Run progress: 16,90% complete, ETA 10:40:48
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
7252,271 ops/s
# Warmup Iteration   2: 7216,516 ops/s
# Warmup Iteration   3: 6509,384 ops/s
Iteration   1: 6598,141 ops/s
Iteration   2: 6627,995 ops/s
Iteration   3: 6690,234 ops/s
Iteration   4: 6685,825 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=810006973, numSharedTasksExecuted=112700, numSteals=9458581, numExceptions=0, numParks=3655574, numFalseAlarmUnparks=734885, numSharedQueueSwitches=102464, numLocalSubmits=809928071, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1195336530, numSharedTasksExecuted=66758, numSteals=2202788, numExceptions=0, numParks=1035676, numFalseAlarmUnparks=255334, numSharedQueueSwitches=57501, numLocalSubmits=1195214646, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=621780735, numSharedTasksExecuted=98892, numSteals=7131254, numExceptions=0, numParks=3029142, numFalseAlarmUnparks=673001, numSharedQueueSwitches=90069, numLocalSubmits=621721725, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1304540403, numSharedTasksExecuted=67743, numSteals=3029998, numExceptions=0, numParks=921323, numFalseAlarmUnparks=140856, numSharedQueueSwitches=58122, numLocalSubmits=1304403199, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1008891541, numSharedTasksExecuted=60848, numSteals=3335051, numExceptions=0, numParks=776458, numFalseAlarmUnparks=90384, numSharedQueueSwitches=53328, numLocalSubmits=1008789362, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=476435377, numSharedTasksExecuted=126186, numSteals=8049937, numExceptions=0, numParks=3953575, numFalseAlarmUnparks=1031485, numSharedQueueSwitches=117037, numLocalSubmits=476390229, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=701436030, numSharedTasksExecuted=90805, numSteals=5885953, numExceptions=0, numParks=2061881, numFalseAlarmUnparks=414675, numSharedQueueSwitches=81785, numLocalSubmits=701368275, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=945552419, numSharedTasksExecuted=82474, numSteals=4587611, numExceptions=0, numParks=1724190, numFalseAlarmUnparks=339363, numSharedQueueSwitches=72340, numLocalSubmits=945458095, approximateLocalQueueSize=0}
--------------------------------
6619,413 ops/s


Result "recPar_10000":
  9082,828 Â±(99.9%) 3886,667 ops/s [Average]
  (min, avg, max) = (6598,141, 9082,828, 11598,225), stdev = 2570,790
  CI (99.9%): [5196,161, 12969,495] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 7 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.recPar_10000
# Parameters: (strategy = a-sync-nocheck)

# Run progress: 17,13% complete, ETA 10:39:01
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
9775,832 ops/s
# Warmup Iteration   2: 10329,433 ops/s
# Warmup Iteration   3: 8974,707 ops/s
Iteration   1: 9197,991 ops/s
Iteration   2: 9151,249 ops/s
Iteration   3: 9065,737 ops/s
Iteration   4: 9061,575 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=768287607, numSharedTasksExecuted=122849, numSteals=6735196, numExceptions=0, numParks=2386185, numFalseAlarmUnparks=442243, numSharedQueueSwitches=110976, numLocalSubmits=768216909, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=816560314, numSharedTasksExecuted=112104, numSteals=5741038, numExceptions=0, numParks=2036421, numFalseAlarmUnparks=372580, numSharedQueueSwitches=100483, numLocalSubmits=816484014, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1745623188, numSharedTasksExecuted=93267, numSteals=3465466, numExceptions=0, numParks=863206, numFalseAlarmUnparks=114905, numSharedQueueSwitches=80478, numLocalSubmits=1745447140, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1932793300, numSharedTasksExecuted=88522, numSteals=2640730, numExceptions=0, numParks=632707, numFalseAlarmUnparks=81347, numSharedQueueSwitches=74308, numLocalSubmits=1932588869, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2001391484, numSharedTasksExecuted=91514, numSteals=2179644, numExceptions=0, numParks=580940, numFalseAlarmUnparks=85830, numSharedQueueSwitches=76047, numLocalSubmits=2001174357, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=819340170, numSharedTasksExecuted=115570, numSteals=5101397, numExceptions=0, numParks=1887699, numFalseAlarmUnparks=377416, numSharedQueueSwitches=103469, numLocalSubmits=819263412, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=591375946, numSharedTasksExecuted=222261, numSteals=9893847, numExceptions=0, numParks=5448029, numFalseAlarmUnparks=1608774, numSharedQueueSwitches=208591, numLocalSubmits=591323822, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1036937999, numSharedTasksExecuted=125152, numSteals=4883197, numExceptions=0, numParks=1868881, numFalseAlarmUnparks=441892, numSharedQueueSwitches=111934, numLocalSubmits=1036840246, approximateLocalQueueSize=0}
--------------------------------
9179,720 ops/s

# Run progress: 17,36% complete, ETA 10:37:15
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
6018,479 ops/s
# Warmup Iteration   2: 5937,088 ops/s
# Warmup Iteration   3: 5394,084 ops/s
Iteration   1: 5368,263 ops/s
Iteration   2: 5339,444 ops/s
Iteration   3: 5267,661 ops/s
Iteration   4: 5306,570 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=456861162, numSharedTasksExecuted=97800, numSteals=18276381, numExceptions=0, numParks=2243257, numFalseAlarmUnparks=117083, numSharedQueueSwitches=90548, numLocalSubmits=456817384, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=426500320, numSharedTasksExecuted=106181, numSteals=16876191, numExceptions=0, numParks=2266884, numFalseAlarmUnparks=131286, numSharedQueueSwitches=98964, numLocalSubmits=426459844, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=401393577, numSharedTasksExecuted=88001, numSteals=11321485, numExceptions=0, numParks=1437476, numFalseAlarmUnparks=84058, numSharedQueueSwitches=80951, numLocalSubmits=401355411, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1059491371, numSharedTasksExecuted=49821, numSteals=5820610, numExceptions=0, numParks=536364, numFalseAlarmUnparks=18618, numSharedQueueSwitches=43211, numLocalSubmits=1059383481, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=970037303, numSharedTasksExecuted=40376, numSteals=1467874, numExceptions=0, numParks=424880, numFalseAlarmUnparks=66293, numSharedQueueSwitches=34627, numLocalSubmits=969935319, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=638569280, numSharedTasksExecuted=68040, numSteals=7949540, numExceptions=0, numParks=911992, numFalseAlarmUnparks=43127, numSharedQueueSwitches=61271, numLocalSubmits=638506517, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1072516225, numSharedTasksExecuted=49288, numSteals=5155608, numExceptions=0, numParks=449322, numFalseAlarmUnparks=17706, numSharedQueueSwitches=42667, numLocalSubmits=1072407376, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=635000770, numSharedTasksExecuted=66538, numSteals=7218975, numExceptions=0, numParks=811873, numFalseAlarmUnparks=36890, numSharedQueueSwitches=59741, numLocalSubmits=634938631, approximateLocalQueueSize=0}
--------------------------------
5286,433 ops/s


Result "recPar_10000":
  7222,464 Â±(99.9%) 3042,876 ops/s [Average]
  (min, avg, max) = (5267,661, 7222,464, 9197,991), stdev = 2012,674
  CI (99.9%): [4179,589, 10265,340] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 7 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.recPar_10000
# Parameters: (strategy = a-lock-block)

# Run progress: 17,59% complete, ETA 10:35:29
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
7453,857 ops/s
# Warmup Iteration   2: 6529,315 ops/s
# Warmup Iteration   3: 6277,230 ops/s
Iteration   1: 5966,127 ops/s
Iteration   2: 5745,050 ops/s
Iteration   3: 5773,005 ops/s
Iteration   4: 5709,522 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=918791713, numSharedTasksExecuted=75258, numSteals=5830538, numExceptions=0, numParks=1955294, numFalseAlarmUnparks=367737, numSharedQueueSwitches=67222, numLocalSubmits=918699597, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1030914898, numSharedTasksExecuted=66674, numSteals=7531029, numExceptions=0, numParks=928413, numFalseAlarmUnparks=48817, numSharedQueueSwitches=59276, numLocalSubmits=1030810372, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1125535896, numSharedTasksExecuted=64858, numSteals=6773690, numExceptions=0, numParks=849472, numFalseAlarmUnparks=44504, numSharedQueueSwitches=57369, numLocalSubmits=1125421325, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=693938668, numSharedTasksExecuted=67835, numSteals=7169777, numExceptions=0, numParks=832166, numFalseAlarmUnparks=43548, numSharedQueueSwitches=60941, numLocalSubmits=693869534, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=599389873, numSharedTasksExecuted=83929, numSteals=9053745, numExceptions=0, numParks=1538013, numFalseAlarmUnparks=123977, numSharedQueueSwitches=76430, numLocalSubmits=599330787, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=668985657, numSharedTasksExecuted=79871, numSteals=8187337, numExceptions=0, numParks=1315458, numFalseAlarmUnparks=97709, numSharedQueueSwitches=72273, numLocalSubmits=668919316, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=459106783, numSharedTasksExecuted=109052, numSteals=10241547, numExceptions=0, numParks=1831272, numFalseAlarmUnparks=174233, numSharedQueueSwitches=100782, numLocalSubmits=459062593, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=695436520, numSharedTasksExecuted=71741, numSteals=6249756, numExceptions=0, numParks=1028295, numFalseAlarmUnparks=89102, numSharedQueueSwitches=64189, numLocalSubmits=695367266, approximateLocalQueueSize=0}
--------------------------------
5741,869 ops/s

# Run progress: 17,82% complete, ETA 10:33:42
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
5008,242 ops/s
# Warmup Iteration   2: 7437,089 ops/s
# Warmup Iteration   3: 9771,564 ops/s
Iteration   1: 10631,508 ops/s
Iteration   2: 10695,950 ops/s
Iteration   3: 10608,096 ops/s
Iteration   4: 10701,324 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1501092384, numSharedTasksExecuted=126897, numSteals=7432270, numExceptions=0, numParks=1665351, numFalseAlarmUnparks=293159, numSharedQueueSwitches=111255, numLocalSubmits=1500952508, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2218133779, numSharedTasksExecuted=102713, numSteals=3054143, numExceptions=0, numParks=348316, numFalseAlarmUnparks=52664, numSharedQueueSwitches=83982, numLocalSubmits=2217890784, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2040479668, numSharedTasksExecuted=81963, numSteals=891950, numExceptions=0, numParks=277990, numFalseAlarmUnparks=44485, numSharedQueueSwitches=66452, numLocalSubmits=2040252870, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2227036310, numSharedTasksExecuted=95911, numSteals=2030969, numExceptions=0, numParks=503690, numFalseAlarmUnparks=88381, numSharedQueueSwitches=80386, numLocalSubmits=2226810281, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=870939711, numSharedTasksExecuted=152601, numSteals=5395107, numExceptions=0, numParks=2652942, numFalseAlarmUnparks=822308, numSharedQueueSwitches=138264, numLocalSubmits=870865108, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=577093636, numSharedTasksExecuted=222024, numSteals=7946904, numExceptions=0, numParks=4612910, numFalseAlarmUnparks=1705884, numSharedQueueSwitches=206893, numLocalSubmits=577045294, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=402551022, numSharedTasksExecuted=235431, numSteals=7263159, numExceptions=0, numParks=6035512, numFalseAlarmUnparks=2824899, numSharedQueueSwitches=220692, numLocalSubmits=402517628, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1273473498, numSharedTasksExecuted=93548, numSteals=2244824, numExceptions=0, numParks=728592, numFalseAlarmUnparks=166241, numSharedQueueSwitches=80520, numLocalSubmits=1273354447, approximateLocalQueueSize=0}
--------------------------------
10694,970 ops/s


Result "recPar_10000":
  8226,742 Â±(99.9%) 3889,502 ops/s [Average]
  (min, avg, max) = (5709,522, 8226,742, 10701,324), stdev = 2572,665
  CI (99.9%): [4337,240, 12116,244] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 7 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.recPar_10000
# Parameters: (strategy = a-nonblocking)

# Run progress: 18,06% complete, ETA 10:31:56
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
9106,871 ops/s
# Warmup Iteration   2: 8962,630 ops/s
# Warmup Iteration   3: 8559,859 ops/s
Iteration   1: 8906,093 ops/s
Iteration   2: 8867,720 ops/s
Iteration   3: 8853,111 ops/s
Iteration   4: 8782,432 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1475012008, numSharedTasksExecuted=102447, numSteals=5583102, numExceptions=0, numParks=1451505, numFalseAlarmUnparks=232096, numSharedQueueSwitches=89239, numLocalSubmits=1474864673, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1357183852, numSharedTasksExecuted=93815, numSteals=3348468, numExceptions=0, numParks=930845, numFalseAlarmUnparks=149485, numSharedQueueSwitches=81787, numLocalSubmits=1357049159, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1620779608, numSharedTasksExecuted=95609, numSteals=815062, numExceptions=0, numParks=552545, numFalseAlarmUnparks=190815, numSharedQueueSwitches=79380, numLocalSubmits=1620606597, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1617377713, numSharedTasksExecuted=117378, numSteals=4101484, numExceptions=0, numParks=1463011, numFalseAlarmUnparks=272142, numSharedQueueSwitches=102137, numLocalSubmits=1617215783, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1324339467, numSharedTasksExecuted=83884, numSteals=2227431, numExceptions=0, numParks=698594, numFalseAlarmUnparks=111265, numSharedQueueSwitches=71810, numLocalSubmits=1324204407, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=694010951, numSharedTasksExecuted=149356, numSteals=5435067, numExceptions=0, numParks=3308679, numFalseAlarmUnparks=1104505, numSharedQueueSwitches=136349, numLocalSubmits=693946040, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=526970027, numSharedTasksExecuted=158119, numSteals=6029476, numExceptions=0, numParks=3488965, numFalseAlarmUnparks=1105713, numSharedQueueSwitches=146000, numLocalSubmits=526921196, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=769826382, numSharedTasksExecuted=137950, numSteals=5366714, numExceptions=0, numParks=2576361, numFalseAlarmUnparks=687526, numSharedQueueSwitches=125006, numLocalSubmits=769753595, approximateLocalQueueSize=0}
--------------------------------
8859,374 ops/s

# Run progress: 18,29% complete, ETA 10:30:09
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
8398,338 ops/s
# Warmup Iteration   2: 7952,208 ops/s
# Warmup Iteration   3: 7213,869 ops/s
Iteration   1: 7082,632 ops/s
Iteration   2: 7107,759 ops/s
Iteration   3: 7171,685 ops/s
Iteration   4: 7159,191 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1512713280, numSharedTasksExecuted=101816, numSteals=8313412, numExceptions=0, numParks=2770361, numFalseAlarmUnparks=463775, numSharedQueueSwitches=90158, numLocalSubmits=1512561559, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1724403317, numSharedTasksExecuted=64049, numSteals=1881336, numExceptions=0, numParks=619504, numFalseAlarmUnparks=110250, numSharedQueueSwitches=53816, numLocalSubmits=1724217554, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=860072751, numSharedTasksExecuted=79774, numSteals=4915258, numExceptions=0, numParks=1367049, numFalseAlarmUnparks=227911, numSharedQueueSwitches=71028, numLocalSubmits=859989019, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=436104884, numSharedTasksExecuted=133363, numSteals=7605636, numExceptions=0, numParks=3433458, numFalseAlarmUnparks=892315, numSharedQueueSwitches=123471, numLocalSubmits=436064603, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=499428770, numSharedTasksExecuted=123424, numSteals=6799154, numExceptions=0, numParks=2952453, numFalseAlarmUnparks=731658, numSharedQueueSwitches=113444, numLocalSubmits=499382516, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=792414993, numSharedTasksExecuted=85130, numSteals=4230088, numExceptions=0, numParks=1328247, numFalseAlarmUnparks=279708, numSharedQueueSwitches=75932, numLocalSubmits=792338409, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1003113926, numSharedTasksExecuted=81330, numSteals=3486525, numExceptions=0, numParks=1579777, numFalseAlarmUnparks=404742, numSharedQueueSwitches=71504, numLocalSubmits=1003014053, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=770588087, numSharedTasksExecuted=91006, numSteals=4797201, numExceptions=0, numParks=1934763, numFalseAlarmUnparks=447432, numSharedQueueSwitches=81280, numLocalSubmits=770512403, approximateLocalQueueSize=0}
--------------------------------
7118,266 ops/s


Result "recPar_10000":
  7990,826 Â±(99.9%) 1376,427 ops/s [Average]
  (min, avg, max) = (7082,632, 7990,826, 8906,093), stdev = 910,421
  CI (99.9%): [6614,399, 9367,253] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 7 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.recPar_10000
# Parameters: (strategy = no-conc)

# Run progress: 18,52% complete, ETA 10:28:23
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
<failure>

java.lang.StackOverflowError
	at benchmark.PoolBenchmark$$Lambda$6/623285632.get$Lambda(Unknown Source)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)



# Run progress: 18,75% complete, ETA 10:19:01
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
<failure>

java.lang.StackOverflowError
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)
	at benchmark.PoolBenchmark.lambda$doRec$1(PoolBenchmark.java:204)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark.doRec(PoolBenchmark.java:204)




# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 7 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.recPar_10000
# Parameters: (strategy = ForkJoinLifo)

# Run progress: 18,98% complete, ETA 10:09:53
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
10848,972 ops/s
# Warmup Iteration   2: 11785,784 ops/s
# Warmup Iteration   3: 11706,181 ops/s
Iteration   1: 10998,147 ops/s
Iteration   2: 11055,886 ops/s
Iteration   3: 11024,466 ops/s
Iteration   4: 11018,634 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
11030,138 ops/s

# Run progress: 19,21% complete, ETA 10:08:19
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
10967,689 ops/s
# Warmup Iteration   2: 11742,744 ops/s
# Warmup Iteration   3: 10589,483 ops/s
Iteration   1: 10994,030 ops/s
Iteration   2: 11062,147 ops/s
Iteration   3: 10992,689 ops/s
Iteration   4: 11081,990 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
11041,249 ops/s


Result "recPar_10000":
  11029,938 Â±(99.9%) 46,170 ops/s [Average]
  (min, avg, max) = (10992,689, 11029,938, 11081,990), stdev = 30,539
  CI (99.9%): [10983,768, 11076,108] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 7 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.recPar_10000
# Parameters: (strategy = J9FjSharedQueues)

# Run progress: 19,44% complete, ETA 10:06:46
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1619,291 ops/s
# Warmup Iteration   2: 1732,604 ops/s
# Warmup Iteration   3: 1744,572 ops/s
Iteration   1: 1616,235 ops/s
Iteration   2: 1577,727 ops/s
Iteration   3: 1576,351 ops/s
Iteration   4: 1573,913 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
1578,040 ops/s

# Run progress: 19,68% complete, ETA 10:05:12
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1594,840 ops/s
# Warmup Iteration   2: 1685,462 ops/s
# Warmup Iteration   3: 1679,786 ops/s
Iteration   1: 1552,208 ops/s
Iteration   2: 1527,377 ops/s
Iteration   3: 1529,551 ops/s
Iteration   4: 1531,612 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
1528,002 ops/s


Result "recPar_10000":
  1559,102 Â±(99.9%) 45,459 ops/s [Average]
  (min, avg, max) = (1527,377, 1559,102, 1616,235), stdev = 30,068
  CI (99.9%): [1513,643, 1604,560] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 7 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.recPar_10000
# Parameters: (strategy = J9FjLifo)

# Run progress: 19,91% complete, ETA 10:03:38
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
8904,289 ops/s
# Warmup Iteration   2: 8288,456 ops/s
# Warmup Iteration   3: 7488,261 ops/s
Iteration   1: 7615,928 ops/s
Iteration   2: 7651,909 ops/s
Iteration   3: 7670,871 ops/s
Iteration   4: 7633,804 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
7671,774 ops/s

# Run progress: 20,14% complete, ETA 10:02:03
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
8366,997 ops/s
# Warmup Iteration   2: 8650,711 ops/s
# Warmup Iteration   3: 7918,244 ops/s
Iteration   1: 7869,582 ops/s
Iteration   2: 7819,247 ops/s
Iteration   3: 7845,744 ops/s
Iteration   4: 7849,258 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
7881,712 ops/s


Result "recPar_10000":
  7750,983 Â±(99.9%) 166,329 ops/s [Average]
  (min, avg, max) = (7615,928, 7750,983, 7881,712), stdev = 110,016
  CI (99.9%): [7584,654, 7917,312] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 7 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.recPar_10000
# Parameters: (strategy = J9FjFifo)

# Run progress: 20,37% complete, ETA 10:00:28
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
8091,675 ops/s
# Warmup Iteration   2: 8498,556 ops/s
# Warmup Iteration   3: 7729,332 ops/s
Iteration   1: 7779,970 ops/s
Iteration   2: 7748,761 ops/s
Iteration   3: 7725,931 ops/s
Iteration   4: 7762,921 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
7737,937 ops/s

# Run progress: 20,60% complete, ETA 09:58:53
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
7128,400 ops/s
# Warmup Iteration   2: 7353,324 ops/s
# Warmup Iteration   3: 6656,530 ops/s
Iteration   1: 6766,726 ops/s
Iteration   2: 6799,889 ops/s
Iteration   3: 6777,317 ops/s
Iteration   4: 6768,063 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
6770,994 ops/s


Result "recPar_10000":
  7263,851 Â±(99.9%) 776,918 ops/s [Average]
  (min, avg, max) = (6766,726, 7263,851, 7779,970), stdev = 513,883
  CI (99.9%): [6486,933, 8040,769] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testFactorial01
# Parameters: (strategy = a-sync-block)

# Run progress: 20,83% complete, ETA 09:57:18
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
139912,865 ops/s
# Warmup Iteration   2: 135772,518 ops/s
# Warmup Iteration   3: 143516,464 ops/s
Iteration   1: 148512,372 ops/s
Iteration   2: 147363,350 ops/s
Iteration   3: 147494,087 ops/s
Iteration   4: 147172,724 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=171166486, numSharedTasksExecuted=15560830, numSteals=872, numExceptions=0, numParks=15579050, numFalseAlarmUnparks=18376, numSharedQueueSwitches=0, numLocalSubmits=155606127, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=67898, numSharedTasksExecuted=5425, numSteals=1706, numExceptions=0, numParks=15561974, numFalseAlarmUnparks=15554938, numSharedQueueSwitches=1, numLocalSubmits=61334, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=18707, numSharedTasksExecuted=2007, numSteals=158, numExceptions=0, numParks=2792, numFalseAlarmUnparks=671, numSharedQueueSwitches=1, numLocalSubmits=17123, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1826, numSharedTasksExecuted=367, numSteals=33, numExceptions=0, numParks=553, numFalseAlarmUnparks=172, numSharedQueueSwitches=1, numLocalSubmits=1700, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=95, numSharedTasksExecuted=13, numSteals=2, numExceptions=0, numParks=23, numFalseAlarmUnparks=8, numSharedQueueSwitches=1, numLocalSubmits=86, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1, numSharedTasksExecuted=1, numSteals=0, numExceptions=0, numParks=1, numFalseAlarmUnparks=0, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1, numSharedTasksExecuted=1, numSteals=0, numExceptions=0, numParks=1, numFalseAlarmUnparks=0, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1, numSharedTasksExecuted=1, numSteals=0, numExceptions=0, numParks=1, numFalseAlarmUnparks=0, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
--------------------------------
145963,130 ops/s

# Run progress: 21,06% complete, ETA 09:55:40
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
139949,360 ops/s
# Warmup Iteration   2: 145254,475 ops/s
# Warmup Iteration   3: 143572,182 ops/s
Iteration   1: 146145,760 ops/s
Iteration   2: 142997,244 ops/s
Iteration   3: 145159,486 ops/s
Iteration   4: 144803,290 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=168239500, numSharedTasksExecuted=15294992, numSteals=792, numExceptions=0, numParks=15303964, numFalseAlarmUnparks=9233, numSharedQueueSwitches=0, numLocalSubmits=152946063, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=65567, numSharedTasksExecuted=5129, numSteals=2567, numExceptions=0, numParks=15295865, numFalseAlarmUnparks=15288251, numSharedQueueSwitches=1, numLocalSubmits=58431, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=18089, numSharedTasksExecuted=1857, numSteals=124, numExceptions=0, numParks=3547, numFalseAlarmUnparks=1602, numSharedQueueSwitches=1, numLocalSubmits=16527, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1318, numSharedTasksExecuted=250, numSteals=43, numExceptions=0, numParks=441, numFalseAlarmUnparks=155, numSharedQueueSwitches=1, numLocalSubmits=1225, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=39, numSharedTasksExecuted=5, numSteals=3, numExceptions=0, numParks=21, numFalseAlarmUnparks=13, numSharedQueueSwitches=1, numLocalSubmits=34, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1, numSharedTasksExecuted=1, numSteals=0, numExceptions=0, numParks=2, numFalseAlarmUnparks=1, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1, numSharedTasksExecuted=1, numSteals=0, numExceptions=0, numParks=2, numFalseAlarmUnparks=1, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1, numSharedTasksExecuted=1, numSteals=0, numExceptions=0, numParks=2, numFalseAlarmUnparks=1, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
--------------------------------
143121,564 ops/s


Result "testFactorial01":
  145873,301 Â±(99.9%) 2809,548 ops/s [Average]
  (min, avg, max) = (142997,244, 145873,301, 148512,372), stdev = 1858,342
  CI (99.9%): [143063,753, 148682,849] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testFactorial01
# Parameters: (strategy = a-sync-nocheck)

# Run progress: 21,30% complete, ETA 09:54:02
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
142853,811 ops/s
# Warmup Iteration   2: 151564,081 ops/s
# Warmup Iteration   3: 157504,400 ops/s
Iteration   1: 147093,542 ops/s
Iteration   2: 149114,261 ops/s
Iteration   3: 148699,644 ops/s
Iteration   4: 144063,663 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=171076095, numSharedTasksExecuted=15552621, numSteals=738, numExceptions=0, numParks=15564961, numFalseAlarmUnparks=12614, numSharedQueueSwitches=0, numLocalSubmits=155524075, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=79730, numSharedTasksExecuted=6623, numSteals=1625, numExceptions=0, numParks=15553432, numFalseAlarmUnparks=15545284, numSharedQueueSwitches=1, numLocalSubmits=72021, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=17547, numSharedTasksExecuted=1843, numSteals=103, numExceptions=0, numParks=2650, numFalseAlarmUnparks=736, numSharedQueueSwitches=1, numLocalSubmits=16029, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1483, numSharedTasksExecuted=263, numSteals=50, numExceptions=0, numParks=439, numFalseAlarmUnparks=143, numSharedQueueSwitches=1, numLocalSubmits=1375, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=65, numSharedTasksExecuted=11, numSteals=7, numExceptions=0, numParks=29, numFalseAlarmUnparks=13, numSharedQueueSwitches=1, numLocalSubmits=60, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=13, numSharedTasksExecuted=2, numSteals=1, numExceptions=0, numParks=4, numFalseAlarmUnparks=1, numSharedQueueSwitches=1, numLocalSubmits=10, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1, numSharedTasksExecuted=1, numSteals=0, numExceptions=0, numParks=2, numFalseAlarmUnparks=1, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1, numSharedTasksExecuted=1, numSteals=0, numExceptions=0, numParks=1, numFalseAlarmUnparks=0, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
--------------------------------
143897,725 ops/s

# Run progress: 21,53% complete, ETA 09:52:24
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
140855,101 ops/s
# Warmup Iteration   2: 141497,642 ops/s
# Warmup Iteration   3: 148905,362 ops/s
Iteration   1: 150815,521 ops/s
Iteration   2: 147382,859 ops/s
Iteration   3: 143627,973 ops/s
Iteration   4: 147564,271 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=171092718, numSharedTasksExecuted=15554095, numSteals=778, numExceptions=0, numParks=15563864, numFalseAlarmUnparks=10051, numSharedQueueSwitches=0, numLocalSubmits=155539183, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=77479, numSharedTasksExecuted=6455, numSteals=1572, numExceptions=0, numParks=15554913, numFalseAlarmUnparks=15547001, numSharedQueueSwitches=1, numLocalSubmits=70005, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=18602, numSharedTasksExecuted=1916, numSteals=135, numExceptions=0, numParks=2717, numFalseAlarmUnparks=691, numSharedQueueSwitches=1, numLocalSubmits=16957, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1644, numSharedTasksExecuted=300, numSteals=38, numExceptions=0, numParks=455, numFalseAlarmUnparks=137, numSharedQueueSwitches=1, numLocalSubmits=1528, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=54, numSharedTasksExecuted=11, numSteals=5, numExceptions=0, numParks=28, numFalseAlarmUnparks=12, numSharedQueueSwitches=1, numLocalSubmits=47, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1, numSharedTasksExecuted=1, numSteals=0, numExceptions=0, numParks=5, numFalseAlarmUnparks=4, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1, numSharedTasksExecuted=1, numSteals=0, numExceptions=0, numParks=1, numFalseAlarmUnparks=0, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1, numSharedTasksExecuted=1, numSteals=0, numExceptions=0, numParks=1, numFalseAlarmUnparks=0, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
--------------------------------
145615,586 ops/s


Result "testFactorial01":
  146787,504 Â±(99.9%) 3685,151 ops/s [Average]
  (min, avg, max) = (143627,973, 146787,504, 150815,521), stdev = 2437,499
  CI (99.9%): [143102,353, 150472,656] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testFactorial01
# Parameters: (strategy = a-lock-block)

# Run progress: 21,76% complete, ETA 09:50:46
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
142390,415 ops/s
# Warmup Iteration   2: 145445,201 ops/s
# Warmup Iteration   3: 117116,424 ops/s
Iteration   1: 132782,834 ops/s
Iteration   2: 141448,796 ops/s
Iteration   3: 142628,911 ops/s
Iteration   4: 143227,199 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=122007306, numSharedTasksExecuted=11926381, numSteals=769, numExceptions=0, numParks=14085426, numFalseAlarmUnparks=2159103, numSharedQueueSwitches=0, numLocalSubmits=114949202, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=9969491, numSharedTasksExecuted=71574, numSteals=4868922, numExceptions=0, numParks=12789593, numFalseAlarmUnparks=7849481, numSharedQueueSwitches=1, numLocalSubmits=5029814, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=31659271, numSharedTasksExecuted=2877915, numSteals=950, numExceptions=0, numParks=4869632, numFalseAlarmUnparks=1990962, numSharedQueueSwitches=1, numLocalSubmits=28781001, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2915, numSharedTasksExecuted=388, numSteals=74, numExceptions=0, numParks=769, numFalseAlarmUnparks=327, numSharedQueueSwitches=1, numLocalSubmits=2683, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=340, numSharedTasksExecuted=42, numSteals=18, numExceptions=0, numParks=100, numFalseAlarmUnparks=43, numSharedQueueSwitches=1, numLocalSubmits=315, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=16, numSharedTasksExecuted=9, numSteals=2, numExceptions=0, numParks=12, numFalseAlarmUnparks=3, numSharedQueueSwitches=1, numLocalSubmits=15, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1, numSharedTasksExecuted=1, numSteals=0, numExceptions=0, numParks=3, numFalseAlarmUnparks=2, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1, numSharedTasksExecuted=1, numSteals=0, numExceptions=0, numParks=1, numFalseAlarmUnparks=0, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
--------------------------------
143225,868 ops/s

# Run progress: 21,99% complete, ETA 09:49:08
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
146009,391 ops/s
# Warmup Iteration   2: 148929,314 ops/s
# Warmup Iteration   3: 142411,472 ops/s
Iteration   1: 143735,585 ops/s
Iteration   2: 145514,133 ops/s
Iteration   3: 144181,253 ops/s
Iteration   4: 144802,841 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=167780203, numSharedTasksExecuted=15253292, numSteals=1080, numExceptions=0, numParks=15264949, numFalseAlarmUnparks=11600, numSharedQueueSwitches=0, numLocalSubmits=152528434, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=85079, numSharedTasksExecuted=6455, numSteals=3029, numExceptions=0, numParks=15254582, numFalseAlarmUnparks=15245255, numSharedQueueSwitches=1, numLocalSubmits=76201, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=21585, numSharedTasksExecuted=2363, numSteals=223, numExceptions=0, numParks=4651, numFalseAlarmUnparks=2099, numSharedQueueSwitches=1, numLocalSubmits=19719, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2996, numSharedTasksExecuted=604, numSteals=53, numExceptions=0, numParks=1019, numFalseAlarmUnparks=384, numSharedQueueSwitches=1, numLocalSubmits=2788, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=127, numSharedTasksExecuted=16, numSteals=2, numExceptions=0, numParks=29, numFalseAlarmUnparks=12, numSharedQueueSwitches=1, numLocalSubmits=117, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=35, numSharedTasksExecuted=5, numSteals=0, numExceptions=0, numParks=6, numFalseAlarmUnparks=1, numSharedQueueSwitches=1, numLocalSubmits=31, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1, numSharedTasksExecuted=1, numSteals=0, numExceptions=0, numParks=2, numFalseAlarmUnparks=1, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1, numSharedTasksExecuted=1, numSteals=0, numExceptions=0, numParks=1, numFalseAlarmUnparks=0, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
--------------------------------
141160,875 ops/s


Result "testFactorial01":
  142270,830 Â±(99.9%) 5441,988 ops/s [Average]
  (min, avg, max) = (132782,834, 142270,830, 145514,133), stdev = 3599,538
  CI (99.9%): [136828,841, 147712,818] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testFactorial01
# Parameters: (strategy = a-nonblocking)

# Run progress: 22,22% complete, ETA 09:47:29
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
134562,145 ops/s
# Warmup Iteration   2: 137959,891 ops/s
# Warmup Iteration   3: 139807,337 ops/s
Iteration   1: 147535,734 ops/s
Iteration   2: 140029,625 ops/s
Iteration   3: 149898,693 ops/s
Iteration   4: 144185,105 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=169321433, numSharedTasksExecuted=15393156, numSteals=887, numExceptions=0, numParks=15405042, numFalseAlarmUnparks=12024, numSharedQueueSwitches=0, numLocalSubmits=153928975, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=83236, numSharedTasksExecuted=6731, numSteals=1969, numExceptions=0, numParks=15394131, numFalseAlarmUnparks=15385537, numSharedQueueSwitches=1, numLocalSubmits=75087, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=20927, numSharedTasksExecuted=2191, numSteals=176, numExceptions=0, numParks=3248, numFalseAlarmUnparks=917, numSharedQueueSwitches=1, numLocalSubmits=19155, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2416, numSharedTasksExecuted=469, numSteals=51, numExceptions=0, numParks=702, numFalseAlarmUnparks=205, numSharedQueueSwitches=1, numLocalSubmits=2245, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=131, numSharedTasksExecuted=16, numSteals=4, numExceptions=0, numParks=27, numFalseAlarmUnparks=8, numSharedQueueSwitches=1, numLocalSubmits=118, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1, numSharedTasksExecuted=1, numSteals=0, numExceptions=0, numParks=1, numFalseAlarmUnparks=0, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1, numSharedTasksExecuted=1, numSteals=0, numExceptions=0, numParks=1, numFalseAlarmUnparks=0, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1, numSharedTasksExecuted=1, numSteals=0, numExceptions=0, numParks=1, numFalseAlarmUnparks=0, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
--------------------------------
147239,153 ops/s

# Run progress: 22,45% complete, ETA 09:45:51
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
145024,123 ops/s
# Warmup Iteration   2: 146474,515 ops/s
# Warmup Iteration   3: 151786,945 ops/s
Iteration   1: 147813,124 ops/s
Iteration   2: 145275,931 ops/s
Iteration   3: 146684,619 ops/s
Iteration   4: 150186,935 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=171334727, numSharedTasksExecuted=15576127, numSteals=964, numExceptions=0, numParks=15615814, numFalseAlarmUnparks=39732, numSharedQueueSwitches=0, numLocalSubmits=155759208, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=100344, numSharedTasksExecuted=8440, numSteals=1894, numExceptions=0, numParks=15577416, numFalseAlarmUnparks=15567211, numSharedQueueSwitches=1, numLocalSubmits=90724, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=23895, numSharedTasksExecuted=2430, numSteals=200, numExceptions=0, numParks=3675, numFalseAlarmUnparks=1090, numSharedQueueSwitches=1, numLocalSubmits=21811, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=3204, numSharedTasksExecuted=468, numSteals=65, numExceptions=0, numParks=796, numFalseAlarmUnparks=281, numSharedQueueSwitches=1, numLocalSubmits=2948, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=169, numSharedTasksExecuted=25, numSteals=6, numExceptions=0, numParks=44, numFalseAlarmUnparks=17, numSharedQueueSwitches=1, numLocalSubmits=158, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=13, numSharedTasksExecuted=2, numSteals=2, numExceptions=0, numParks=4, numFalseAlarmUnparks=1, numSharedQueueSwitches=1, numLocalSubmits=11, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1, numSharedTasksExecuted=1, numSteals=0, numExceptions=0, numParks=1, numFalseAlarmUnparks=0, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1, numSharedTasksExecuted=1, numSteals=0, numExceptions=0, numParks=1, numFalseAlarmUnparks=0, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
--------------------------------
145078,536 ops/s


Result "testFactorial01":
  146392,746 Â±(99.9%) 4483,490 ops/s [Average]
  (min, avg, max) = (140029,625, 146392,746, 150186,935), stdev = 2965,551
  CI (99.9%): [141909,256, 150876,235] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testFactorial01
# Parameters: (strategy = no-conc)

# Run progress: 22,69% complete, ETA 09:44:12
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
17528928,282 ops/s
# Warmup Iteration   2: 18988217,425 ops/s
# Warmup Iteration   3: 18938636,686 ops/s
Iteration   1: 19065896,091 ops/s
Iteration   2: 19078441,337 ops/s
Iteration   3: 19035838,810 ops/s
Iteration   4: 19070387,146 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
19073580,907 ops/s

# Run progress: 22,92% complete, ETA 09:42:33
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
17503826,269 ops/s
# Warmup Iteration   2: 18653767,004 ops/s
# Warmup Iteration   3: 18532032,551 ops/s
Iteration   1: 18559327,225 ops/s
Iteration   2: 18577365,825 ops/s
Iteration   3: 18533844,814 ops/s
Iteration   4: 18529296,621 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
18502337,421 ops/s


Result "testFactorial01":
  18802631,620 Â±(99.9%) 419204,828 ops/s [Average]
  (min, avg, max) = (18502337,421, 18802631,620, 19078441,337), stdev = 277278,038
  CI (99.9%): [18383426,791, 19221836,448] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testFactorial01
# Parameters: (strategy = ForkJoinLifo)

# Run progress: 23,15% complete, ETA 09:40:54
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
89275,629 ops/s
# Warmup Iteration   2: 92422,868 ops/s
# Warmup Iteration   3: 92881,047 ops/s
Iteration   1: 92957,107 ops/s
Iteration   2: 92911,401 ops/s
Iteration   3: 93105,758 ops/s
Iteration   4: 92696,769 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
91495,658 ops/s

# Run progress: 23,38% complete, ETA 09:39:14
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
89030,314 ops/s
# Warmup Iteration   2: 93449,506 ops/s
# Warmup Iteration   3: 93157,841 ops/s
Iteration   1: 92233,856 ops/s
Iteration   2: 91591,843 ops/s
Iteration   3: 91626,754 ops/s
Iteration   4: 91459,462 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
91526,380 ops/s


Result "testFactorial01":
  92160,499 Â±(99.9%) 1048,505 ops/s [Average]
  (min, avg, max) = (91459,462, 92160,499, 93105,758), stdev = 693,521
  CI (99.9%): [91111,994, 93209,004] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testFactorial01
# Parameters: (strategy = J9FjSharedQueues)

# Run progress: 23,61% complete, ETA 09:37:35
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
71926,643 ops/s
# Warmup Iteration   2: 74845,812 ops/s
# Warmup Iteration   3: 74676,403 ops/s
Iteration   1: 74793,018 ops/s
Iteration   2: 74230,347 ops/s
Iteration   3: 74230,149 ops/s
Iteration   4: 74187,842 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
74161,606 ops/s

# Run progress: 23,84% complete, ETA 09:35:55
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
73334,423 ops/s
# Warmup Iteration   2: 76105,312 ops/s
# Warmup Iteration   3: 75872,907 ops/s
Iteration   1: 75201,510 ops/s
Iteration   2: 74652,201 ops/s
Iteration   3: 74638,333 ops/s
Iteration   4: 74655,770 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
74621,259 ops/s


Result "testFactorial01":
  74537,204 Â±(99.9%) 504,680 ops/s [Average]
  (min, avg, max) = (74161,606, 74537,204, 75201,510), stdev = 333,814
  CI (99.9%): [74032,524, 75041,883] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testFactorial01
# Parameters: (strategy = J9FjLifo)

# Run progress: 24,07% complete, ETA 09:34:15
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
77479,210 ops/s
# Warmup Iteration   2: 80954,256 ops/s
# Warmup Iteration   3: 81119,288 ops/s
Iteration   1: 80429,276 ops/s
Iteration   2: 79850,714 ops/s
Iteration   3: 79865,282 ops/s
Iteration   4: 79902,507 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
79818,116 ops/s

# Run progress: 24,31% complete, ETA 09:32:35
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
78035,984 ops/s
# Warmup Iteration   2: 80867,474 ops/s
# Warmup Iteration   3: 80727,809 ops/s
Iteration   1: 80139,431 ops/s
Iteration   2: 79612,113 ops/s
Iteration   3: 79628,882 ops/s
Iteration   4: 79617,483 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
79615,106 ops/s


Result "testFactorial01":
  79847,891 Â±(99.9%) 402,537 ops/s [Average]
  (min, avg, max) = (79612,113, 79847,891, 80429,276), stdev = 266,253
  CI (99.9%): [79445,354, 80250,428] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testFactorial01
# Parameters: (strategy = J9FjFifo)

# Run progress: 24,54% complete, ETA 09:30:55
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
77138,454 ops/s
# Warmup Iteration   2: 80691,983 ops/s
# Warmup Iteration   3: 80935,768 ops/s
Iteration   1: 79999,158 ops/s
Iteration   2: 79477,862 ops/s
Iteration   3: 79418,069 ops/s
Iteration   4: 79445,103 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
79453,374 ops/s

# Run progress: 24,77% complete, ETA 09:29:15
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
77439,474 ops/s
# Warmup Iteration   2: 80869,717 ops/s
# Warmup Iteration   3: 80674,643 ops/s
Iteration   1: 79913,949 ops/s
Iteration   2: 79467,255 ops/s
Iteration   3: 79443,041 ops/s
Iteration   4: 79448,816 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
79461,426 ops/s


Result "testFactorial01":
  79552,805 Â±(99.9%) 324,039 ops/s [Average]
  (min, avg, max) = (79418,069, 79552,805, 79999,158), stdev = 214,332
  CI (99.9%): [79228,766, 79876,845] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 7 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testFactorial07
# Parameters: (strategy = a-sync-block)

# Run progress: 25,00% complete, ETA 09:27:34
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
937174,315 ops/s
# Warmup Iteration   2: 880080,268 ops/s
# Warmup Iteration   3: 895713,835 ops/s
Iteration   1: 882192,106 ops/s
Iteration   2: 883274,494 ops/s
Iteration   3: 873611,905 ops/s
Iteration   4: 874034,916 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=208224539, numSharedTasksExecuted=18927949, numSteals=27003, numExceptions=0, numParks=190206, numFalseAlarmUnparks=24321, numSharedQueueSwitches=18873208, numLocalSubmits=189292924, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=203395390, numSharedTasksExecuted=18491561, numSteals=24249, numExceptions=0, numParks=179599, numFalseAlarmUnparks=22885, numSharedQueueSwitches=18435044, numLocalSubmits=184905715, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=180422646, numSharedTasksExecuted=16401317, numSteals=23401, numExceptions=0, numParks=166943, numFalseAlarmUnparks=22640, numSharedQueueSwitches=16353661, numLocalSubmits=164019179, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=166021336, numSharedTasksExecuted=15094534, numSteals=20514, numExceptions=0, numParks=154765, numFalseAlarmUnparks=22013, numSharedQueueSwitches=15050848, numLocalSubmits=150930974, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=143036001, numSharedTasksExecuted=13003567, numSteals=18860, numExceptions=0, numParks=138610, numFalseAlarmUnparks=22008, numSharedQueueSwitches=12960719, numLocalSubmits=130033096, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=75177857, numSharedTasksExecuted=6834479, numSteals=14889, numExceptions=0, numParks=98349, numFalseAlarmUnparks=18689, numSharedQueueSwitches=6809352, numLocalSubmits=68343678, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=34266562, numSharedTasksExecuted=3114540, numSteals=11005, numExceptions=0, numParks=68303, numFalseAlarmUnparks=14214, numSharedQueueSwitches=3098915, numLocalSubmits=31151047, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=16277308, numSharedTasksExecuted=1479482, numSteals=6993, numExceptions=0, numParks=42758, numFalseAlarmUnparks=9515, numSharedQueueSwitches=1469979, numLocalSubmits=14797597, approximateLocalQueueSize=0}
--------------------------------
881954,327 ops/s

# Run progress: 25,23% complete, ETA 09:25:56
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
918103,340 ops/s
# Warmup Iteration   2: 922611,660 ops/s
# Warmup Iteration   3: 888762,599 ops/s
Iteration   1: 870638,820 ops/s
Iteration   2: 872615,169 ops/s
Iteration   3: 864731,031 ops/s
Iteration   4: 867224,016 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=211845792, numSharedTasksExecuted=19256884, numSteals=27344, numExceptions=0, numParks=183981, numFalseAlarmUnparks=21954, numSharedQueueSwitches=19203939, numLocalSubmits=192585519, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=196175512, numSharedTasksExecuted=17834143, numSteals=23978, numExceptions=0, numParks=177002, numFalseAlarmUnparks=23212, numSharedQueueSwitches=17782791, numLocalSubmits=178340843, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=180320623, numSharedTasksExecuted=16393225, numSteals=22258, numExceptions=0, numParks=164994, numFalseAlarmUnparks=22472, numSharedQueueSwitches=16346849, numLocalSubmits=163928063, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=163155169, numSharedTasksExecuted=14832634, numSteals=21051, numExceptions=0, numParks=150388, numFalseAlarmUnparks=21506, numSharedQueueSwitches=14793144, numLocalSubmits=148322834, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=139873313, numSharedTasksExecuted=12716382, numSteals=18784, numExceptions=0, numParks=135006, numFalseAlarmUnparks=21444, numSharedQueueSwitches=12680060, numLocalSubmits=127158534, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=75498625, numSharedTasksExecuted=6863317, numSteals=14764, numExceptions=0, numParks=96097, numFalseAlarmUnparks=18484, numSharedQueueSwitches=6841177, numLocalSubmits=68635047, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=34274028, numSharedTasksExecuted=3116339, numSteals=10509, numExceptions=0, numParks=67497, numFalseAlarmUnparks=14096, numSharedQueueSwitches=3097435, numLocalSubmits=31159011, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=15369938, numSharedTasksExecuted=1397356, numSteals=7098, numExceptions=0, numParks=42227, numFalseAlarmUnparks=9470, numSharedQueueSwitches=1383232, numLocalSubmits=13972869, approximateLocalQueueSize=0}
--------------------------------
872613,432 ops/s


Result "testFactorial07":
  874289,022 Â±(99.9%) 9597,354 ops/s [Average]
  (min, avg, max) = (864731,031, 874289,022, 883274,494), stdev = 6348,055
  CI (99.9%): [864691,668, 883886,375] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 7 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testFactorial07
# Parameters: (strategy = a-sync-nocheck)

# Run progress: 25,46% complete, ETA 09:24:17
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
909425,446 ops/s
# Warmup Iteration   2: 954693,556 ops/s
# Warmup Iteration   3: 890942,199 ops/s
Iteration   1: 872097,621 ops/s
Iteration   2: 867298,861 ops/s
Iteration   3: 868492,936 ops/s
Iteration   4: 866695,753 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=203511616, numSharedTasksExecuted=18500185, numSteals=29932, numExceptions=0, numParks=191619, numFalseAlarmUnparks=24612, numSharedQueueSwitches=18444389, numLocalSubmits=185009114, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=194690974, numSharedTasksExecuted=17698650, numSteals=27529, numExceptions=0, numParks=181027, numFalseAlarmUnparks=23807, numSharedQueueSwitches=17645803, numLocalSubmits=176990587, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=184859895, numSharedTasksExecuted=16805689, numSteals=26356, numExceptions=0, numParks=167692, numFalseAlarmUnparks=21697, numSharedQueueSwitches=16759013, numLocalSubmits=168055469, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=168275404, numSharedTasksExecuted=15298973, numSteals=23145, numExceptions=0, numParks=155111, numFalseAlarmUnparks=22125, numSharedQueueSwitches=15254985, numLocalSubmits=152978830, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=141568891, numSharedTasksExecuted=12869851, numSteals=21739, numExceptions=0, numParks=140887, numFalseAlarmUnparks=22272, numSharedQueueSwitches=12828334, numLocalSubmits=128698768, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=72450023, numSharedTasksExecuted=6585986, numSteals=16971, numExceptions=0, numParks=101038, numFalseAlarmUnparks=19319, numSharedQueueSwitches=6561066, numLocalSubmits=65863392, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=33645987, numSharedTasksExecuted=3058903, numSteals=12665, numExceptions=0, numParks=71294, numFalseAlarmUnparks=14362, numSharedQueueSwitches=3042259, numLocalSubmits=30587735, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=16101517, numSharedTasksExecuted=1463980, numSteals=8420, numExceptions=0, numParks=46964, numFalseAlarmUnparks=10083, numSharedQueueSwitches=1453800, numLocalSubmits=14638195, approximateLocalQueueSize=0}
--------------------------------
863514,473 ops/s

# Run progress: 25,69% complete, ETA 09:22:38
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
902889,933 ops/s
# Warmup Iteration   2: 954787,191 ops/s
# Warmup Iteration   3: 889085,560 ops/s
Iteration   1: 876005,123 ops/s
Iteration   2: 872655,332 ops/s
Iteration   3: 876738,150 ops/s
Iteration   4: 873237,495 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=214036332, numSharedTasksExecuted=19457992, numSteals=22580, numExceptions=0, numParks=180133, numFalseAlarmUnparks=22858, numSharedQueueSwitches=19402275, numLocalSubmits=194578575, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=195740710, numSharedTasksExecuted=17795511, numSteals=21416, numExceptions=0, numParks=171072, numFalseAlarmUnparks=22142, numSharedQueueSwitches=17742099, numLocalSubmits=177947138, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=181912603, numSharedTasksExecuted=16537301, numSteals=20434, numExceptions=0, numParks=157220, numFalseAlarmUnparks=21321, numSharedQueueSwitches=16491342, numLocalSubmits=165374269, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=165817358, numSharedTasksExecuted=15074297, numSteals=18867, numExceptions=0, numParks=144080, numFalseAlarmUnparks=19789, numSharedQueueSwitches=15035697, numLocalSubmits=150742732, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=140721953, numSharedTasksExecuted=12792974, numSteals=17242, numExceptions=0, numParks=130199, numFalseAlarmUnparks=20066, numSharedQueueSwitches=12755048, numLocalSubmits=127929184, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=72251047, numSharedTasksExecuted=6567750, numSteals=13349, numExceptions=0, numParks=92433, numFalseAlarmUnparks=17323, numSharedQueueSwitches=6546184, numLocalSubmits=65682523, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=34337042, numSharedTasksExecuted=3121334, numSteals=9180, numExceptions=0, numParks=62507, numFalseAlarmUnparks=12403, numSharedQueueSwitches=3107018, numLocalSubmits=31215587, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=17392965, numSharedTasksExecuted=1581031, numSteals=5852, numExceptions=0, numParks=38635, numFalseAlarmUnparks=8297, numSharedQueueSwitches=1571756, numLocalSubmits=15811812, approximateLocalQueueSize=0}
--------------------------------
873179,550 ops/s


Result "testFactorial07":
  870991,529 Â±(99.9%) 6497,315 ops/s [Average]
  (min, avg, max) = (863514,473, 870991,529, 876738,150), stdev = 4297,571
  CI (99.9%): [864494,215, 877488,844] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 7 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testFactorial07
# Parameters: (strategy = a-lock-block)

# Run progress: 25,93% complete, ETA 09:20:58
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
915668,799 ops/s
# Warmup Iteration   2: 953779,537 ops/s
# Warmup Iteration   3: 875887,230 ops/s
Iteration   1: 869838,520 ops/s
Iteration   2: 868767,160 ops/s
Iteration   3: 868149,872 ops/s
Iteration   4: 872669,587 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=205298756, numSharedTasksExecuted=18662356, numSteals=27096, numExceptions=0, numParks=182395, numFalseAlarmUnparks=22711, numSharedQueueSwitches=18608910, numLocalSubmits=186633699, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=198220040, numSharedTasksExecuted=18020597, numSteals=24508, numExceptions=0, numParks=172371, numFalseAlarmUnparks=22096, numSharedQueueSwitches=17971618, numLocalSubmits=180200329, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=182603253, numSharedTasksExecuted=16600251, numSteals=23337, numExceptions=0, numParks=160382, numFalseAlarmUnparks=20878, numSharedQueueSwitches=16554704, numLocalSubmits=166002793, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=161810102, numSharedTasksExecuted=14709407, numSteals=22351, numExceptions=0, numParks=147987, numFalseAlarmUnparks=20315, numSharedQueueSwitches=14669866, numLocalSubmits=147099569, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=142154592, numSharedTasksExecuted=12924165, numSteals=19861, numExceptions=0, numParks=134668, numFalseAlarmUnparks=20585, numSharedQueueSwitches=12888860, numLocalSubmits=129232733, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=77257231, numSharedTasksExecuted=7023526, numSteals=15458, numExceptions=0, numParks=94725, numFalseAlarmUnparks=17472, numSharedQueueSwitches=7001317, numLocalSubmits=70234200, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=33696743, numSharedTasksExecuted=3063400, numSteals=11731, numExceptions=0, numParks=66929, numFalseAlarmUnparks=13473, numSharedQueueSwitches=3043434, numLocalSubmits=30633584, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=15628571, numSharedTasksExecuted=1420786, numSteals=7821, numExceptions=0, numParks=43489, numFalseAlarmUnparks=9468, numSharedQueueSwitches=1411180, numLocalSubmits=14207893, approximateLocalQueueSize=0}
--------------------------------
866796,031 ops/s

# Run progress: 26,16% complete, ETA 09:19:19
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
906988,497 ops/s
# Warmup Iteration   2: 880932,372 ops/s
# Warmup Iteration   3: 867408,880 ops/s
Iteration   1: 881713,644 ops/s
Iteration   2: 870209,758 ops/s
Iteration   3: 876720,584 ops/s
Iteration   4: 863333,348 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=206953159, numSharedTasksExecuted=18814848, numSteals=25583, numExceptions=0, numParks=188036, numFalseAlarmUnparks=23946, numSharedQueueSwitches=18754446, numLocalSubmits=188140241, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=199887314, numSharedTasksExecuted=18170672, numSteals=24367, numExceptions=0, numParks=173363, numFalseAlarmUnparks=22443, numSharedQueueSwitches=18121776, numLocalSubmits=181714525, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=180932322, numSharedTasksExecuted=16447624, numSteals=22951, numExceptions=0, numParks=162299, numFalseAlarmUnparks=21934, numSharedQueueSwitches=16402835, numLocalSubmits=164482699, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=164887991, numSharedTasksExecuted=14991017, numSteals=20410, numExceptions=0, numParks=149863, numFalseAlarmUnparks=21705, numSharedQueueSwitches=14948571, numLocalSubmits=149899509, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=144067314, numSharedTasksExecuted=13096787, numSteals=19069, numExceptions=0, numParks=133551, numFalseAlarmUnparks=20534, numSharedQueueSwitches=13059511, numLocalSubmits=130970128, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=73378461, numSharedTasksExecuted=6670877, numSteals=14256, numExceptions=0, numParks=93638, numFalseAlarmUnparks=17671, numSharedQueueSwitches=6643524, numLocalSubmits=66708002, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=32380707, numSharedTasksExecuted=2943449, numSteals=10386, numExceptions=0, numParks=64163, numFalseAlarmUnparks=12975, numSharedQueueSwitches=2928451, numLocalSubmits=29436857, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=16064010, numSharedTasksExecuted=1460304, numSteals=6628, numExceptions=0, numParks=40391, numFalseAlarmUnparks=9200, numSharedQueueSwitches=1450800, numLocalSubmits=14603739, approximateLocalQueueSize=0}
--------------------------------
872489,988 ops/s


Result "testFactorial07":
  871068,849 Â±(99.9%) 7871,999 ops/s [Average]
  (min, avg, max) = (863333,348, 871068,849, 881713,644), stdev = 5206,840
  CI (99.9%): [863196,850, 878940,849] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 7 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testFactorial07
# Parameters: (strategy = a-nonblocking)

# Run progress: 26,39% complete, ETA 09:17:39
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
920800,305 ops/s
# Warmup Iteration   2: 937374,760 ops/s
# Warmup Iteration   3: 869869,160 ops/s
Iteration   1: 870462,161 ops/s
Iteration   2: 863795,119 ops/s
Iteration   3: 864894,401 ops/s
Iteration   4: 870232,292 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=210358480, numSharedTasksExecuted=19122732, numSteals=25281, numExceptions=0, numParks=182055, numFalseAlarmUnparks=22915, numSharedQueueSwitches=19068459, numLocalSubmits=191233958, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=193600122, numSharedTasksExecuted=17599147, numSteals=23770, numExceptions=0, numParks=171297, numFalseAlarmUnparks=21663, numSharedQueueSwitches=17549758, numLocalSubmits=175999097, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=178523070, numSharedTasksExecuted=16229373, numSteals=21816, numExceptions=0, numParks=158798, numFalseAlarmUnparks=21379, numSharedQueueSwitches=16183715, numLocalSubmits=162293581, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=165329969, numSharedTasksExecuted=15031282, numSteals=19808, numExceptions=0, numParks=145970, numFalseAlarmUnparks=20089, numSharedQueueSwitches=14990066, numLocalSubmits=150301417, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=142005891, numSharedTasksExecuted=12910146, numSteals=18604, numExceptions=0, numParks=132111, numFalseAlarmUnparks=20270, numSharedQueueSwitches=12871526, numLocalSubmits=129096676, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=77267234, numSharedTasksExecuted=7024311, numSteals=13865, numExceptions=0, numParks=91542, numFalseAlarmUnparks=17343, numSharedQueueSwitches=7000748, numLocalSubmits=70243010, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=33404917, numSharedTasksExecuted=3036590, numSteals=10206, numExceptions=0, numParks=62717, numFalseAlarmUnparks=12613, numSharedQueueSwitches=3020842, numLocalSubmits=30368127, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=14786620, numSharedTasksExecuted=1344272, numSteals=6459, numExceptions=0, numParks=39403, numFalseAlarmUnparks=8597, numSharedQueueSwitches=1334068, numLocalSubmits=13442584, approximateLocalQueueSize=0}
--------------------------------
872578,889 ops/s

# Run progress: 26,62% complete, ETA 09:16:00
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
897087,903 ops/s
# Warmup Iteration   2: 926843,621 ops/s
# Warmup Iteration   3: 879246,174 ops/s
Iteration   1: 869530,951 ops/s
Iteration   2: 872755,951 ops/s
Iteration   3: 869011,456 ops/s
Iteration   4: 863906,104 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=206481948, numSharedTasksExecuted=18770552, numSteals=27881, numExceptions=0, numParks=183286, numFalseAlarmUnparks=22443, numSharedQueueSwitches=18718293, numLocalSubmits=187710033, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=199044965, numSharedTasksExecuted=18095436, numSteals=25593, numExceptions=0, numParks=175799, numFalseAlarmUnparks=22687, numSharedQueueSwitches=18044973, numLocalSubmits=180950465, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=179226835, numSharedTasksExecuted=16292653, numSteals=24300, numExceptions=0, numParks=161889, numFalseAlarmUnparks=21426, numSharedQueueSwitches=16248135, numLocalSubmits=162932640, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=165675597, numSharedTasksExecuted=15061625, numSteals=21894, numExceptions=0, numParks=149128, numFalseAlarmUnparks=20212, numSharedQueueSwitches=15021406, numLocalSubmits=150614179, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=139688607, numSharedTasksExecuted=12699097, numSteals=20440, numExceptions=0, numParks=133702, numFalseAlarmUnparks=20388, numSharedQueueSwitches=12663482, numLocalSubmits=126989486, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=77141637, numSharedTasksExecuted=7013122, numSteals=16205, numExceptions=0, numParks=95608, numFalseAlarmUnparks=17366, numSharedQueueSwitches=6990579, numLocalSubmits=70129678, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=32445285, numSharedTasksExecuted=2949819, numSteals=11693, numExceptions=0, numParks=66773, numFalseAlarmUnparks=13273, numSharedQueueSwitches=2932695, numLocalSubmits=29495986, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=13976979, numSharedTasksExecuted=1270599, numSteals=8806, numExceptions=0, numParks=43235, numFalseAlarmUnparks=8983, numSharedQueueSwitches=1260918, numLocalSubmits=12706483, approximateLocalQueueSize=0}
--------------------------------
862334,490 ops/s


Result "testFactorial07":
  867950,182 Â±(99.9%) 5837,076 ops/s [Average]
  (min, avg, max) = (862334,490, 867950,182, 872755,951), stdev = 3860,864
  CI (99.9%): [862113,106, 873787,257] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 7 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testFactorial07
# Parameters: (strategy = no-conc)

# Run progress: 26,85% complete, ETA 09:14:20
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
46900241,245 ops/s
# Warmup Iteration   2: 49189990,564 ops/s
# Warmup Iteration   3: 48813618,423 ops/s
Iteration   1: 48620137,614 ops/s
Iteration   2: 48618358,234 ops/s
Iteration   3: 48775686,374 ops/s
Iteration   4: 48666970,649 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
48730637,740 ops/s

# Run progress: 27,08% complete, ETA 09:12:40
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
45889706,781 ops/s
# Warmup Iteration   2: 48917197,862 ops/s
# Warmup Iteration   3: 48345329,560 ops/s
Iteration   1: 48720505,842 ops/s
Iteration   2: 48636927,349 ops/s
Iteration   3: 48649385,005 ops/s
Iteration   4: 48691070,916 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
48667848,682 ops/s


Result "testFactorial07":
  48677752,841 Â±(99.9%) 77951,548 ops/s [Average]
  (min, avg, max) = (48618358,234, 48677752,841, 48775686,374), stdev = 51560,123
  CI (99.9%): [48599801,292, 48755704,389] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 7 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testFactorial07
# Parameters: (strategy = ForkJoinLifo)

# Run progress: 27,31% complete, ETA 09:11:00
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
964763,397 ops/s
# Warmup Iteration   2: 961682,978 ops/s
# Warmup Iteration   3: 899675,249 ops/s
Iteration   1: 894455,003 ops/s
Iteration   2: 884771,620 ops/s
Iteration   3: 887618,493 ops/s
Iteration   4: 888434,472 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
887575,082 ops/s

# Run progress: 27,55% complete, ETA 09:09:20
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
946068,194 ops/s
# Warmup Iteration   2: 960148,400 ops/s
# Warmup Iteration   3: 900484,189 ops/s
Iteration   1: 895567,086 ops/s
Iteration   2: 890998,976 ops/s
Iteration   3: 888237,964 ops/s
Iteration   4: 888507,503 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
890394,322 ops/s


Result "testFactorial07":
  889656,052 Â±(99.9%) 4975,644 ops/s [Average]
  (min, avg, max) = (884771,620, 889656,052, 895567,086), stdev = 3291,080
  CI (99.9%): [884680,408, 894631,696] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 7 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testFactorial07
# Parameters: (strategy = J9FjSharedQueues)

# Run progress: 27,78% complete, ETA 09:07:39
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
675142,659 ops/s
# Warmup Iteration   2: 616927,545 ops/s
# Warmup Iteration   3: 646923,778 ops/s
Iteration   1: 629885,524 ops/s
Iteration   2: 625075,882 ops/s
Iteration   3: 613134,891 ops/s
Iteration   4: 613868,702 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
631899,121 ops/s

# Run progress: 28,01% complete, ETA 09:05:59
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
738672,489 ops/s
# Warmup Iteration   2: 725841,938 ops/s
# Warmup Iteration   3: 685837,108 ops/s
Iteration   1: 682141,475 ops/s
Iteration   2: 649262,275 ops/s
Iteration   3: 666300,462 ops/s
Iteration   4: 639725,765 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
650011,703 ops/s


Result "testFactorial07":
  640130,580 Â±(99.9%) 33613,219 ops/s [Average]
  (min, avg, max) = (613134,891, 640130,580, 682141,475), stdev = 22233,063
  CI (99.9%): [606517,361, 673743,799] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 7 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testFactorial07
# Parameters: (strategy = J9FjLifo)

# Run progress: 28,24% complete, ETA 09:04:18
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
877152,954 ops/s
# Warmup Iteration   2: 899416,653 ops/s
# Warmup Iteration   3: 842769,148 ops/s
Iteration   1: 842623,432 ops/s
Iteration   2: 834503,178 ops/s
Iteration   3: 827998,143 ops/s
Iteration   4: 837709,527 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
838982,911 ops/s

# Run progress: 28,47% complete, ETA 09:02:38
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
892931,995 ops/s
# Warmup Iteration   2: 907188,371 ops/s
# Warmup Iteration   3: 827852,174 ops/s
Iteration   1: 838352,779 ops/s
Iteration   2: 835743,455 ops/s
Iteration   3: 841207,800 ops/s
Iteration   4: 839550,757 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
836563,272 ops/s


Result "testFactorial07":
  837323,526 Â±(99.9%) 6174,000 ops/s [Average]
  (min, avg, max) = (827998,143, 837323,526, 842623,432), stdev = 4083,719
  CI (99.9%): [831149,526, 843497,525] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 7 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testFactorial07
# Parameters: (strategy = J9FjFifo)

# Run progress: 28,70% complete, ETA 09:00:57
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
902225,479 ops/s
# Warmup Iteration   2: 914045,372 ops/s
# Warmup Iteration   3: 847982,755 ops/s
Iteration   1: 844921,658 ops/s
Iteration   2: 838838,203 ops/s
Iteration   3: 837875,469 ops/s
Iteration   4: 838168,337 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
839570,392 ops/s

# Run progress: 28,94% complete, ETA 08:59:16
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
889132,222 ops/s
# Warmup Iteration   2: 916131,152 ops/s
# Warmup Iteration   3: 850437,637 ops/s
Iteration   1: 845157,489 ops/s
Iteration   2: 837520,092 ops/s
Iteration   3: 835559,797 ops/s
Iteration   4: 837925,965 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
835656,482 ops/s


Result "testFactorial07":
  839119,388 Â±(99.9%) 5077,273 ops/s [Average]
  (min, avg, max) = (835559,797, 839119,388, 845157,489), stdev = 3358,302
  CI (99.9%): [834042,115, 844196,661] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testFactorial08
# Parameters: (strategy = a-sync-block)

# Run progress: 29,17% complete, ETA 08:57:35
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
957008,647 ops/s
# Warmup Iteration   2: 990385,399 ops/s
# Warmup Iteration   3: 923495,362 ops/s
Iteration   1: 904048,753 ops/s
Iteration   2: 910866,277 ops/s
Iteration   3: 912907,516 ops/s
Iteration   4: 901796,522 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=202093171, numSharedTasksExecuted=18372179, numSteals=15925, numExceptions=0, numParks=129013, numFalseAlarmUnparks=14615, numSharedQueueSwitches=18332860, numLocalSubmits=183721051, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=191227096, numSharedTasksExecuted=17383747, numSteals=15704, numExceptions=0, numParks=123318, numFalseAlarmUnparks=14119, numSharedQueueSwitches=17345519, numLocalSubmits=173842039, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=178496853, numSharedTasksExecuted=16227050, numSteals=14448, numExceptions=0, numParks=114300, numFalseAlarmUnparks=13661, numSharedQueueSwitches=16188722, numLocalSubmits=162269701, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=165194710, numSharedTasksExecuted=15017924, numSteals=13758, numExceptions=0, numParks=107041, numFalseAlarmUnparks=13032, numSharedQueueSwitches=14984780, numLocalSubmits=150177041, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=148924472, numSharedTasksExecuted=13539009, numSteals=12558, numExceptions=0, numParks=97722, numFalseAlarmUnparks=13845, numSharedQueueSwitches=13510138, numLocalSubmits=135386236, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=104028416, numSharedTasksExecuted=9457209, numSteals=11529, numExceptions=0, numParks=78317, numFalseAlarmUnparks=11220, numSharedQueueSwitches=9437238, numLocalSubmits=94571711, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=49624461, numSharedTasksExecuted=4511204, numSteals=8315, numExceptions=0, numParks=57639, numFalseAlarmUnparks=9858, numSharedQueueSwitches=4490950, numLocalSubmits=45113294, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=22427444, numSharedTasksExecuted=2038651, numSteals=6084, numExceptions=0, numParks=41721, numFalseAlarmUnparks=7727, numSharedQueueSwitches=2028960, numLocalSubmits=20388577, approximateLocalQueueSize=0}
--------------------------------
910255,058 ops/s

# Run progress: 29,40% complete, ETA 08:55:54
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
975281,174 ops/s
# Warmup Iteration   2: 1007508,571 ops/s
# Warmup Iteration   3: 908454,207 ops/s
Iteration   1: 917993,428 ops/s
Iteration   2: 909228,581 ops/s
Iteration   3: 914171,469 ops/s
Iteration   4: 912368,191 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=201802968, numSharedTasksExecuted=18345320, numSteals=19850, numExceptions=0, numParks=138739, numFalseAlarmUnparks=15655, numSharedQueueSwitches=18305812, numLocalSubmits=183456235, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=189358160, numSharedTasksExecuted=17214155, numSteals=19114, numExceptions=0, numParks=131931, numFalseAlarmUnparks=15282, numSharedQueueSwitches=17172202, numLocalSubmits=172143413, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=182342371, numSharedTasksExecuted=16576499, numSteals=17449, numExceptions=0, numParks=124300, numFalseAlarmUnparks=14521, numSharedQueueSwitches=16533999, numLocalSubmits=165765636, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=165849595, numSharedTasksExecuted=15077168, numSteals=15833, numExceptions=0, numParks=113669, numFalseAlarmUnparks=14042, numSharedQueueSwitches=15040087, numLocalSubmits=150772471, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=146829971, numSharedTasksExecuted=13348486, numSteals=15145, numExceptions=0, numParks=104598, numFalseAlarmUnparks=14500, numSharedQueueSwitches=13319282, numLocalSubmits=133482050, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=104690794, numSharedTasksExecuted=9517008, numSteals=13504, numExceptions=0, numParks=87335, numFalseAlarmUnparks=13680, numSharedQueueSwitches=9490251, numLocalSubmits=95173297, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=51268543, numSharedTasksExecuted=4661406, numSteals=10312, numExceptions=0, numParks=67383, numFalseAlarmUnparks=11245, numSharedQueueSwitches=4641898, numLocalSubmits=46608589, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=26015367, numSharedTasksExecuted=2365217, numSteals=8046, numExceptions=0, numParks=48720, numFalseAlarmUnparks=8755, numSharedQueueSwitches=2347731, numLocalSubmits=23650819, approximateLocalQueueSize=0}
--------------------------------
911983,195 ops/s


Result "testFactorial08":
  910561,899 Â±(99.9%) 7131,572 ops/s [Average]
  (min, avg, max) = (901796,522, 910561,899, 917993,428), stdev = 4717,094
  CI (99.9%): [903430,327, 917693,471] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testFactorial08
# Parameters: (strategy = a-sync-nocheck)

# Run progress: 29,63% complete, ETA 08:54:13
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
942206,876 ops/s
# Warmup Iteration   2: 984557,645 ops/s
# Warmup Iteration   3: 910750,603 ops/s
Iteration   1: 905479,338 ops/s
Iteration   2: 906616,018 ops/s
Iteration   3: 905424,206 ops/s
Iteration   4: 902633,843 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=196559516, numSharedTasksExecuted=17869383, numSteals=18397, numExceptions=0, numParks=137055, numFalseAlarmUnparks=15423, numSharedQueueSwitches=17827910, numLocalSubmits=178691278, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=190015419, numSharedTasksExecuted=17273292, numSteals=18494, numExceptions=0, numParks=127373, numFalseAlarmUnparks=14859, numSharedQueueSwitches=17237073, numLocalSubmits=172739899, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=184629322, numSharedTasksExecuted=16783730, numSteals=17255, numExceptions=0, numParks=117776, numFalseAlarmUnparks=13051, numSharedQueueSwitches=16751086, numLocalSubmits=167844078, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=163160906, numSharedTasksExecuted=14833215, numSteals=15310, numExceptions=0, numParks=112104, numFalseAlarmUnparks=14048, numSharedQueueSwitches=14802741, numLocalSubmits=148328198, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=145017396, numSharedTasksExecuted=13184176, numSteals=14322, numExceptions=0, numParks=103941, numFalseAlarmUnparks=14482, numSharedQueueSwitches=13153597, numLocalSubmits=131835089, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=102421450, numSharedTasksExecuted=9311358, numSteals=12245, numExceptions=0, numParks=83664, numFalseAlarmUnparks=13050, numSharedQueueSwitches=9287781, numLocalSubmits=93110689, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=50502473, numSharedTasksExecuted=4591047, numSteals=10083, numExceptions=0, numParks=63688, numFalseAlarmUnparks=10911, numSharedQueueSwitches=4576000, numLocalSubmits=45911426, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=25317346, numSharedTasksExecuted=2301427, numSteals=7911, numExceptions=0, numParks=45690, numFalseAlarmUnparks=8365, numSharedQueueSwitches=2290579, numLocalSubmits=23015543, approximateLocalQueueSize=0}
--------------------------------
903530,451 ops/s

# Run progress: 29,86% complete, ETA 08:52:32
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
955456,860 ops/s
# Warmup Iteration   2: 988028,314 ops/s
# Warmup Iteration   3: 909245,286 ops/s
Iteration   1: 863687,218 ops/s
Iteration   2: 906614,785 ops/s
Iteration   3: 902721,962 ops/s
Iteration   4: 907224,779 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=197209504, numSharedTasksExecuted=17927226, numSteals=21478, numExceptions=0, numParks=141813, numFalseAlarmUnparks=16247, numSharedQueueSwitches=17883864, numLocalSubmits=179280594, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=188501051, numSharedTasksExecuted=17135673, numSteals=20449, numExceptions=0, numParks=133594, numFalseAlarmUnparks=15371, numSharedQueueSwitches=17094098, numLocalSubmits=171363597, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=174884787, numSharedTasksExecuted=15899060, numSteals=18807, numExceptions=0, numParks=125630, numFalseAlarmUnparks=14806, numSharedQueueSwitches=15858179, numLocalSubmits=158986990, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=161528430, numSharedTasksExecuted=14683903, numSteals=18132, numExceptions=0, numParks=116410, numFalseAlarmUnparks=14225, numSharedQueueSwitches=14650775, numLocalSubmits=146843389, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=142750490, numSharedTasksExecuted=12979352, numSteals=15790, numExceptions=0, numParks=105198, numFalseAlarmUnparks=14529, numSharedQueueSwitches=12946675, numLocalSubmits=129774867, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=106421815, numSharedTasksExecuted=9674970, numSteals=14318, numExceptions=0, numParks=88504, numFalseAlarmUnparks=13313, numSharedQueueSwitches=9651942, numLocalSubmits=96747300, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=51446015, numSharedTasksExecuted=4677324, numSteals=12019, numExceptions=0, numParks=69680, numFalseAlarmUnparks=11607, numSharedQueueSwitches=4661388, numLocalSubmits=46769622, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=26448619, numSharedTasksExecuted=2403473, numSteals=10493, numExceptions=0, numParks=52031, numFalseAlarmUnparks=9212, numSharedQueueSwitches=2387942, numLocalSubmits=24043371, approximateLocalQueueSize=0}
--------------------------------
903622,604 ops/s


Result "testFactorial08":
  900755,520 Â±(99.9%) 19853,508 ops/s [Average]
  (min, avg, max) = (863687,218, 900755,520, 907224,779), stdev = 13131,866
  CI (99.9%): [880902,012, 920609,028] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testFactorial08
# Parameters: (strategy = a-lock-block)

# Run progress: 30,09% complete, ETA 08:50:50
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
980405,972 ops/s
# Warmup Iteration   2: 964410,283 ops/s
# Warmup Iteration   3: 898410,839 ops/s
Iteration   1: 906052,119 ops/s
Iteration   2: 904969,501 ops/s
Iteration   3: 902274,752 ops/s
Iteration   4: 903243,235 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=198796062, numSharedTasksExecuted=18072151, numSteals=19332, numExceptions=0, numParks=132264, numFalseAlarmUnparks=14421, numSharedQueueSwitches=18024409, numLocalSubmits=180723379, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=189868134, numSharedTasksExecuted=17261076, numSteals=18340, numExceptions=0, numParks=125207, numFalseAlarmUnparks=13551, numSharedQueueSwitches=17219992, numLocalSubmits=172607532, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=174014869, numSharedTasksExecuted=15819920, numSteals=16674, numExceptions=0, numParks=117945, numFalseAlarmUnparks=13705, numSharedQueueSwitches=15783307, numLocalSubmits=158195407, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=167102794, numSharedTasksExecuted=15190942, numSteals=16565, numExceptions=0, numParks=109066, numFalseAlarmUnparks=12981, numSharedQueueSwitches=15161330, numLocalSubmits=151911234, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=146342749, numSharedTasksExecuted=13303640, numSteals=15401, numExceptions=0, numParks=100895, numFalseAlarmUnparks=13373, numSharedQueueSwitches=13271338, numLocalSubmits=133038466, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=105191564, numSharedTasksExecuted=9563415, numSteals=12696, numExceptions=0, numParks=81679, numFalseAlarmUnparks=11376, numSharedQueueSwitches=9542452, numLocalSubmits=95629930, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=49758687, numSharedTasksExecuted=4523383, numSteals=9984, numExceptions=0, numParks=62382, numFalseAlarmUnparks=10242, numSharedQueueSwitches=4507860, numLocalSubmits=45235303, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=25112941, numSharedTasksExecuted=2282553, numSteals=7747, numExceptions=0, numParks=44063, numFalseAlarmUnparks=7652, numSharedQueueSwitches=2272310, numLocalSubmits=22829469, approximateLocalQueueSize=0}
--------------------------------
899868,827 ops/s

# Run progress: 30,32% complete, ETA 08:49:09
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
913613,695 ops/s
# Warmup Iteration   2: 973572,321 ops/s
# Warmup Iteration   3: 909912,908 ops/s
Iteration   1: 914828,212 ops/s
Iteration   2: 916185,849 ops/s
Iteration   3: 904716,174 ops/s
Iteration   4: 904597,428 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=197759025, numSharedTasksExecuted=17978041, numSteals=18874, numExceptions=0, numParks=136860, numFalseAlarmUnparks=15057, numSharedQueueSwitches=17936965, numLocalSubmits=179780550, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=191218139, numSharedTasksExecuted=17383332, numSteals=17688, numExceptions=0, numParks=128281, numFalseAlarmUnparks=14854, numSharedQueueSwitches=17346335, numLocalSubmits=173834346, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=181043101, numSharedTasksExecuted=16458463, numSteals=16635, numExceptions=0, numParks=121693, numFalseAlarmUnparks=14216, numSharedQueueSwitches=16419897, numLocalSubmits=164584537, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=161332167, numSharedTasksExecuted=14666922, numSteals=15732, numExceptions=0, numParks=115321, numFalseAlarmUnparks=14130, numSharedQueueSwitches=14632978, numLocalSubmits=146665869, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=148518057, numSharedTasksExecuted=13501985, numSteals=14298, numExceptions=0, numParks=104715, numFalseAlarmUnparks=14281, numSharedQueueSwitches=13469399, numLocalSubmits=135016977, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=104834808, numSharedTasksExecuted=9530160, numSteals=12818, numExceptions=0, numParks=85132, numFalseAlarmUnparks=13016, numSharedQueueSwitches=9505935, numLocalSubmits=95304248, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=50099353, numSharedTasksExecuted=4554456, numSteals=10403, numExceptions=0, numParks=64462, numFalseAlarmUnparks=10855, numSharedQueueSwitches=4537377, numLocalSubmits=45544920, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=26029847, numSharedTasksExecuted=2366148, numSteals=8488, numExceptions=0, numParks=47614, numFalseAlarmUnparks=8553, numSharedQueueSwitches=2353794, numLocalSubmits=23663543, approximateLocalQueueSize=0}
--------------------------------
901713,121 ops/s


Result "testFactorial08":
  905844,922 Â±(99.9%) 8181,653 ops/s [Average]
  (min, avg, max) = (899868,827, 905844,922, 916185,849), stdev = 5411,657
  CI (99.9%): [897663,269, 914026,575] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testFactorial08
# Parameters: (strategy = a-nonblocking)

# Run progress: 30,56% complete, ETA 08:47:27
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
957645,834 ops/s
# Warmup Iteration   2: 982771,308 ops/s
# Warmup Iteration   3: 931452,272 ops/s
Iteration   1: 919284,108 ops/s
Iteration   2: 911413,310 ops/s
Iteration   3: 912379,904 ops/s
Iteration   4: 915678,597 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=201189867, numSharedTasksExecuted=18289703, numSteals=16076, numExceptions=0, numParks=130686, numFalseAlarmUnparks=14655, numSharedQueueSwitches=18250655, numLocalSubmits=182899271, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=193718001, numSharedTasksExecuted=17610820, numSteals=15140, numExceptions=0, numParks=125816, numFalseAlarmUnparks=14425, numSharedQueueSwitches=17570261, numLocalSubmits=176107057, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=176866053, numSharedTasksExecuted=16078692, numSteals=14528, numExceptions=0, numParks=116470, numFalseAlarmUnparks=13573, numSharedQueueSwitches=16043061, numLocalSubmits=160786956, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=168117873, numSharedTasksExecuted=15283843, numSteals=13009, numExceptions=0, numParks=109081, numFalseAlarmUnparks=13304, numSharedQueueSwitches=15249168, numLocalSubmits=152834852, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=148796035, numSharedTasksExecuted=13526960, numSteals=12695, numExceptions=0, numParks=100815, numFalseAlarmUnparks=13799, numSharedQueueSwitches=13498422, numLocalSubmits=135269139, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=103453405, numSharedTasksExecuted=9404548, numSteals=10491, numExceptions=0, numParks=79885, numFalseAlarmUnparks=11859, numSharedQueueSwitches=9380649, numLocalSubmits=94048576, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=51116967, numSharedTasksExecuted=4647039, numSteals=8123, numExceptions=0, numParks=60755, numFalseAlarmUnparks=10157, numSharedQueueSwitches=4630349, numLocalSubmits=46470248, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=26548919, numSharedTasksExecuted=2413595, numSteals=5870, numExceptions=0, numParks=43253, numFalseAlarmUnparks=7749, numSharedQueueSwitches=2402585, numLocalSubmits=24135821, approximateLocalQueueSize=0}
--------------------------------
916853,250 ops/s

# Run progress: 30,79% complete, ETA 08:45:46
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
922980,918 ops/s
# Warmup Iteration   2: 990405,627 ops/s
# Warmup Iteration   3: 916212,533 ops/s
Iteration   1: 910862,372 ops/s
Iteration   2: 915330,072 ops/s
Iteration   3: 913098,144 ops/s
Iteration   4: 907789,193 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=204358027, numSharedTasksExecuted=18578092, numSteals=18382, numExceptions=0, numParks=134364, numFalseAlarmUnparks=15182, numSharedQueueSwitches=18536526, numLocalSubmits=185779587, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=187421076, numSharedTasksExecuted=17037251, numSteals=18455, numExceptions=0, numParks=128562, numFalseAlarmUnparks=14835, numSharedQueueSwitches=16999617, numLocalSubmits=170381216, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=181760706, numSharedTasksExecuted=16523368, numSteals=16327, numExceptions=0, numParks=119982, numFalseAlarmUnparks=14579, numSharedQueueSwitches=16488236, numLocalSubmits=165236474, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=163996445, numSharedTasksExecuted=14910424, numSteals=14717, numExceptions=0, numParks=114063, numFalseAlarmUnparks=14085, numSharedQueueSwitches=14872319, numLocalSubmits=149089703, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=149274486, numSharedTasksExecuted=13570987, numSteals=14057, numExceptions=0, numParks=103844, numFalseAlarmUnparks=14468, numSharedQueueSwitches=13539676, numLocalSubmits=135705048, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=102497900, numSharedTasksExecuted=9317492, numSteals=12323, numExceptions=0, numParks=82789, numFalseAlarmUnparks=12724, numSharedQueueSwitches=9292823, numLocalSubmits=93179376, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=52380846, numSharedTasksExecuted=4761749, numSteals=9444, numExceptions=0, numParks=61280, numFalseAlarmUnparks=10104, numSharedQueueSwitches=4745611, numLocalSubmits=47619192, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=22416235, numSharedTasksExecuted=2037528, numSteals=7547, numExceptions=0, numParks=43393, numFalseAlarmUnparks=7870, numSharedQueueSwitches=2025150, numLocalSubmits=20378234, approximateLocalQueueSize=0}
--------------------------------
906981,522 ops/s


Result "testFactorial08":
  912967,047 Â±(99.9%) 5915,521 ops/s [Average]
  (min, avg, max) = (906981,522, 912967,047, 919284,108), stdev = 3912,751
  CI (99.9%): [907051,526, 918882,568] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testFactorial08
# Parameters: (strategy = no-conc)

# Run progress: 31,02% complete, ETA 08:44:04
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
51152617,488 ops/s
# Warmup Iteration   2: 53709239,231 ops/s
# Warmup Iteration   3: 53197523,531 ops/s
Iteration   1: 53219578,936 ops/s
Iteration   2: 53408939,441 ops/s
Iteration   3: 53246266,842 ops/s
Iteration   4: 53194768,130 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
53210550,698 ops/s

# Run progress: 31,25% complete, ETA 08:42:23
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
49720999,505 ops/s
# Warmup Iteration   2: 53906839,991 ops/s
# Warmup Iteration   3: 53334089,111 ops/s
Iteration   1: 53125140,193 ops/s
Iteration   2: 53134591,114 ops/s
Iteration   3: 53209680,940 ops/s
Iteration   4: 53088726,952 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
52965518,653 ops/s


Result "testFactorial08":
  53180376,190 Â±(99.9%) 174433,527 ops/s [Average]
  (min, avg, max) = (52965518,653, 53180376,190, 53408939,441), stdev = 115376,978
  CI (99.9%): [53005942,663, 53354809,717] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testFactorial08
# Parameters: (strategy = ForkJoinLifo)

# Run progress: 31,48% complete, ETA 08:40:41
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1245554,846 ops/s
# Warmup Iteration   2: 1282345,819 ops/s
# Warmup Iteration   3: 1187028,974 ops/s
Iteration   1: 1177656,153 ops/s
Iteration   2: 1165148,216 ops/s
Iteration   3: 1166789,580 ops/s
Iteration   4: 1159402,697 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
1161777,700 ops/s

# Run progress: 31,71% complete, ETA 08:38:59
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1204808,586 ops/s
# Warmup Iteration   2: 1239121,905 ops/s
# Warmup Iteration   3: 1141403,205 ops/s
Iteration   1: 1127078,056 ops/s
Iteration   2: 1129143,675 ops/s
Iteration   3: 1125903,681 ops/s
Iteration   4: 1127799,742 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
1123713,923 ops/s


Result "testFactorial08":
  1146441,342 Â±(99.9%) 32274,797 ops/s [Average]
  (min, avg, max) = (1123713,923, 1146441,342, 1177656,153), stdev = 21347,780
  CI (99.9%): [1114166,545, 1178716,140] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testFactorial08
# Parameters: (strategy = J9FjSharedQueues)

# Run progress: 31,94% complete, ETA 08:37:17
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
707061,796 ops/s
# Warmup Iteration   2: 715148,655 ops/s
# Warmup Iteration   3: 708613,220 ops/s
Iteration   1: 684047,518 ops/s
Iteration   2: 625248,548 ops/s
Iteration   3: 655414,197 ops/s
Iteration   4: 628785,464 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
622047,775 ops/s

# Run progress: 32,18% complete, ETA 08:35:35
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
638979,046 ops/s
# Warmup Iteration   2: 828688,027 ops/s
# Warmup Iteration   3: 764449,142 ops/s
Iteration   1: 680120,234 ops/s
Iteration   2: 660427,236 ops/s
Iteration   3: 668684,212 ops/s
Iteration   4: 658431,160 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
674858,565 ops/s


Result "testFactorial08":
  655806,491 Â±(99.9%) 34730,696 ops/s [Average]
  (min, avg, max) = (622047,775, 655806,491, 684047,518), stdev = 22972,205
  CI (99.9%): [621075,795, 690537,186] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testFactorial08
# Parameters: (strategy = J9FjLifo)

# Run progress: 32,41% complete, ETA 08:33:53
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1035929,339 ops/s
# Warmup Iteration   2: 1082188,970 ops/s
# Warmup Iteration   3: 1000750,639 ops/s
Iteration   1: 1094970,234 ops/s
Iteration   2: 1096095,113 ops/s
Iteration   3: 1103279,813 ops/s
Iteration   4: 1102187,943 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
1097341,613 ops/s

# Run progress: 32,64% complete, ETA 08:32:10
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1147543,081 ops/s
# Warmup Iteration   2: 1224459,789 ops/s
# Warmup Iteration   3: 1104195,362 ops/s
Iteration   1: 1106517,612 ops/s
Iteration   2: 1102799,731 ops/s
Iteration   3: 1105441,482 ops/s
Iteration   4: 1106795,638 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
1102526,034 ops/s


Result "testFactorial08":
  1101795,521 Â±(99.9%) 6442,082 ops/s [Average]
  (min, avg, max) = (1094970,234, 1101795,521, 1106795,638), stdev = 4261,039
  CI (99.9%): [1095353,439, 1108237,604] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testFactorial08
# Parameters: (strategy = J9FjFifo)

# Run progress: 32,87% complete, ETA 08:30:28
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1025480,829 ops/s
# Warmup Iteration   2: 1041142,607 ops/s
# Warmup Iteration   3: 955083,378 ops/s
Iteration   1: 956309,070 ops/s
Iteration   2: 948215,626 ops/s
Iteration   3: 945842,332 ops/s
Iteration   4: 947058,102 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
950121,450 ops/s

# Run progress: 33,10% complete, ETA 08:28:46
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
951454,202 ops/s
# Warmup Iteration   2: 967810,035 ops/s
# Warmup Iteration   3: 901257,966 ops/s
Iteration   1: 895331,120 ops/s
Iteration   2: 887192,509 ops/s
Iteration   3: 885450,369 ops/s
Iteration   4: 885393,781 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
886326,741 ops/s


Result "testFactorial08":
  918724,110 Â±(99.9%) 49416,900 ops/s [Average]
  (min, avg, max) = (885393,781, 918724,110, 956309,070), stdev = 32686,220
  CI (99.9%): [869307,210, 968141,010] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 15 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testFactorial15
# Parameters: (strategy = a-sync-block)

# Run progress: 33,33% complete, ETA 08:27:03
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1316062,550 ops/s
# Warmup Iteration   2: 1352478,974 ops/s
# Warmup Iteration   3: 1271658,091 ops/s
Iteration   1: 1264861,543 ops/s
Iteration   2: 1214113,097 ops/s
Iteration   3: 1213302,568 ops/s
Iteration   4: 1218408,788 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=197879476, numSharedTasksExecuted=17988947, numSteals=33536, numExceptions=0, numParks=114256, numFalseAlarmUnparks=9665, numSharedQueueSwitches=11206019, numLocalSubmits=179889318, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=190344819, numSharedTasksExecuted=17307953, numSteals=29748, numExceptions=0, numParks=120056, numFalseAlarmUnparks=10820, numSharedQueueSwitches=10536078, numLocalSubmits=173046748, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=189313419, numSharedTasksExecuted=17208099, numSteals=33757, numExceptions=0, numParks=111300, numFalseAlarmUnparks=9415, numSharedQueueSwitches=10641312, numLocalSubmits=172099584, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=179387079, numSharedTasksExecuted=16308158, numSteals=33995, numExceptions=0, numParks=111574, numFalseAlarmUnparks=9047, numSharedQueueSwitches=10094536, numLocalSubmits=163078617, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=175224497, numSharedTasksExecuted=15931644, numSteals=31896, numExceptions=0, numParks=111980, numFalseAlarmUnparks=9497, numSharedQueueSwitches=10229558, numLocalSubmits=159296681, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=176737696, numSharedTasksExecuted=16067212, numSteals=29152, numExceptions=0, numParks=112281, numFalseAlarmUnparks=8210, numSharedQueueSwitches=10118566, numLocalSubmits=160673056, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=168585524, numSharedTasksExecuted=15325576, numSteals=28920, numExceptions=0, numParks=105300, numFalseAlarmUnparks=8810, numSharedQueueSwitches=9701862, numLocalSubmits=153259763, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=157543047, numSharedTasksExecuted=14318378, numSteals=35582, numExceptions=0, numParks=103769, numFalseAlarmUnparks=8893, numSharedQueueSwitches=9321477, numLocalSubmits=143215823, approximateLocalQueueSize=0}
--------------------------------
1216992,435 ops/s

# Run progress: 33,56% complete, ETA 08:25:21
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1323584,625 ops/s
# Warmup Iteration   2: 1357533,090 ops/s
# Warmup Iteration   3: 1264481,162 ops/s
Iteration   1: 1266793,176 ops/s
Iteration   2: 1234288,105 ops/s
Iteration   3: 1242229,425 ops/s
Iteration   4: 1244256,168 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=204319372, numSharedTasksExecuted=18573715, numSteals=18650, numExceptions=0, numParks=88343, numFalseAlarmUnparks=7703, numSharedQueueSwitches=11395579, numLocalSubmits=185743744, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=199489954, numSharedTasksExecuted=18134970, numSteals=16423, numExceptions=0, numParks=88408, numFalseAlarmUnparks=8091, numSharedQueueSwitches=11317119, numLocalSubmits=181353917, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=191053107, numSharedTasksExecuted=17367419, numSteals=18597, numExceptions=0, numParks=83972, numFalseAlarmUnparks=7270, numSharedQueueSwitches=10697884, numLocalSubmits=173682711, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=186545725, numSharedTasksExecuted=16958446, numSteals=15530, numExceptions=0, numParks=85720, numFalseAlarmUnparks=7148, numSharedQueueSwitches=10301760, numLocalSubmits=169586914, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=180737509, numSharedTasksExecuted=16432289, numSteals=16795, numExceptions=0, numParks=86383, numFalseAlarmUnparks=7308, numSharedQueueSwitches=10380098, numLocalSubmits=164308923, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=170398345, numSharedTasksExecuted=15492416, numSteals=15547, numExceptions=0, numParks=84649, numFalseAlarmUnparks=7286, numSharedQueueSwitches=9656062, numLocalSubmits=154909752, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=168785059, numSharedTasksExecuted=15345766, numSteals=14345, numExceptions=0, numParks=79279, numFalseAlarmUnparks=6294, numSharedQueueSwitches=9672726, numLocalSubmits=153443432, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=154793066, numSharedTasksExecuted=14069726, numSteals=18793, numExceptions=0, numParks=77331, numFalseAlarmUnparks=6744, numSharedQueueSwitches=9010337, numLocalSubmits=140717997, approximateLocalQueueSize=0}
--------------------------------
1236068,809 ops/s


Result "testFactorial15":
  1235131,411 Â±(99.9%) 30020,161 ops/s [Average]
  (min, avg, max) = (1213302,568, 1235131,411, 1266793,176), stdev = 19856,478
  CI (99.9%): [1205111,250, 1265151,573] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 15 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testFactorial15
# Parameters: (strategy = a-sync-nocheck)

# Run progress: 33,80% complete, ETA 08:23:38
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1386576,356 ops/s
# Warmup Iteration   2: 1389064,049 ops/s
# Warmup Iteration   3: 1293672,968 ops/s
Iteration   1: 1295130,445 ops/s
Iteration   2: 1251299,455 ops/s
Iteration   3: 1245863,582 ops/s
Iteration   4: 1240448,014 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=203966943, numSharedTasksExecuted=18542497, numSteals=8237, numExceptions=0, numParks=64910, numFalseAlarmUnparks=5175, numSharedQueueSwitches=11615448, numLocalSubmits=185424071, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=200980796, numSharedTasksExecuted=18270817, numSteals=8267, numExceptions=0, numParks=65050, numFalseAlarmUnparks=5327, numSharedQueueSwitches=11465821, numLocalSubmits=182709091, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=196320350, numSharedTasksExecuted=17847322, numSteals=7302, numExceptions=0, numParks=64849, numFalseAlarmUnparks=5535, numSharedQueueSwitches=11037214, numLocalSubmits=178472957, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=185864553, numSharedTasksExecuted=16897666, numSteals=7405, numExceptions=0, numParks=62925, numFalseAlarmUnparks=4923, numSharedQueueSwitches=10402265, numLocalSubmits=168969087, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=182884524, numSharedTasksExecuted=16626083, numSteals=6890, numExceptions=0, numParks=60882, numFalseAlarmUnparks=4981, numSharedQueueSwitches=10592549, numLocalSubmits=166259430, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=184056990, numSharedTasksExecuted=16731704, numSteals=7875, numExceptions=0, numParks=61294, numFalseAlarmUnparks=4484, numSharedQueueSwitches=10547048, numLocalSubmits=167324240, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=163924716, numSharedTasksExecuted=14902753, numSteals=7212, numExceptions=0, numParks=60528, numFalseAlarmUnparks=4815, numSharedQueueSwitches=9534850, numLocalSubmits=149023012, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=156059722, numSharedTasksExecuted=14186492, numSteals=8855, numExceptions=0, numParks=58969, numFalseAlarmUnparks=4755, numSharedQueueSwitches=9214441, numLocalSubmits=141871372, approximateLocalQueueSize=0}
--------------------------------
1256796,987 ops/s

# Run progress: 34,03% complete, ETA 08:21:56
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1338876,933 ops/s
# Warmup Iteration   2: 1377935,297 ops/s
# Warmup Iteration   3: 1293711,656 ops/s
Iteration   1: 1287444,462 ops/s
Iteration   2: 1251460,945 ops/s
Iteration   3: 1234275,509 ops/s
Iteration   4: 1255756,679 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=205292456, numSharedTasksExecuted=18663828, numSteals=7731, numExceptions=0, numParks=69278, numFalseAlarmUnparks=6136, numSharedQueueSwitches=11737264, numLocalSubmits=186630932, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=203964036, numSharedTasksExecuted=18542299, numSteals=7381, numExceptions=0, numParks=66987, numFalseAlarmUnparks=5349, numSharedQueueSwitches=11845886, numLocalSubmits=185422007, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=193838858, numSharedTasksExecuted=17621747, numSteals=7245, numExceptions=0, numParks=66676, numFalseAlarmUnparks=5749, numSharedQueueSwitches=11127767, numLocalSubmits=176217063, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=189084549, numSharedTasksExecuted=17188899, numSteals=8597, numExceptions=0, numParks=62527, numFalseAlarmUnparks=5326, numSharedQueueSwitches=10737789, numLocalSubmits=171893942, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=187009298, numSharedTasksExecuted=17000550, numSteals=7548, numExceptions=0, numParks=63254, numFalseAlarmUnparks=5765, numSharedQueueSwitches=10960046, numLocalSubmits=170008008, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=172191736, numSharedTasksExecuted=15653981, numSteals=7804, numExceptions=0, numParks=63774, numFalseAlarmUnparks=5499, numSharedQueueSwitches=10024290, numLocalSubmits=156538502, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=163221034, numSharedTasksExecuted=14839067, numSteals=6654, numExceptions=0, numParks=64899, numFalseAlarmUnparks=5751, numSharedQueueSwitches=9588654, numLocalSubmits=148384002, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=153360405, numSharedTasksExecuted=13940761, numSteals=9588, numExceptions=0, numParks=60235, numFalseAlarmUnparks=5271, numSharedQueueSwitches=9154762, numLocalSubmits=139416784, approximateLocalQueueSize=0}
--------------------------------
1242703,419 ops/s


Result "testFactorial15":
  1256117,950 Â±(99.9%) 30054,175 ops/s [Average]
  (min, avg, max) = (1234275,509, 1256117,950, 1295130,445), stdev = 19878,976
  CI (99.9%): [1226063,775, 1286172,125] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 15 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testFactorial15
# Parameters: (strategy = a-lock-block)

# Run progress: 34,26% complete, ETA 08:20:13
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1367118,532 ops/s
# Warmup Iteration   2: 1368621,412 ops/s
# Warmup Iteration   3: 1300118,518 ops/s
Iteration   1: 1283614,465 ops/s
Iteration   2: 1242828,997 ops/s
Iteration   3: 1246374,371 ops/s
Iteration   4: 1245023,611 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=204027306, numSharedTasksExecuted=18547448, numSteals=14700, numExceptions=0, numParks=79275, numFalseAlarmUnparks=6452, numSharedQueueSwitches=11436558, numLocalSubmits=185478303, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=201613485, numSharedTasksExecuted=18328402, numSteals=13780, numExceptions=0, numParks=81481, numFalseAlarmUnparks=6883, numSharedQueueSwitches=11466883, numLocalSubmits=183284883, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=191372893, numSharedTasksExecuted=17398370, numSteals=14659, numExceptions=0, numParks=81811, numFalseAlarmUnparks=7055, numSharedQueueSwitches=10696042, numLocalSubmits=173976215, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=189276963, numSharedTasksExecuted=17206441, numSteals=13969, numExceptions=0, numParks=78122, numFalseAlarmUnparks=6416, numSharedQueueSwitches=10533410, numLocalSubmits=172069543, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=184501049, numSharedTasksExecuted=16772467, numSteals=14165, numExceptions=0, numParks=76061, numFalseAlarmUnparks=6473, numSharedQueueSwitches=10591495, numLocalSubmits=167727890, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=172090947, numSharedTasksExecuted=15646438, numSteals=12942, numExceptions=0, numParks=79712, numFalseAlarmUnparks=6772, numSharedQueueSwitches=9794163, numLocalSubmits=156449077, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=166883286, numSharedTasksExecuted=15171274, numSteals=13996, numExceptions=0, numParks=75384, numFalseAlarmUnparks=6185, numSharedQueueSwitches=9644255, numLocalSubmits=151712017, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=155897476, numSharedTasksExecuted=14171295, numSteals=14789, numExceptions=0, numParks=72158, numFalseAlarmUnparks=6055, numSharedQueueSwitches=9080790, numLocalSubmits=141723342, approximateLocalQueueSize=0}
--------------------------------
1240112,998 ops/s

# Run progress: 34,49% complete, ETA 08:18:30
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1367946,140 ops/s
# Warmup Iteration   2: 1370991,154 ops/s
# Warmup Iteration   3: 1292651,361 ops/s
Iteration   1: 1252181,934 ops/s
Iteration   2: 1225693,609 ops/s
Iteration   3: 1222067,479 ops/s
Iteration   4: 1228676,536 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=200973953, numSharedTasksExecuted=18271672, numSteals=14878, numExceptions=0, numParks=98717, numFalseAlarmUnparks=8078, numSharedQueueSwitches=10955642, numLocalSubmits=182705147, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=198669976, numSharedTasksExecuted=18060652, numSteals=16897, numExceptions=0, numParks=93850, numFalseAlarmUnparks=7509, numSharedQueueSwitches=10922853, numLocalSubmits=180608241, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=192192554, numSharedTasksExecuted=17470965, numSteals=17024, numExceptions=0, numParks=92684, numFalseAlarmUnparks=7281, numSharedQueueSwitches=10337484, numLocalSubmits=174718928, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=181528866, numSharedTasksExecuted=16504344, numSteals=15162, numExceptions=0, numParks=94906, numFalseAlarmUnparks=7393, numSharedQueueSwitches=9835328, numLocalSubmits=165028905, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=178395656, numSharedTasksExecuted=16218731, numSteals=16449, numExceptions=0, numParks=90920, numFalseAlarmUnparks=7133, numSharedQueueSwitches=10029626, numLocalSubmits=162178945, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=169847296, numSharedTasksExecuted=15441946, numSteals=13726, numExceptions=0, numParks=89112, numFalseAlarmUnparks=7376, numSharedQueueSwitches=9067528, numLocalSubmits=154408720, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=165503625, numSharedTasksExecuted=15043985, numSteals=17628, numExceptions=0, numParks=84477, numFalseAlarmUnparks=6512, numSharedQueueSwitches=9171945, numLocalSubmits=150455537, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=154304410, numSharedTasksExecuted=14025561, numSteals=17271, numExceptions=0, numParks=85166, numFalseAlarmUnparks=6871, numSharedQueueSwitches=8691382, numLocalSubmits=140274057, approximateLocalQueueSize=0}
--------------------------------
1219844,799 ops/s


Result "testFactorial15":
  1240641,880 Â±(99.9%) 28423,486 ops/s [Average]
  (min, avg, max) = (1219844,799, 1240641,880, 1283614,465), stdev = 18800,376
  CI (99.9%): [1212218,394, 1269065,366] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 15 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testFactorial15
# Parameters: (strategy = a-nonblocking)

# Run progress: 34,72% complete, ETA 08:16:48
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1330560,703 ops/s
# Warmup Iteration   2: 1383809,937 ops/s
# Warmup Iteration   3: 1282279,699 ops/s
Iteration   1: 1287674,966 ops/s
Iteration   2: 1238850,418 ops/s
Iteration   3: 1235652,134 ops/s
Iteration   4: 1254067,306 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=204748406, numSharedTasksExecuted=18613270, numSteals=13985, numExceptions=0, numParks=84567, numFalseAlarmUnparks=7151, numSharedQueueSwitches=11395689, numLocalSubmits=186134382, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=198879201, numSharedTasksExecuted=18081691, numSteals=12726, numExceptions=0, numParks=88239, numFalseAlarmUnparks=6625, numSharedQueueSwitches=11115563, numLocalSubmits=180802243, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=188227391, numSharedTasksExecuted=17112489, numSteals=14233, numExceptions=0, numParks=82098, numFalseAlarmUnparks=6717, numSharedQueueSwitches=10438376, numLocalSubmits=171116366, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=191215089, numSharedTasksExecuted=17382581, numSteals=14105, numExceptions=0, numParks=80409, numFalseAlarmUnparks=6713, numSharedQueueSwitches=10545622, numLocalSubmits=173831135, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=180116779, numSharedTasksExecuted=16375503, numSteals=13097, numExceptions=0, numParks=80308, numFalseAlarmUnparks=6744, numSharedQueueSwitches=10291028, numLocalSubmits=163744392, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=178508000, numSharedTasksExecuted=16226706, numSteals=15128, numExceptions=0, numParks=75977, numFalseAlarmUnparks=6206, numSharedQueueSwitches=9990006, numLocalSubmits=162278191, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=166512895, numSharedTasksExecuted=15136955, numSteals=13453, numExceptions=0, numParks=73820, numFalseAlarmUnparks=6177, numSharedQueueSwitches=9413057, numLocalSubmits=151374753, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=156411678, numSharedTasksExecuted=14218034, numSteals=15096, numExceptions=0, numParks=73075, numFalseAlarmUnparks=5930, numSharedQueueSwitches=9041751, numLocalSubmits=142190748, approximateLocalQueueSize=0}
--------------------------------
1238785,792 ops/s

# Run progress: 34,95% complete, ETA 08:15:05
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1258783,027 ops/s
# Warmup Iteration   2: 1375368,029 ops/s
# Warmup Iteration   3: 1311620,180 ops/s
Iteration   1: 1253190,505 ops/s
Iteration   2: 1241440,808 ops/s
Iteration   3: 1236941,431 ops/s
Iteration   4: 1236681,850 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=202261855, numSharedTasksExecuted=18387007, numSteals=17582, numExceptions=0, numParks=92998, numFalseAlarmUnparks=7274, numSharedQueueSwitches=11005497, numLocalSubmits=183873274, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=202153769, numSharedTasksExecuted=18376404, numSteals=18008, numExceptions=0, numParks=90973, numFalseAlarmUnparks=7035, numSharedQueueSwitches=11164105, numLocalSubmits=183774159, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=192793355, numSharedTasksExecuted=17526469, numSteals=15282, numExceptions=0, numParks=90572, numFalseAlarmUnparks=7162, numSharedQueueSwitches=10485459, numLocalSubmits=175266499, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=186728138, numSharedTasksExecuted=16974788, numSteals=17166, numExceptions=0, numParks=89389, numFalseAlarmUnparks=6874, numSharedQueueSwitches=10119387, numLocalSubmits=169752055, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=181409288, numSharedTasksExecuted=16492193, numSteals=14826, numExceptions=0, numParks=87529, numFalseAlarmUnparks=7189, numSharedQueueSwitches=10103071, numLocalSubmits=164918285, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=176334936, numSharedTasksExecuted=16030242, numSteals=14322, numExceptions=0, numParks=88819, numFalseAlarmUnparks=5976, numSharedQueueSwitches=9668876, numLocalSubmits=160305618, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=165027735, numSharedTasksExecuted=15003773, numSteals=15608, numExceptions=0, numParks=87698, numFalseAlarmUnparks=6779, numSharedQueueSwitches=9203638, numLocalSubmits=150027351, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=147061844, numSharedTasksExecuted=13370124, numSteals=19996, numExceptions=0, numParks=85513, numFalseAlarmUnparks=6772, numSharedQueueSwitches=8395770, numLocalSubmits=133692679, approximateLocalQueueSize=0}
--------------------------------
1242303,344 ops/s


Result "testFactorial15":
  1246558,855 Â±(99.9%) 23979,035 ops/s [Average]
  (min, avg, max) = (1235652,134, 1246558,855, 1287674,966), stdev = 15860,647
  CI (99.9%): [1222579,820, 1270537,891] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 15 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testFactorial15
# Parameters: (strategy = no-conc)

# Run progress: 35,19% complete, ETA 08:13:22
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
50511091,837 ops/s
# Warmup Iteration   2: 53315275,319 ops/s
# Warmup Iteration   3: 51059103,925 ops/s
Iteration   1: 53178689,112 ops/s
Iteration   2: 53217983,939 ops/s
Iteration   3: 53217632,437 ops/s
Iteration   4: 53388276,278 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
53237157,486 ops/s

# Run progress: 35,42% complete, ETA 08:11:40
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
50858636,173 ops/s
# Warmup Iteration   2: 52606767,338 ops/s
# Warmup Iteration   3: 52691116,354 ops/s
Iteration   1: 52686893,224 ops/s
Iteration   2: 52671294,117 ops/s
Iteration   3: 52732286,929 ops/s
Iteration   4: 52652958,144 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
52667272,415 ops/s


Result "testFactorial15":
  52965044,408 Â±(99.9%) 459258,929 ops/s [Average]
  (min, avg, max) = (52652958,144, 52965044,408, 53388276,278), stdev = 303771,346
  CI (99.9%): [52505785,479, 53424303,337] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 15 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testFactorial15
# Parameters: (strategy = ForkJoinLifo)

# Run progress: 35,65% complete, ETA 08:09:58
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1331932,445 ops/s
# Warmup Iteration   2: 1367836,520 ops/s
# Warmup Iteration   3: 1240786,650 ops/s
Iteration   1: 1251783,422 ops/s
Iteration   2: 1246007,966 ops/s
Iteration   3: 1239858,837 ops/s
Iteration   4: 1236989,785 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
1240658,681 ops/s

# Run progress: 35,88% complete, ETA 08:08:15
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1249972,817 ops/s
# Warmup Iteration   2: 1292284,745 ops/s
# Warmup Iteration   3: 1196766,122 ops/s
Iteration   1: 1239966,233 ops/s
Iteration   2: 1239759,962 ops/s
Iteration   3: 1241145,758 ops/s
Iteration   4: 1241341,503 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
1237304,576 ops/s


Result "testFactorial15":
  1241481,672 Â±(99.9%) 6627,363 ops/s [Average]
  (min, avg, max) = (1236989,785, 1241481,672, 1251783,422), stdev = 4383,591
  CI (99.9%): [1234854,309, 1248109,036] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 15 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testFactorial15
# Parameters: (strategy = J9FjSharedQueues)

# Run progress: 36,11% complete, ETA 08:06:32
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
826175,722 ops/s
# Warmup Iteration   2: 849252,112 ops/s
# Warmup Iteration   3: 799475,503 ops/s
Iteration   1: 758963,156 ops/s
Iteration   2: 748427,715 ops/s
Iteration   3: 744242,121 ops/s
Iteration   4: 758420,398 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
748605,966 ops/s

# Run progress: 36,34% complete, ETA 08:04:49
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
825983,749 ops/s
# Warmup Iteration   2: 856818,627 ops/s
# Warmup Iteration   3: 795298,047 ops/s
Iteration   1: 778134,397 ops/s
Iteration   2: 766947,415 ops/s
Iteration   3: 772797,437 ops/s
Iteration   4: 761734,636 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
765226,408 ops/s


Result "testFactorial15":
  760349,965 Â±(99.9%) 16604,599 ops/s [Average]
  (min, avg, max) = (744242,121, 760349,965, 778134,397), stdev = 10982,914
  CI (99.9%): [743745,366, 776954,564] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 15 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testFactorial15
# Parameters: (strategy = J9FjLifo)

# Run progress: 36,57% complete, ETA 08:03:05
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1277488,671 ops/s
# Warmup Iteration   2: 1346809,268 ops/s
# Warmup Iteration   3: 1216681,588 ops/s
Iteration   1: 1221303,435 ops/s
Iteration   2: 1215829,117 ops/s
Iteration   3: 1220412,996 ops/s
Iteration   4: 1215484,066 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
1221477,846 ops/s

# Run progress: 36,81% complete, ETA 08:01:22
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1243082,944 ops/s
# Warmup Iteration   2: 1314487,722 ops/s
# Warmup Iteration   3: 1234837,689 ops/s
Iteration   1: 1222105,267 ops/s
Iteration   2: 1219032,088 ops/s
Iteration   3: 1209902,602 ops/s
Iteration   4: 1207677,997 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
1201237,040 ops/s


Result "testFactorial15":
  1215446,245 Â±(99.9%) 10639,050 ops/s [Average]
  (min, avg, max) = (1201237,040, 1215446,245, 1222105,267), stdev = 7037,073
  CI (99.9%): [1204807,196, 1226085,295] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 15 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testFactorial15
# Parameters: (strategy = J9FjFifo)

# Run progress: 37,04% complete, ETA 07:59:39
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1279655,433 ops/s
# Warmup Iteration   2: 1328969,910 ops/s
# Warmup Iteration   3: 1201871,682 ops/s
Iteration   1: 1207352,583 ops/s
Iteration   2: 1204097,596 ops/s
Iteration   3: 1207481,530 ops/s
Iteration   4: 1205613,272 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
1198956,690 ops/s

# Run progress: 37,27% complete, ETA 07:57:55
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1286746,992 ops/s
# Warmup Iteration   2: 1317321,580 ops/s
# Warmup Iteration   3: 1218876,688 ops/s
Iteration   1: 1220805,203 ops/s
Iteration   2: 1215232,877 ops/s
Iteration   3: 1211976,722 ops/s
Iteration   4: 1203960,913 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
1205908,317 ops/s


Result "testFactorial15":
  1208138,570 Â±(99.9%) 9508,476 ops/s [Average]
  (min, avg, max) = (1198956,690, 1208138,570, 1220805,203), stdev = 6289,268
  CI (99.9%): [1198630,094, 1217647,046] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testFactorial16
# Parameters: (strategy = a-sync-block)

# Run progress: 37,50% complete, ETA 07:56:12
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1361577,475 ops/s
# Warmup Iteration   2: 1386954,275 ops/s
# Warmup Iteration   3: 1344901,170 ops/s
Iteration   1: 1303087,609 ops/s
Iteration   2: 1256326,611 ops/s
Iteration   3: 1263243,228 ops/s
Iteration   4: 1274921,342 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=205737352, numSharedTasksExecuted=18703354, numSteals=6686, numExceptions=0, numParks=58944, numFalseAlarmUnparks=4819, numSharedQueueSwitches=11093274, numLocalSubmits=187033721, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=198315165, numSharedTasksExecuted=18028472, numSteals=7338, numExceptions=0, numParks=58450, numFalseAlarmUnparks=4903, numSharedQueueSwitches=10871949, numLocalSubmits=180286134, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=196757905, numSharedTasksExecuted=17887997, numSteals=6095, numExceptions=0, numParks=59426, numFalseAlarmUnparks=4800, numSharedQueueSwitches=10624795, numLocalSubmits=178872417, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=193635359, numSharedTasksExecuted=17603057, numSteals=7577, numExceptions=0, numParks=56686, numFalseAlarmUnparks=4323, numSharedQueueSwitches=10330785, numLocalSubmits=176031964, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=180789347, numSharedTasksExecuted=16436310, numSteals=6926, numExceptions=0, numParks=57549, numFalseAlarmUnparks=4470, numSharedQueueSwitches=9976482, numLocalSubmits=164355089, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=180723873, numSharedTasksExecuted=16429028, numSteals=7222, numExceptions=0, numParks=54866, numFalseAlarmUnparks=4315, numSharedQueueSwitches=9892156, numLocalSubmits=164293971, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=172991621, numSharedTasksExecuted=15726323, numSteals=6528, numExceptions=0, numParks=54164, numFalseAlarmUnparks=4130, numSharedQueueSwitches=9459155, numLocalSubmits=157265094, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=161935937, numSharedTasksExecuted=14720608, numSteals=8182, numExceptions=0, numParks=51098, numFalseAlarmUnparks=4201, numSharedQueueSwitches=9081700, numLocalSubmits=147213020, approximateLocalQueueSize=0}
--------------------------------
1267567,097 ops/s

# Run progress: 37,73% complete, ETA 07:54:28
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1367097,045 ops/s
# Warmup Iteration   2: 1383151,126 ops/s
# Warmup Iteration   3: 1299516,713 ops/s
Iteration   1: 1285170,959 ops/s
Iteration   2: 1255635,172 ops/s
Iteration   3: 1204833,193 ops/s
Iteration   4: 1246240,206 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=199222889, numSharedTasksExecuted=18116236, numSteals=9636, numExceptions=0, numParks=71487, numFalseAlarmUnparks=5634, numSharedQueueSwitches=10364271, numLocalSubmits=181114940, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=198826570, numSharedTasksExecuted=18074410, numSteals=11450, numExceptions=0, numParks=71624, numFalseAlarmUnparks=5771, numSharedQueueSwitches=10538296, numLocalSubmits=180750556, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=195890322, numSharedTasksExecuted=17807060, numSteals=11138, numExceptions=0, numParks=70424, numFalseAlarmUnparks=5620, numSharedQueueSwitches=10260579, numLocalSubmits=178081047, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=187330475, numSharedTasksExecuted=17030032, numSteals=11604, numExceptions=0, numParks=72227, numFalseAlarmUnparks=5468, numSharedQueueSwitches=9685393, numLocalSubmits=170300855, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=180048265, numSharedTasksExecuted=16367851, numSteals=11756, numExceptions=0, numParks=71360, numFalseAlarmUnparks=5600, numSharedQueueSwitches=9756569, numLocalSubmits=163680341, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=176606918, numSharedTasksExecuted=16054384, numSteals=10498, numExceptions=0, numParks=67765, numFalseAlarmUnparks=5262, numSharedQueueSwitches=9278103, numLocalSubmits=160551344, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=168867144, numSharedTasksExecuted=15350506, numSteals=10843, numExceptions=0, numParks=68064, numFalseAlarmUnparks=5385, numSharedQueueSwitches=9048614, numLocalSubmits=153515030, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=156808927, numSharedTasksExecuted=14254211, numSteals=11117, numExceptions=0, numParks=68942, numFalseAlarmUnparks=5526, numSharedQueueSwitches=8588511, numLocalSubmits=142552707, approximateLocalQueueSize=0}
--------------------------------
1252447,136 ops/s


Result "testFactorial16":
  1260947,255 Â±(99.9%) 39340,168 ops/s [Average]
  (min, avg, max) = (1204833,193, 1260947,255, 1303087,609), stdev = 26021,086
  CI (99.9%): [1221607,087, 1300287,424] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testFactorial16
# Parameters: (strategy = a-sync-nocheck)

# Run progress: 37,96% complete, ETA 07:52:45
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1350375,254 ops/s
# Warmup Iteration   2: 1393629,929 ops/s
# Warmup Iteration   3: 1297569,182 ops/s
Iteration   1: 1288646,555 ops/s
Iteration   2: 1244069,615 ops/s
Iteration   3: 1253687,535 ops/s
Iteration   4: 1245583,463 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=203517486, numSharedTasksExecuted=18501486, numSteals=10502, numExceptions=0, numParks=74564, numFalseAlarmUnparks=6118, numSharedQueueSwitches=10884567, numLocalSubmits=185015747, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=196787601, numSharedTasksExecuted=17889665, numSteals=10567, numExceptions=0, numParks=73146, numFalseAlarmUnparks=5794, numSharedQueueSwitches=10710598, numLocalSubmits=178897317, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=192220300, numSharedTasksExecuted=17473910, numSteals=11328, numExceptions=0, numParks=68667, numFalseAlarmUnparks=5754, numSharedQueueSwitches=10244946, numLocalSubmits=174744353, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=188889037, numSharedTasksExecuted=17171245, numSteals=11305, numExceptions=0, numParks=70800, numFalseAlarmUnparks=5808, numSharedQueueSwitches=9944970, numLocalSubmits=171716767, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=184737175, numSharedTasksExecuted=16794656, numSteals=10453, numExceptions=0, numParks=72460, numFalseAlarmUnparks=5393, numSharedQueueSwitches=10006961, numLocalSubmits=167943977, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=174156872, numSharedTasksExecuted=15833511, numSteals=9990, numExceptions=0, numParks=69564, numFalseAlarmUnparks=5698, numSharedQueueSwitches=9391342, numLocalSubmits=158326087, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=169106498, numSharedTasksExecuted=15374316, numSteals=9354, numExceptions=0, numParks=68678, numFalseAlarmUnparks=5330, numSharedQueueSwitches=9245367, numLocalSubmits=153734563, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=159525534, numSharedTasksExecuted=14501264, numSteals=12409, numExceptions=0, numParks=68532, numFalseAlarmUnparks=5595, numSharedQueueSwitches=8876262, numLocalSubmits=145021639, approximateLocalQueueSize=0}
--------------------------------
1239266,145 ops/s

# Run progress: 38,19% complete, ETA 07:51:02
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1364595,859 ops/s
# Warmup Iteration   2: 1393231,732 ops/s
# Warmup Iteration   3: 1294703,384 ops/s
Iteration   1: 1258762,495 ops/s
Iteration   2: 1243258,942 ops/s
Iteration   3: 1244066,819 ops/s
Iteration   4: 1246403,696 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=208390376, numSharedTasksExecuted=18942724, numSteals=20781, numExceptions=0, numParks=83721, numFalseAlarmUnparks=6828, numSharedQueueSwitches=10750612, numLocalSubmits=189444230, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=199103603, numSharedTasksExecuted=18098710, numSteals=20368, numExceptions=0, numParks=80069, numFalseAlarmUnparks=6601, numSharedQueueSwitches=10450007, numLocalSubmits=181001634, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=191566357, numSharedTasksExecuted=17413929, numSteals=19243, numExceptions=0, numParks=82853, numFalseAlarmUnparks=6944, numSharedQueueSwitches=9802967, numLocalSubmits=174150380, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=179354073, numSharedTasksExecuted=16313555, numSteals=16429, numExceptions=0, numParks=84457, numFalseAlarmUnparks=6006, numSharedQueueSwitches=9142844, numLocalSubmits=163058199, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=177668483, numSharedTasksExecuted=16152262, numSteals=18272, numExceptions=0, numParks=78762, numFalseAlarmUnparks=6498, numSharedQueueSwitches=9492966, numLocalSubmits=161517472, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=177448053, numSharedTasksExecuted=16131375, numSteals=18202, numExceptions=0, numParks=74801, numFalseAlarmUnparks=5884, numSharedQueueSwitches=9164856, numLocalSubmits=161315876, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=170814299, numSharedTasksExecuted=15527627, numSteals=18493, numExceptions=0, numParks=75343, numFalseAlarmUnparks=6029, numSharedQueueSwitches=8991507, numLocalSubmits=155285036, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=157006106, numSharedTasksExecuted=14269948, numSteals=21724, numExceptions=0, numParks=72969, numFalseAlarmUnparks=6003, numSharedQueueSwitches=8493276, numLocalSubmits=142728393, approximateLocalQueueSize=0}
--------------------------------
1243654,633 ops/s


Result "testFactorial16":
  1250739,990 Â±(99.9%) 21863,592 ops/s [Average]
  (min, avg, max) = (1239266,145, 1250739,990, 1288646,555), stdev = 14461,413
  CI (99.9%): [1228876,397, 1272603,582] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testFactorial16
# Parameters: (strategy = a-lock-block)

# Run progress: 38,43% complete, ETA 07:49:18
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1280819,372 ops/s
# Warmup Iteration   2: 1421359,422 ops/s
# Warmup Iteration   3: 1288157,176 ops/s
Iteration   1: 1259741,786 ops/s
Iteration   2: 1257269,312 ops/s
Iteration   3: 1253539,600 ops/s
Iteration   4: 1244067,674 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=206215075, numSharedTasksExecuted=18747283, numSteals=14284, numExceptions=0, numParks=96153, numFalseAlarmUnparks=6515, numSharedQueueSwitches=10635393, numLocalSubmits=187469338, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=197502973, numSharedTasksExecuted=17955277, numSteals=14349, numExceptions=0, numParks=93041, numFalseAlarmUnparks=7089, numSharedQueueSwitches=10239915, numLocalSubmits=179548340, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=191762164, numSharedTasksExecuted=17432951, numSteals=13085, numExceptions=0, numParks=91745, numFalseAlarmUnparks=7076, numSharedQueueSwitches=9816915, numLocalSubmits=174329066, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=186441294, numSharedTasksExecuted=16948674, numSteals=13666, numExceptions=0, numParks=88013, numFalseAlarmUnparks=6331, numSharedQueueSwitches=9401595, numLocalSubmits=169490989, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=180468435, numSharedTasksExecuted=16407845, numSteals=11388, numExceptions=0, numParks=90811, numFalseAlarmUnparks=6976, numSharedQueueSwitches=9539445, numLocalSubmits=164064741, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=177249620, numSharedTasksExecuted=16112192, numSteals=14424, numExceptions=0, numParks=83216, numFalseAlarmUnparks=6291, numSharedQueueSwitches=9153440, numLocalSubmits=161134077, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=167510000, numSharedTasksExecuted=15228828, numSteals=12713, numExceptions=0, numParks=87412, numFalseAlarmUnparks=6603, numSharedQueueSwitches=8869268, numLocalSubmits=152282892, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=158252099, numSharedTasksExecuted=14385290, numSteals=15302, numExceptions=0, numParks=82560, numFalseAlarmUnparks=6017, numSharedQueueSwitches=8478630, numLocalSubmits=143863877, approximateLocalQueueSize=0}
--------------------------------
1245970,181 ops/s

# Run progress: 38,66% complete, ETA 07:47:34
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1286754,165 ops/s
# Warmup Iteration   2: 1388450,335 ops/s
# Warmup Iteration   3: 1303848,465 ops/s
Iteration   1: 1267418,941 ops/s
Iteration   2: 1245971,400 ops/s
Iteration   3: 1251363,837 ops/s
Iteration   4: 1256970,757 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=201043075, numSharedTasksExecuted=18277893, numSteals=12993, numExceptions=0, numParks=95105, numFalseAlarmUnparks=6982, numSharedQueueSwitches=10546674, numLocalSubmits=182767893, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=193866051, numSharedTasksExecuted=17625374, numSteals=12942, numExceptions=0, numParks=95416, numFalseAlarmUnparks=7027, numSharedQueueSwitches=10379762, numLocalSubmits=176243182, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=192521085, numSharedTasksExecuted=17501182, numSteals=14209, numExceptions=0, numParks=90254, numFalseAlarmUnparks=6750, numSharedQueueSwitches=9943118, numLocalSubmits=175017518, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=188828058, numSharedTasksExecuted=17166057, numSteals=12131, numExceptions=0, numParks=89450, numFalseAlarmUnparks=6544, numSharedQueueSwitches=9681576, numLocalSubmits=171661910, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=180377795, numSharedTasksExecuted=16398659, numSteals=12837, numExceptions=0, numParks=88724, numFalseAlarmUnparks=6453, numSharedQueueSwitches=9692507, numLocalSubmits=163981222, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=177071819, numSharedTasksExecuted=16098171, numSteals=11877, numExceptions=0, numParks=89859, numFalseAlarmUnparks=6637, numSharedQueueSwitches=9369602, numLocalSubmits=160975811, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=171201179, numSharedTasksExecuted=15562336, numSteals=14660, numExceptions=0, numParks=85350, numFalseAlarmUnparks=6216, numSharedQueueSwitches=9060389, numLocalSubmits=155635388, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=163585336, numSharedTasksExecuted=14869826, numSteals=14492, numExceptions=0, numParks=83094, numFalseAlarmUnparks=5824, numSharedQueueSwitches=8869467, numLocalSubmits=148711976, approximateLocalQueueSize=0}
--------------------------------
1254846,801 ops/s


Result "testFactorial16":
  1253716,029 Â±(99.9%) 10892,946 ops/s [Average]
  (min, avg, max) = (1244067,674, 1253716,029, 1267418,941), stdev = 7205,009
  CI (99.9%): [1242823,083, 1264608,974] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testFactorial16
# Parameters: (strategy = a-nonblocking)

# Run progress: 38,89% complete, ETA 07:45:51
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1337856,721 ops/s
# Warmup Iteration   2: 1390727,398 ops/s
# Warmup Iteration   3: 1318667,740 ops/s
Iteration   1: 1299773,410 ops/s
Iteration   2: 1259060,967 ops/s
Iteration   3: 1253095,918 ops/s
Iteration   4: 1260692,122 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=207432040, numSharedTasksExecuted=18857636, numSteals=14779, numExceptions=0, numParks=71809, numFalseAlarmUnparks=5957, numSharedQueueSwitches=11044236, numLocalSubmits=188574336, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=198887524, numSharedTasksExecuted=18081478, numSteals=14492, numExceptions=0, numParks=69892, numFalseAlarmUnparks=5963, numSharedQueueSwitches=10800057, numLocalSubmits=180807570, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=194641826, numSharedTasksExecuted=17694624, numSteals=14923, numExceptions=0, numParks=69547, numFalseAlarmUnparks=5765, numSharedQueueSwitches=10363451, numLocalSubmits=176946746, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=191640903, numSharedTasksExecuted=17422185, numSteals=13717, numExceptions=0, numParks=69071, numFalseAlarmUnparks=5692, numSharedQueueSwitches=10051987, numLocalSubmits=174219488, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=180147875, numSharedTasksExecuted=16377913, numSteals=14461, numExceptions=0, numParks=69311, numFalseAlarmUnparks=5483, numSharedQueueSwitches=9867428, numLocalSubmits=163772048, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=174769659, numSharedTasksExecuted=15888505, numSteals=13974, numExceptions=0, numParks=68283, numFalseAlarmUnparks=5686, numSharedQueueSwitches=9489815, numLocalSubmits=158882357, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=174007438, numSharedTasksExecuted=15818552, numSteals=14042, numExceptions=0, numParks=63408, numFalseAlarmUnparks=5123, numSharedQueueSwitches=9422324, numLocalSubmits=158188126, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=159466290, numSharedTasksExecuted=14494892, numSteals=15873, numExceptions=0, numParks=64606, numFalseAlarmUnparks=5399, numSharedQueueSwitches=8943297, numLocalSubmits=144967099, approximateLocalQueueSize=0}
--------------------------------
1252903,988 ops/s

# Run progress: 39,12% complete, ETA 07:44:07
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1361209,829 ops/s
# Warmup Iteration   2: 1409871,439 ops/s
# Warmup Iteration   3: 1266781,991 ops/s
Iteration   1: 1276091,953 ops/s
Iteration   2: 1249529,360 ops/s
Iteration   3: 1249061,404 ops/s
Iteration   4: 1248923,744 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=207245405, numSharedTasksExecuted=18840637, numSteals=19705, numExceptions=0, numParks=90076, numFalseAlarmUnparks=7430, numSharedQueueSwitches=10808729, numLocalSubmits=188404754, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=194425568, numSharedTasksExecuted=17677852, numSteals=17421, numExceptions=0, numParks=92913, numFalseAlarmUnparks=7965, numSharedQueueSwitches=10001740, numLocalSubmits=176755361, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=192929700, numSharedTasksExecuted=17538147, numSteals=20348, numExceptions=0, numParks=83991, numFalseAlarmUnparks=6896, numSharedQueueSwitches=10038012, numLocalSubmits=175388982, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=188262248, numSharedTasksExecuted=17113132, numSteals=21551, numExceptions=0, numParks=84096, numFalseAlarmUnparks=6570, numSharedQueueSwitches=9660824, numLocalSubmits=171145235, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=182269192, numSharedTasksExecuted=16569819, numSteals=19396, numExceptions=0, numParks=82628, numFalseAlarmUnparks=6744, numSharedQueueSwitches=9751822, numLocalSubmits=165699207, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=174885817, numSharedTasksExecuted=15899326, numSteals=20636, numExceptions=0, numParks=83220, numFalseAlarmUnparks=6752, numSharedQueueSwitches=9245865, numLocalSubmits=158987585, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=167561886, numSharedTasksExecuted=15233713, numSteals=18346, numExceptions=0, numParks=80970, numFalseAlarmUnparks=6527, numSharedQueueSwitches=9016417, numLocalSubmits=152330374, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=159430352, numSharedTasksExecuted=14491942, numSteals=22355, numExceptions=0, numParks=78148, numFalseAlarmUnparks=6249, numSharedQueueSwitches=8730548, numLocalSubmits=144934102, approximateLocalQueueSize=0}
--------------------------------
1239791,708 ops/s


Result "testFactorial16":
  1258892,457 Â±(99.9%) 26129,508 ops/s [Average]
  (min, avg, max) = (1239791,708, 1258892,457, 1299773,410), stdev = 17283,051
  CI (99.9%): [1232762,950, 1285021,965] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testFactorial16
# Parameters: (strategy = no-conc)

# Run progress: 39,35% complete, ETA 07:42:23
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
49170973,400 ops/s
# Warmup Iteration   2: 53711782,084 ops/s
# Warmup Iteration   3: 52427341,651 ops/s
Iteration   1: 52627340,127 ops/s
Iteration   2: 52543708,334 ops/s
Iteration   3: 52644215,455 ops/s
Iteration   4: 52626348,141 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
52560696,887 ops/s

# Run progress: 39,58% complete, ETA 07:40:40
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
49876887,111 ops/s
# Warmup Iteration   2: 53143904,101 ops/s
# Warmup Iteration   3: 52177024,270 ops/s
Iteration   1: 52543763,164 ops/s
Iteration   2: 52558450,776 ops/s
Iteration   3: 52457479,399 ops/s
Iteration   4: 52376289,526 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
52420822,497 ops/s


Result "testFactorial16":
  52535911,431 Â±(99.9%) 137449,503 ops/s [Average]
  (min, avg, max) = (52376289,526, 52535911,431, 52644215,455), stdev = 90914,336
  CI (99.9%): [52398461,928, 52673360,933] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testFactorial16
# Parameters: (strategy = ForkJoinLifo)

# Run progress: 39,81% complete, ETA 07:38:57
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1280254,556 ops/s
# Warmup Iteration   2: 1285373,566 ops/s
# Warmup Iteration   3: 1220557,303 ops/s
Iteration   1: 1205592,430 ops/s
Iteration   2: 1227057,291 ops/s
Iteration   3: 1231589,536 ops/s
Iteration   4: 1230281,191 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
1231425,963 ops/s

# Run progress: 40,05% complete, ETA 07:37:13
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1313420,794 ops/s
# Warmup Iteration   2: 1342502,046 ops/s
# Warmup Iteration   3: 1262755,890 ops/s
Iteration   1: 1247534,557 ops/s
Iteration   2: 1243107,561 ops/s
Iteration   3: 1235185,915 ops/s
Iteration   4: 1233155,656 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
1238115,785 ops/s


Result "testFactorial16":
  1232304,588 Â±(99.9%) 16999,739 ops/s [Average]
  (min, avg, max) = (1205592,430, 1232304,588, 1247534,557), stdev = 11244,275
  CI (99.9%): [1215304,849, 1249304,328] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testFactorial16
# Parameters: (strategy = J9FjSharedQueues)

# Run progress: 40,28% complete, ETA 07:35:29
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
828925,303 ops/s
# Warmup Iteration   2: 885357,643 ops/s
# Warmup Iteration   3: 829954,756 ops/s
Iteration   1: 800075,572 ops/s
Iteration   2: 777477,698 ops/s
Iteration   3: 777526,636 ops/s
Iteration   4: 782810,487 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
787011,226 ops/s

# Run progress: 40,51% complete, ETA 07:33:45
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
829509,619 ops/s
# Warmup Iteration   2: 854826,735 ops/s
# Warmup Iteration   3: 806178,731 ops/s
Iteration   1: 774659,242 ops/s
Iteration   2: 762462,370 ops/s
Iteration   3: 755282,286 ops/s
Iteration   4: 756289,251 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
765986,204 ops/s


Result "testFactorial16":
  773958,097 Â±(99.9%) 21458,919 ops/s [Average]
  (min, avg, max) = (755282,286, 773958,097, 800075,572), stdev = 14193,747
  CI (99.9%): [752499,178, 795417,017] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testFactorial16
# Parameters: (strategy = J9FjLifo)

# Run progress: 40,74% complete, ETA 07:32:01
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1256730,170 ops/s
# Warmup Iteration   2: 1308728,465 ops/s
# Warmup Iteration   3: 1203322,393 ops/s
Iteration   1: 1216796,452 ops/s
Iteration   2: 1202276,616 ops/s
Iteration   3: 1210681,033 ops/s
Iteration   4: 1204050,734 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
1207173,591 ops/s

# Run progress: 40,97% complete, ETA 07:30:17
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1302778,739 ops/s
# Warmup Iteration   2: 1322618,202 ops/s
# Warmup Iteration   3: 1241327,993 ops/s
Iteration   1: 1232647,071 ops/s
Iteration   2: 1221598,190 ops/s
Iteration   3: 1226046,962 ops/s
Iteration   4: 1219580,593 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
1224935,392 ops/s


Result "testFactorial16":
  1216578,664 Â±(99.9%) 15423,472 ops/s [Average]
  (min, avg, max) = (1202276,616, 1216578,664, 1232647,071), stdev = 10201,672
  CI (99.9%): [1201155,191, 1232002,136] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testFactorial16
# Parameters: (strategy = J9FjFifo)

# Run progress: 41,20% complete, ETA 07:28:33
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1268055,290 ops/s
# Warmup Iteration   2: 1332482,988 ops/s
# Warmup Iteration   3: 1202103,471 ops/s
Iteration   1: 1222520,354 ops/s
Iteration   2: 1220758,608 ops/s
Iteration   3: 1219836,334 ops/s
Iteration   4: 1221513,852 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
1219198,609 ops/s

# Run progress: 41,44% complete, ETA 07:26:49
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1291389,298 ops/s
# Warmup Iteration   2: 1311506,734 ops/s
# Warmup Iteration   3: 1193058,711 ops/s
Iteration   1: 1205025,421 ops/s
Iteration   2: 1211647,438 ops/s
Iteration   3: 1201973,106 ops/s
Iteration   4: 1204592,196 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
1203910,872 ops/s


Result "testFactorial16":
  1213097,679 Â±(99.9%) 12835,469 ops/s [Average]
  (min, avg, max) = (1201973,106, 1213097,679, 1222520,354), stdev = 8489,868
  CI (99.9%): [1200262,210, 1225933,149] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong01
# Parameters: (strategy = a-sync-block)

# Run progress: 41,67% complete, ETA 07:25:05
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
3263,748 ops/s
# Warmup Iteration   2: 3118,373 ops/s
# Warmup Iteration   3: 3154,605 ops/s
Iteration   1: 3522,726 ops/s
Iteration   2: 3424,147 ops/s
Iteration   3: 3515,586 ops/s
Iteration   4: 3433,797 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1228909784, numSharedTasksExecuted=365366, numSteals=10562861, numExceptions=0, numParks=10996724, numFalseAlarmUnparks=221368, numSharedQueueSwitches=0, numLocalSubmits=1228787960, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1225668479, numSharedTasksExecuted=234, numSteals=10793811, numExceptions=0, numParks=10830909, numFalseAlarmUnparks=214148, numSharedQueueSwitches=1, numLocalSubmits=1225543228, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1192936071, numSharedTasksExecuted=247, numSteals=10652966, numExceptions=0, numParks=10703590, numFalseAlarmUnparks=206332, numSharedQueueSwitches=1, numLocalSubmits=1192818710, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=7752304, numSharedTasksExecuted=193, numSteals=180293, numExceptions=0, numParks=205852, numFalseAlarmUnparks=59338, numSharedQueueSwitches=1, numLocalSubmits=7751383, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=5789824, numSharedTasksExecuted=117, numSteals=147922, numExceptions=0, numParks=170914, numFalseAlarmUnparks=51246, numSharedQueueSwitches=1, numLocalSubmits=5789110, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1039966, numSharedTasksExecuted=67, numSteals=43119, numExceptions=0, numParks=54893, numFalseAlarmUnparks=22940, numSharedQueueSwitches=1, numLocalSubmits=1039828, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=477370, numSharedTasksExecuted=43, numSteals=24374, numExceptions=0, numParks=32233, numFalseAlarmUnparks=14848, numSharedQueueSwitches=1, numLocalSubmits=477313, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=106210, numSharedTasksExecuted=9, numSteals=6338, numExceptions=0, numParks=8913, numFalseAlarmUnparks=4397, numSharedQueueSwitches=1, numLocalSubmits=106200, approximateLocalQueueSize=0}
--------------------------------
3463,097 ops/s

# Run progress: 41,90% complete, ETA 07:23:20
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
3286,762 ops/s
# Warmup Iteration   2: 3529,956 ops/s
# Warmup Iteration   3: 3534,528 ops/s
Iteration   1: 3342,325 ops/s
Iteration   2: 3218,582 ops/s
Iteration   3: 3154,085 ops/s
Iteration   4: 3176,509 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1122707036, numSharedTasksExecuted=342285, numSteals=10633401, numExceptions=0, numParks=10868754, numFalseAlarmUnparks=211431, numSharedQueueSwitches=0, numLocalSubmits=1122595151, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1199425211, numSharedTasksExecuted=128, numSteals=10931911, numExceptions=0, numParks=10683851, numFalseAlarmUnparks=190500, numSharedQueueSwitches=1, numLocalSubmits=1199305900, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1093887919, numSharedTasksExecuted=128, numSteals=10769763, numExceptions=0, numParks=10806032, numFalseAlarmUnparks=195516, numSharedQueueSwitches=1, numLocalSubmits=1093777683, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=6966633, numSharedTasksExecuted=209, numSteals=173946, numExceptions=0, numParks=199953, numFalseAlarmUnparks=57031, numSharedQueueSwitches=1, numLocalSubmits=6965849, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=5244230, numSharedTasksExecuted=100, numSteals=142629, numExceptions=0, numParks=167213, numFalseAlarmUnparks=52105, numSharedQueueSwitches=1, numLocalSubmits=5243640, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=893840, numSharedTasksExecuted=81, numSteals=41321, numExceptions=0, numParks=53066, numFalseAlarmUnparks=22492, numSharedQueueSwitches=1, numLocalSubmits=893737, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=457448, numSharedTasksExecuted=29, numSteals=24287, numExceptions=0, numParks=32706, numFalseAlarmUnparks=15252, numSharedQueueSwitches=1, numLocalSubmits=457392, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=67691, numSharedTasksExecuted=13, numSteals=5714, numExceptions=0, numParks=8544, numFalseAlarmUnparks=4486, numSharedQueueSwitches=1, numLocalSubmits=67683, approximateLocalQueueSize=0}
--------------------------------
3221,217 ops/s


Result "testPingPong01":
  3347,207 Â±(99.9%) 216,689 ops/s [Average]
  (min, avg, max) = (3154,085, 3347,207, 3522,726), stdev = 143,326
  CI (99.9%): [3130,518, 3563,896] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong01
# Parameters: (strategy = a-sync-nocheck)

# Run progress: 42,13% complete, ETA 07:21:35
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
3156,243 ops/s
# Warmup Iteration   2: 3357,100 ops/s
# Warmup Iteration   3: 3376,578 ops/s
Iteration   1: 3213,562 ops/s
Iteration   2: 3102,160 ops/s
Iteration   3: 3144,278 ops/s
Iteration   4: 3150,326 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1080030128, numSharedTasksExecuted=333877, numSteals=10488613, numExceptions=0, numParks=10911369, numFalseAlarmUnparks=213348, numSharedQueueSwitches=0, numLocalSubmits=1079921727, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1107899451, numSharedTasksExecuted=156, numSteals=10697199, numExceptions=0, numParks=10575981, numFalseAlarmUnparks=206240, numSharedQueueSwitches=1, numLocalSubmits=1107789538, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1143566951, numSharedTasksExecuted=129, numSteals=10608954, numExceptions=0, numParks=10491657, numFalseAlarmUnparks=188678, numSharedQueueSwitches=1, numLocalSubmits=1143452365, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=7349291, numSharedTasksExecuted=202, numSteals=182068, numExceptions=0, numParks=210608, numFalseAlarmUnparks=61377, numSharedQueueSwitches=1, numLocalSubmits=7348422, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=5806798, numSharedTasksExecuted=133, numSteals=147731, numExceptions=0, numParks=173056, numFalseAlarmUnparks=54696, numSharedQueueSwitches=1, numLocalSubmits=5806142, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1050651, numSharedTasksExecuted=94, numSteals=44158, numExceptions=0, numParks=56816, numFalseAlarmUnparks=24086, numSharedQueueSwitches=1, numLocalSubmits=1050516, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=522474, numSharedTasksExecuted=42, numSteals=25475, numExceptions=0, numParks=34695, numFalseAlarmUnparks=16328, numSharedQueueSwitches=1, numLocalSubmits=522406, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=114264, numSharedTasksExecuted=9, numSteals=6787, numExceptions=0, numParks=9654, numFalseAlarmUnparks=4797, numSharedQueueSwitches=1, numLocalSubmits=114250, approximateLocalQueueSize=0}
--------------------------------
3132,054 ops/s

# Run progress: 42,36% complete, ETA 07:19:50
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
3082,529 ops/s
# Warmup Iteration   2: 2845,014 ops/s
# Warmup Iteration   3: 2929,663 ops/s
Iteration   1: 2459,176 ops/s
Iteration   2: 2441,705 ops/s
Iteration   3: 2435,986 ops/s
Iteration   4: 2374,803 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=870609270, numSharedTasksExecuted=259243, numSteals=11240374, numExceptions=0, numParks=11123298, numFalseAlarmUnparks=330128, numSharedQueueSwitches=0, numLocalSubmits=870522107, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=855208426, numSharedTasksExecuted=132, numSteals=11217544, numExceptions=0, numParks=10928452, numFalseAlarmUnparks=333287, numSharedQueueSwitches=1, numLocalSubmits=855122388, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=840057298, numSharedTasksExecuted=104, numSteals=11239149, numExceptions=0, numParks=10754149, numFalseAlarmUnparks=312260, numSharedQueueSwitches=1, numLocalSubmits=839974532, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=18643199, numSharedTasksExecuted=327, numSteals=513434, numExceptions=0, numParks=583729, numFalseAlarmUnparks=159383, numSharedQueueSwitches=1, numLocalSubmits=18641041, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=13069306, numSharedTasksExecuted=107, numSteals=392104, numExceptions=0, numParks=454258, numFalseAlarmUnparks=140822, numSharedQueueSwitches=1, numLocalSubmits=13067740, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2150249, numSharedTasksExecuted=134, numSteals=106355, numExceptions=0, numParks=135641, numFalseAlarmUnparks=57008, numSharedQueueSwitches=1, numLocalSubmits=2149988, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=985979, numSharedTasksExecuted=47, numSteals=59936, numExceptions=0, numParks=80868, numFalseAlarmUnparks=37985, numSharedQueueSwitches=1, numLocalSubmits=985855, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=206281, numSharedTasksExecuted=7, numSteals=15178, numExceptions=0, numParks=21828, numFalseAlarmUnparks=11010, numSharedQueueSwitches=1, numLocalSubmits=206256, approximateLocalQueueSize=0}
--------------------------------
2406,890 ops/s


Result "testPingPong01":
  2786,094 Â±(99.9%) 579,937 ops/s [Average]
  (min, avg, max) = (2374,803, 2786,094, 3213,562), stdev = 383,592
  CI (99.9%): [2206,157, 3366,031] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong01
# Parameters: (strategy = a-lock-block)

# Run progress: 42,59% complete, ETA 07:18:05
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
3375,994 ops/s
# Warmup Iteration   2: 3531,994 ops/s
# Warmup Iteration   3: 3185,161 ops/s
Iteration   1: 3367,789 ops/s
Iteration   2: 3245,410 ops/s
Iteration   3: 3246,906 ops/s
Iteration   4: 3369,606 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1149115456, numSharedTasksExecuted=349204, numSteals=10510925, numExceptions=0, numParks=10874201, numFalseAlarmUnparks=228321, numSharedQueueSwitches=0, numLocalSubmits=1149000460, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1160731361, numSharedTasksExecuted=174, numSteals=10681655, numExceptions=0, numParks=10703656, numFalseAlarmUnparks=230792, numSharedQueueSwitches=1, numLocalSubmits=1160614409, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1172393992, numSharedTasksExecuted=170, numSteals=10566723, numExceptions=0, numParks=10486640, numFalseAlarmUnparks=214353, numSharedQueueSwitches=1, numLocalSubmits=1172277971, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=9718369, numSharedTasksExecuted=269, numSteals=221000, numExceptions=0, numParks=254376, numFalseAlarmUnparks=71806, numSharedQueueSwitches=1, numLocalSubmits=9717259, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=7376387, numSharedTasksExecuted=147, numSteals=175978, numExceptions=0, numParks=202667, numFalseAlarmUnparks=62436, numSharedQueueSwitches=1, numLocalSubmits=7375556, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1223554, numSharedTasksExecuted=110, numSteals=48461, numExceptions=0, numParks=62512, numFalseAlarmUnparks=26338, numSharedQueueSwitches=1, numLocalSubmits=1223404, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=592752, numSharedTasksExecuted=46, numSteals=28169, numExceptions=0, numParks=37551, numFalseAlarmUnparks=17228, numSharedQueueSwitches=1, numLocalSubmits=592685, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=118137, numSharedTasksExecuted=15, numSteals=6581, numExceptions=0, numParks=9482, numFalseAlarmUnparks=4689, numSharedQueueSwitches=1, numLocalSubmits=118129, approximateLocalQueueSize=0}
--------------------------------
3266,917 ops/s

# Run progress: 42,82% complete, ETA 07:16:20
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
3217,818 ops/s
# Warmup Iteration   2: 3315,156 ops/s
# Warmup Iteration   3: 3302,051 ops/s
Iteration   1: 3182,373 ops/s
Iteration   2: 3170,830 ops/s
Iteration   3: 3179,887 ops/s
Iteration   4: 3164,670 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1140400209, numSharedTasksExecuted=336996, numSteals=10421157, numExceptions=0, numParks=10707941, numFalseAlarmUnparks=278046, numSharedQueueSwitches=0, numLocalSubmits=1140288485, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1126246737, numSharedTasksExecuted=178, numSteals=10615023, numExceptions=0, numParks=10633711, numFalseAlarmUnparks=270309, numSharedQueueSwitches=1, numLocalSubmits=1126134100, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1086821739, numSharedTasksExecuted=135, numSteals=10445106, numExceptions=0, numParks=10410333, numFalseAlarmUnparks=245130, numSharedQueueSwitches=1, numLocalSubmits=1086711226, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=12780567, numSharedTasksExecuted=277, numSteals=292689, numExceptions=0, numParks=335741, numFalseAlarmUnparks=96918, numSharedQueueSwitches=1, numLocalSubmits=12779051, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=10168401, numSharedTasksExecuted=154, numSteals=240627, numExceptions=0, numParks=277648, numFalseAlarmUnparks=86351, numSharedQueueSwitches=1, numLocalSubmits=10167249, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1818927, numSharedTasksExecuted=126, numSteals=71154, numExceptions=0, numParks=90623, numFalseAlarmUnparks=38171, numSharedQueueSwitches=1, numLocalSubmits=1818685, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=858934, numSharedTasksExecuted=62, numSteals=40949, numExceptions=0, numParks=54459, numFalseAlarmUnparks=25233, numSharedQueueSwitches=1, numLocalSubmits=858807, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=194494, numSharedTasksExecuted=9, numSteals=10463, numExceptions=0, numParks=14958, numFalseAlarmUnparks=7554, numSharedQueueSwitches=1, numLocalSubmits=194468, approximateLocalQueueSize=0}
--------------------------------
3214,859 ops/s


Result "testPingPong01":
  3240,925 Â±(99.9%) 114,859 ops/s [Average]
  (min, avg, max) = (3164,670, 3240,925, 3369,606), stdev = 75,972
  CI (99.9%): [3126,065, 3355,784] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong01
# Parameters: (strategy = a-nonblocking)

# Run progress: 43,06% complete, ETA 07:14:35
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
3370,527 ops/s
# Warmup Iteration   2: 3118,319 ops/s
# Warmup Iteration   3: 3145,536 ops/s
Iteration   1: 3268,826 ops/s
Iteration   2: 3220,377 ops/s
Iteration   3: 3196,287 ops/s
Iteration   4: 3202,164 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1168484671, numSharedTasksExecuted=340889, numSteals=10571654, numExceptions=0, numParks=10853798, numFalseAlarmUnparks=217343, numSharedQueueSwitches=0, numLocalSubmits=1168368879, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1121167403, numSharedTasksExecuted=114, numSteals=10771004, numExceptions=0, numParks=10718762, numFalseAlarmUnparks=224324, numSharedQueueSwitches=1, numLocalSubmits=1121054875, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1108793936, numSharedTasksExecuted=146, numSteals=10607148, numExceptions=0, numParks=10661786, numFalseAlarmUnparks=209397, numSharedQueueSwitches=1, numLocalSubmits=1108682776, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=9273170, numSharedTasksExecuted=267, numSteals=207373, numExceptions=0, numParks=240981, numFalseAlarmUnparks=69228, numSharedQueueSwitches=1, numLocalSubmits=9272092, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=7548222, numSharedTasksExecuted=152, numSteals=170525, numExceptions=0, numParks=196906, numFalseAlarmUnparks=59062, numSharedQueueSwitches=1, numLocalSubmits=7547298, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1089550, numSharedTasksExecuted=81, numSteals=46316, numExceptions=0, numParks=60001, numFalseAlarmUnparks=25565, numSharedQueueSwitches=1, numLocalSubmits=1089421, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=543761, numSharedTasksExecuted=53, numSteals=26906, numExceptions=0, numParks=36259, numFalseAlarmUnparks=16817, numSharedQueueSwitches=1, numLocalSubmits=543679, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=109295, numSharedTasksExecuted=7, numSteals=6560, numExceptions=0, numParks=9302, numFalseAlarmUnparks=4578, numSharedQueueSwitches=1, numLocalSubmits=109279, approximateLocalQueueSize=0}
--------------------------------
3233,653 ops/s

# Run progress: 43,29% complete, ETA 07:12:50
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
2868,215 ops/s
# Warmup Iteration   2: 2631,297 ops/s
# Warmup Iteration   3: 2398,705 ops/s
Iteration   1: 2523,983 ops/s
Iteration   2: 2372,819 ops/s
Iteration   3: 2432,303 ops/s
Iteration   4: 2427,279 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=838105232, numSharedTasksExecuted=258929, numSteals=11346916, numExceptions=0, numParks=11208389, numFalseAlarmUnparks=414489, numSharedQueueSwitches=0, numLocalSubmits=838020540, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=847669925, numSharedTasksExecuted=166, numSteals=11398674, numExceptions=0, numParks=11053649, numFalseAlarmUnparks=404709, numSharedQueueSwitches=1, numLocalSubmits=847588206, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=870972474, numSharedTasksExecuted=148, numSteals=11318542, numExceptions=0, numParks=10925365, numFalseAlarmUnparks=373766, numSharedQueueSwitches=1, numLocalSubmits=870883869, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=23134456, numSharedTasksExecuted=397, numSteals=671274, numExceptions=0, numParks=768784, numFalseAlarmUnparks=221877, numSharedQueueSwitches=1, numLocalSubmits=23131875, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=15811186, numSharedTasksExecuted=155, numSteals=535020, numExceptions=0, numParks=608617, numFalseAlarmUnparks=189960, numSharedQueueSwitches=1, numLocalSubmits=15809317, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2969886, numSharedTasksExecuted=136, numSteals=149213, numExceptions=0, numParks=192771, numFalseAlarmUnparks=81365, numSharedQueueSwitches=1, numLocalSubmits=2969529, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1397552, numSharedTasksExecuted=100, numSteals=84408, numExceptions=0, numParks=114925, numFalseAlarmUnparks=53675, numSharedQueueSwitches=1, numLocalSubmits=1397365, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=269297, numSharedTasksExecuted=10, numSteals=19373, numExceptions=0, numParks=28357, numFalseAlarmUnparks=14360, numSharedQueueSwitches=1, numLocalSubmits=269266, approximateLocalQueueSize=0}
--------------------------------
2455,190 ops/s


Result "testPingPong01":
  2833,288 Â±(99.9%) 626,190 ops/s [Average]
  (min, avg, max) = (2372,819, 2833,288, 3268,826), stdev = 414,186
  CI (99.9%): [2207,098, 3459,479] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong01
# Parameters: (strategy = no-conc)

# Run progress: 43,52% complete, ETA 07:11:05
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
<failure>

java.lang.StackOverflowError
	at benchmark.PoolBenchmark$PingPongActor$$Lambda$2/1789253429.<init>(Unknown Source)
	at benchmark.PoolBenchmark$PingPongActor$$Lambda$2/1789253429.get$Lambda(Unknown Source)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)



# Run progress: 43,75% complete, ETA 07:07:05
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
<failure>

java.lang.StackOverflowError
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)




# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong01
# Parameters: (strategy = ForkJoinLifo)

# Run progress: 43,98% complete, ETA 07:03:08
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
531,814 ops/s
# Warmup Iteration   2: 556,930 ops/s
# Warmup Iteration   3: 554,048 ops/s
Iteration   1: 541,485 ops/s
Iteration   2: 508,713 ops/s
Iteration   3: 508,952 ops/s
Iteration   4: 508,460 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
509,477 ops/s

# Run progress: 44,21% complete, ETA 07:01:26
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
530,092 ops/s
# Warmup Iteration   2: 508,705 ops/s
# Warmup Iteration   3: 505,876 ops/s
Iteration   1: 505,577 ops/s
Iteration   2: 504,848 ops/s
Iteration   3: 506,271 ops/s
Iteration   4: 506,363 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
505,656 ops/s


Result "testPingPong01":
  510,580 Â±(99.9%) 16,603 ops/s [Average]
  (min, avg, max) = (504,848, 510,580, 541,485), stdev = 10,982
  CI (99.9%): [493,977, 527,184] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong01
# Parameters: (strategy = J9FjSharedQueues)

# Run progress: 44,44% complete, ETA 06:59:43
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
292,379 ops/s
# Warmup Iteration   2: 273,830 ops/s
# Warmup Iteration   3: 271,104 ops/s
Iteration   1: 271,464 ops/s
Iteration   2: 271,561 ops/s
Iteration   3: 271,451 ops/s
Iteration   4: 271,436 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
271,496 ops/s

# Run progress: 44,68% complete, ETA 06:58:00
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
290,327 ops/s
# Warmup Iteration   2: 274,105 ops/s
# Warmup Iteration   3: 272,357 ops/s
Iteration   1: 272,918 ops/s
Iteration   2: 273,270 ops/s
Iteration   3: 272,629 ops/s
Iteration   4: 272,923 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
272,953 ops/s


Result "testPingPong01":
  272,210 Â±(99.9%) 1,184 ops/s [Average]
  (min, avg, max) = (271,436, 272,210, 273,270), stdev = 0,783
  CI (99.9%): [271,026, 273,395] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong01
# Parameters: (strategy = J9FjLifo)

# Run progress: 44,91% complete, ETA 06:56:17
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
430,636 ops/s
# Warmup Iteration   2: 412,869 ops/s
# Warmup Iteration   3: 411,745 ops/s
Iteration   1: 410,951 ops/s
Iteration   2: 411,077 ops/s
Iteration   3: 411,471 ops/s
Iteration   4: 410,502 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
410,744 ops/s

# Run progress: 45,14% complete, ETA 06:54:34
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
444,896 ops/s
# Warmup Iteration   2: 423,050 ops/s
# Warmup Iteration   3: 421,742 ops/s
Iteration   1: 421,838 ops/s
Iteration   2: 422,228 ops/s
Iteration   3: 421,923 ops/s
Iteration   4: 421,602 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
421,353 ops/s


Result "testPingPong01":
  416,369 Â±(99.9%) 8,652 ops/s [Average]
  (min, avg, max) = (410,502, 416,369, 422,228), stdev = 5,723
  CI (99.9%): [407,717, 425,021] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong01
# Parameters: (strategy = J9FjFifo)

# Run progress: 45,37% complete, ETA 06:52:52
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
454,880 ops/s
# Warmup Iteration   2: 442,500 ops/s
# Warmup Iteration   3: 440,114 ops/s
Iteration   1: 440,279 ops/s
Iteration   2: 440,322 ops/s
Iteration   3: 439,626 ops/s
Iteration   4: 441,073 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
439,724 ops/s

# Run progress: 45,60% complete, ETA 06:51:09
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
453,034 ops/s
# Warmup Iteration   2: 434,674 ops/s
# Warmup Iteration   3: 427,897 ops/s
Iteration   1: 433,887 ops/s
Iteration   2: 432,658 ops/s
Iteration   3: 432,387 ops/s
Iteration   4: 432,616 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
432,555 ops/s


Result "testPingPong01":
  436,513 Â±(99.9%) 5,944 ops/s [Average]
  (min, avg, max) = (432,387, 436,513, 441,073), stdev = 3,932
  CI (99.9%): [430,569, 442,457] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong02
# Parameters: (strategy = a-sync-block)

# Run progress: 45,83% complete, ETA 06:49:26
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1711,451 ops/s
# Warmup Iteration   2: 1836,922 ops/s
# Warmup Iteration   3: 1834,282 ops/s
Iteration   1: 1783,975 ops/s
Iteration   2: 1788,892 ops/s
Iteration   3: 1783,024 ops/s
Iteration   4: 1780,779 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=940919125, numSharedTasksExecuted=188407, numSteals=9527553, numExceptions=0, numParks=9023988, numFalseAlarmUnparks=975674, numSharedQueueSwitches=0, numLocalSubmits=940819214, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=991476474, numSharedTasksExecuted=185273, numSteals=8934418, numExceptions=0, numParks=7850854, numFalseAlarmUnparks=980399, numSharedQueueSwitches=1, numLocalSubmits=991372525, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=897500329, numSharedTasksExecuted=1525, numSteals=9069730, numExceptions=0, numParks=8515618, numFalseAlarmUnparks=893673, numSharedQueueSwitches=1, numLocalSubmits=897409795, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=701817431, numSharedTasksExecuted=715, numSteals=8275215, numExceptions=0, numParks=7959925, numFalseAlarmUnparks=848778, numSharedQueueSwitches=1, numLocalSubmits=701759256, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=105221609, numSharedTasksExecuted=899, numSteals=2523980, numExceptions=0, numParks=2324343, numFalseAlarmUnparks=682367, numSharedQueueSwitches=1, numLocalSubmits=105209116, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=80650795, numSharedTasksExecuted=381, numSteals=2099138, numExceptions=0, numParks=1899498, numFalseAlarmUnparks=590937, numSharedQueueSwitches=1, numLocalSubmits=80643376, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=36217628, numSharedTasksExecuted=325, numSteals=1376784, numExceptions=0, numParks=1254676, numFalseAlarmUnparks=443416, numSharedQueueSwitches=1, numLocalSubmits=36214247, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=23276617, numSharedTasksExecuted=191, numSteals=990502, numExceptions=0, numParks=914792, numFalseAlarmUnparks=346483, numSharedQueueSwitches=1, numLocalSubmits=23274763, approximateLocalQueueSize=0}
--------------------------------
1767,543 ops/s

# Run progress: 46,06% complete, ETA 06:47:43
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1944,643 ops/s
# Warmup Iteration   2: 2284,614 ops/s
# Warmup Iteration   3: 2476,130 ops/s
Iteration   1: 2330,815 ops/s
Iteration   2: 2335,019 ops/s
Iteration   3: 2326,568 ops/s
Iteration   4: 2300,238 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1261559003, numSharedTasksExecuted=244609, numSteals=8984286, numExceptions=0, numParks=8801170, numFalseAlarmUnparks=1212087, numSharedQueueSwitches=0, numLocalSubmits=1261425689, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1244670551, numSharedTasksExecuted=240052, numSteals=8720216, numExceptions=0, numParks=8462378, numFalseAlarmUnparks=1165475, numSharedQueueSwitches=1, numLocalSubmits=1244540227, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=921715627, numSharedTasksExecuted=2003, numSteals=9052792, numExceptions=0, numParks=8627141, numFalseAlarmUnparks=1119227, numSharedQueueSwitches=1, numLocalSubmits=921608474, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1112891814, numSharedTasksExecuted=1158, numSteals=7797352, numExceptions=0, numParks=7374611, numFalseAlarmUnparks=1026293, numSharedQueueSwitches=1, numLocalSubmits=1112809831, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=155576317, numSharedTasksExecuted=1436, numSteals=3014180, numExceptions=0, numParks=2865073, numFalseAlarmUnparks=868614, numSharedQueueSwitches=1, numLocalSubmits=155558014, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=126021277, numSharedTasksExecuted=585, numSteals=2384547, numExceptions=0, numParks=2220750, numFalseAlarmUnparks=721508, numSharedQueueSwitches=1, numLocalSubmits=126009706, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=51466518, numSharedTasksExecuted=518, numSteals=1573460, numExceptions=0, numParks=1489737, numFalseAlarmUnparks=546510, numSharedQueueSwitches=1, numLocalSubmits=51461435, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=32498901, numSharedTasksExecuted=287, numSteals=1115079, numExceptions=0, numParks=1068525, numFalseAlarmUnparks=419715, numSharedQueueSwitches=1, numLocalSubmits=32495984, approximateLocalQueueSize=0}
--------------------------------
2302,590 ops/s


Result "testPingPong02":
  2049,944 Â±(99.9%) 429,244 ops/s [Average]
  (min, avg, max) = (1767,543, 2049,944, 2335,019), stdev = 283,919
  CI (99.9%): [1620,700, 2479,188] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong02
# Parameters: (strategy = a-sync-nocheck)

# Run progress: 46,30% complete, ETA 06:46:00
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
2201,115 ops/s
# Warmup Iteration   2: 3047,549 ops/s
# Warmup Iteration   3: 2726,231 ops/s
Iteration   1: 2702,717 ops/s
Iteration   2: 2653,890 ops/s
Iteration   3: 2707,651 ops/s
Iteration   4: 2705,783 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1333715878, numSharedTasksExecuted=284170, numSteals=8915722, numExceptions=0, numParks=8859476, numFalseAlarmUnparks=1176591, numSharedQueueSwitches=0, numLocalSubmits=1333567540, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1308942534, numSharedTasksExecuted=279054, numSteals=8780898, numExceptions=0, numParks=8694093, numFalseAlarmUnparks=1130495, numSharedQueueSwitches=1, numLocalSubmits=1308798584, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1348970910, numSharedTasksExecuted=2411, numSteals=8480353, numExceptions=0, numParks=8128441, numFalseAlarmUnparks=1045609, numSharedQueueSwitches=1, numLocalSubmits=1348832213, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1336382243, numSharedTasksExecuted=1502, numSteals=7805256, numExceptions=0, numParks=7401205, numFalseAlarmUnparks=925358, numSharedQueueSwitches=1, numLocalSubmits=1336282282, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=174085032, numSharedTasksExecuted=1640, numSteals=2815691, numExceptions=0, numParks=2658751, numFalseAlarmUnparks=809240, numSharedQueueSwitches=1, numLocalSubmits=174065140, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=115327846, numSharedTasksExecuted=641, numSteals=2269385, numExceptions=0, numParks=2118635, numFalseAlarmUnparks=692489, numSharedQueueSwitches=1, numLocalSubmits=115316664, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=51695527, numSharedTasksExecuted=537, numSteals=1497353, numExceptions=0, numParks=1393560, numFalseAlarmUnparks=506751, numSharedQueueSwitches=1, numLocalSubmits=51690289, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=33140038, numSharedTasksExecuted=279, numSteals=1065803, numExceptions=0, numParks=997100, numFalseAlarmUnparks=385195, numSharedQueueSwitches=1, numLocalSubmits=33137062, approximateLocalQueueSize=0}
--------------------------------
2687,885 ops/s

# Run progress: 46,53% complete, ETA 06:44:17
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
2123,918 ops/s
# Warmup Iteration   2: 2761,102 ops/s
# Warmup Iteration   3: 2795,303 ops/s
Iteration   1: 2640,025 ops/s
Iteration   2: 2568,963 ops/s
Iteration   3: 2566,944 ops/s
Iteration   4: 2561,360 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1299661543, numSharedTasksExecuted=273448, numSteals=8574215, numExceptions=0, numParks=8723173, numFalseAlarmUnparks=1075778, numSharedQueueSwitches=0, numLocalSubmits=1299518393, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1258064850, numSharedTasksExecuted=269522, numSteals=8485166, numExceptions=0, numParks=8573360, numFalseAlarmUnparks=1033326, numSharedQueueSwitches=1, numLocalSubmits=1257926122, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1307864370, numSharedTasksExecuted=1679, numSteals=8307574, numExceptions=0, numParks=8162856, numFalseAlarmUnparks=981734, numSharedQueueSwitches=1, numLocalSubmits=1307728844, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1309750408, numSharedTasksExecuted=980, numSteals=7598185, numExceptions=0, numParks=7405515, numFalseAlarmUnparks=871290, numSharedQueueSwitches=1, numLocalSubmits=1309652058, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=146825901, numSharedTasksExecuted=1363, numSteals=2329338, numExceptions=0, numParks=2289090, numFalseAlarmUnparks=715401, numSharedQueueSwitches=1, numLocalSubmits=146808903, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=88626130, numSharedTasksExecuted=532, numSteals=1954964, numExceptions=0, numParks=1916976, numFalseAlarmUnparks=652579, numSharedQueueSwitches=1, numLocalSubmits=88617555, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=43526599, numSharedTasksExecuted=473, numSteals=1229526, numExceptions=0, numParks=1207183, numFalseAlarmUnparks=456313, numSharedQueueSwitches=1, numLocalSubmits=43522210, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=27800207, numSharedTasksExecuted=223, numSteals=876452, numExceptions=0, numParks=872800, numFalseAlarmUnparks=352539, numSharedQueueSwitches=1, numLocalSubmits=27797703, approximateLocalQueueSize=0}
--------------------------------
2599,653 ops/s


Result "testPingPong02":
  2639,487 Â±(99.9%) 92,261 ops/s [Average]
  (min, avg, max) = (2561,360, 2639,487, 2707,651), stdev = 61,025
  CI (99.9%): [2547,226, 2731,748] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong02
# Parameters: (strategy = a-lock-block)

# Run progress: 46,76% complete, ETA 06:42:34
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1828,388 ops/s
# Warmup Iteration   2: 1718,818 ops/s
# Warmup Iteration   3: 1627,341 ops/s
Iteration   1: 1646,649 ops/s
Iteration   2: 1621,061 ops/s
Iteration   3: 1630,340 ops/s
Iteration   4: 1609,590 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=934012302, numSharedTasksExecuted=172393, numSteals=10596021, numExceptions=0, numParks=8911105, numFalseAlarmUnparks=1661670, numSharedQueueSwitches=0, numLocalSubmits=933918200, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=568457426, numSharedTasksExecuted=168854, numSteals=9927606, numExceptions=0, numParks=8542679, numFalseAlarmUnparks=1740438, numSharedQueueSwitches=1, numLocalSubmits=568381859, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=911423592, numSharedTasksExecuted=1706, numSteals=9896297, numExceptions=0, numParks=8333553, numFalseAlarmUnparks=1500086, numSharedQueueSwitches=1, numLocalSubmits=911334201, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=650701844, numSharedTasksExecuted=1074, numSteals=9781208, numExceptions=0, numParks=8750179, numFalseAlarmUnparks=1481778, numSharedQueueSwitches=1, numLocalSubmits=650651655, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=169870685, numSharedTasksExecuted=1072, numSteals=4670257, numExceptions=0, numParks=4103854, numFalseAlarmUnparks=1237941, numSharedQueueSwitches=1, numLocalSubmits=169852255, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=117693269, numSharedTasksExecuted=494, numSteals=3467906, numExceptions=0, numParks=3149443, numFalseAlarmUnparks=1044376, numSharedQueueSwitches=1, numLocalSubmits=117683681, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=69998365, numSharedTasksExecuted=399, numSteals=2684281, numExceptions=0, numParks=2312728, numFalseAlarmUnparks=804856, numSharedQueueSwitches=1, numLocalSubmits=69992493, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=39502525, numSharedTasksExecuted=182, numSteals=1825844, numExceptions=0, numParks=1615543, numFalseAlarmUnparks=609686, numSharedQueueSwitches=1, numLocalSubmits=39499490, approximateLocalQueueSize=0}
--------------------------------
1628,753 ops/s

# Run progress: 46,99% complete, ETA 06:40:51
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
2496,982 ops/s
# Warmup Iteration   2: 2627,682 ops/s
# Warmup Iteration   3: 2606,797 ops/s
Iteration   1: 2646,319 ops/s
Iteration   2: 2661,440 ops/s
Iteration   3: 2622,890 ops/s
Iteration   4: 2583,684 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1335313619, numSharedTasksExecuted=276634, numSteals=8747409, numExceptions=0, numParks=8623065, numFalseAlarmUnparks=1176721, numSharedQueueSwitches=0, numLocalSubmits=1335168126, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1345510692, numSharedTasksExecuted=271555, numSteals=8477246, numExceptions=0, numParks=8395665, numFalseAlarmUnparks=1125189, numSharedQueueSwitches=1, numLocalSubmits=1345366451, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1354589424, numSharedTasksExecuted=2639, numSteals=8334929, numExceptions=0, numParks=8000100, numFalseAlarmUnparks=1086094, numSharedQueueSwitches=1, numLocalSubmits=1354450331, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1168121134, numSharedTasksExecuted=1362, numSteals=8357202, numExceptions=0, numParks=8010792, numFalseAlarmUnparks=985297, numSharedQueueSwitches=1, numLocalSubmits=1168031343, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=157826683, numSharedTasksExecuted=1525, numSteals=2853873, numExceptions=0, numParks=2714374, numFalseAlarmUnparks=836291, numSharedQueueSwitches=1, numLocalSubmits=157808193, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=96870294, numSharedTasksExecuted=647, numSteals=2266499, numExceptions=0, numParks=2166681, numFalseAlarmUnparks=732568, numSharedQueueSwitches=1, numLocalSubmits=96860911, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=53341461, numSharedTasksExecuted=494, numSteals=1496463, numExceptions=0, numParks=1392734, numFalseAlarmUnparks=504016, numSharedQueueSwitches=1, numLocalSubmits=53336266, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=39526701, numSharedTasksExecuted=262, numSteals=1061654, numExceptions=0, numParks=997650, numFalseAlarmUnparks=383913, numSharedQueueSwitches=1, numLocalSubmits=39523269, approximateLocalQueueSize=0}
--------------------------------
2589,986 ops/s


Result "testPingPong02":
  2124,071 Â±(99.9%) 792,569 ops/s [Average]
  (min, avg, max) = (1609,590, 2124,071, 2661,440), stdev = 524,235
  CI (99.9%): [1331,502, 2916,640] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong02
# Parameters: (strategy = a-nonblocking)

# Run progress: 47,22% complete, ETA 06:39:07
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1882,451 ops/s
# Warmup Iteration   2: 2508,506 ops/s
# Warmup Iteration   3: 2442,981 ops/s
Iteration   1: 2346,099 ops/s
Iteration   2: 2287,191 ops/s
Iteration   3: 2383,507 ops/s
Iteration   4: 2352,147 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1245727496, numSharedTasksExecuted=246711, numSteals=8636224, numExceptions=0, numParks=8723682, numFalseAlarmUnparks=1163463, numSharedQueueSwitches=0, numLocalSubmits=1245593969, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1064827385, numSharedTasksExecuted=242928, numSteals=8290280, numExceptions=0, numParks=8353667, numFalseAlarmUnparks=1133424, numSharedQueueSwitches=1, numLocalSubmits=1064706195, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1167750826, numSharedTasksExecuted=1961, numSteals=8158062, numExceptions=0, numParks=7972741, numFalseAlarmUnparks=1061321, numSharedQueueSwitches=1, numLocalSubmits=1167627348, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1188011827, numSharedTasksExecuted=932, numSteals=8126051, numExceptions=0, numParks=8004412, numFalseAlarmUnparks=977176, numSharedQueueSwitches=1, numLocalSubmits=1187924540, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=134475402, numSharedTasksExecuted=1216, numSteals=2474922, numExceptions=0, numParks=2488766, numFalseAlarmUnparks=802915, numSharedQueueSwitches=1, numLocalSubmits=134459868, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=77009623, numSharedTasksExecuted=521, numSteals=2000510, numExceptions=0, numParks=2049120, numFalseAlarmUnparks=729477, numSharedQueueSwitches=1, numLocalSubmits=77002239, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=45518916, numSharedTasksExecuted=435, numSteals=1302866, numExceptions=0, numParks=1306804, numFalseAlarmUnparks=503127, numSharedQueueSwitches=1, numLocalSubmits=45514622, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=25998533, numSharedTasksExecuted=236, numSteals=917369, numExceptions=0, numParks=954494, numFalseAlarmUnparks=399065, numSharedQueueSwitches=1, numLocalSubmits=25996287, approximateLocalQueueSize=0}
--------------------------------
2320,591 ops/s

# Run progress: 47,45% complete, ETA 06:37:24
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
2016,666 ops/s
# Warmup Iteration   2: 2075,919 ops/s
# Warmup Iteration   3: 2034,223 ops/s
Iteration   1: 1979,218 ops/s
Iteration   2: 1974,484 ops/s
Iteration   3: 1974,140 ops/s
Iteration   4: 1971,379 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1009943242, numSharedTasksExecuted=208809, numSteals=9923380, numExceptions=0, numParks=9090344, numFalseAlarmUnparks=1374155, numSharedQueueSwitches=0, numLocalSubmits=1009834432, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=914595334, numSharedTasksExecuted=204538, numSteals=9243983, numExceptions=0, numParks=8144246, numFalseAlarmUnparks=1376498, numSharedQueueSwitches=1, numLocalSubmits=914490767, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=918044848, numSharedTasksExecuted=2078, numSteals=9683489, numExceptions=0, numParks=8818055, numFalseAlarmUnparks=1197550, numSharedQueueSwitches=1, numLocalSubmits=917948071, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=960224552, numSharedTasksExecuted=1240, numSteals=8540708, numExceptions=0, numParks=7760173, numFalseAlarmUnparks=1073656, numSharedQueueSwitches=1, numLocalSubmits=960153668, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=181873386, numSharedTasksExecuted=1418, numSteals=3620004, numExceptions=0, numParks=3209435, numFalseAlarmUnparks=938412, numSharedQueueSwitches=1, numLocalSubmits=181854044, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=122726848, numSharedTasksExecuted=594, numSteals=2842236, numExceptions=0, numParks=2612187, numFalseAlarmUnparks=873373, numSharedQueueSwitches=1, numLocalSubmits=122715571, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=52949643, numSharedTasksExecuted=449, numSteals=2016416, numExceptions=0, numParks=1792841, numFalseAlarmUnparks=635187, numSharedQueueSwitches=1, numLocalSubmits=52944654, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=33082155, numSharedTasksExecuted=226, numSteals=1440450, numExceptions=0, numParks=1277068, numFalseAlarmUnparks=476375, numSharedQueueSwitches=1, numLocalSubmits=33079449, approximateLocalQueueSize=0}
--------------------------------
1971,532 ops/s


Result "testPingPong02":
  2156,029 Â±(99.9%) 292,144 ops/s [Average]
  (min, avg, max) = (1971,379, 2156,029, 2383,507), stdev = 193,235
  CI (99.9%): [1863,885, 2448,173] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong02
# Parameters: (strategy = no-conc)

# Run progress: 47,69% complete, ETA 06:35:41
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
<failure>

java.lang.StackOverflowError
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)



# Run progress: 47,92% complete, ETA 06:32:04
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
<failure>

java.lang.StackOverflowError
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)




# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong02
# Parameters: (strategy = ForkJoinLifo)

# Run progress: 48,15% complete, ETA 06:28:29
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
710,465 ops/s
# Warmup Iteration   2: 766,608 ops/s
# Warmup Iteration   3: 768,988 ops/s
Iteration   1: 725,456 ops/s
Iteration   2: 696,884 ops/s
Iteration   3: 695,967 ops/s
Iteration   4: 697,147 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
697,890 ops/s

# Run progress: 48,38% complete, ETA 06:26:48
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
660,030 ops/s
# Warmup Iteration   2: 623,648 ops/s
# Warmup Iteration   3: 623,687 ops/s
Iteration   1: 627,620 ops/s
Iteration   2: 628,697 ops/s
Iteration   3: 629,893 ops/s
Iteration   4: 628,794 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
628,480 ops/s


Result "testPingPong02":
  665,683 Â±(99.9%) 60,334 ops/s [Average]
  (min, avg, max) = (627,620, 665,683, 725,456), stdev = 39,907
  CI (99.9%): [605,349, 726,017] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong02
# Parameters: (strategy = J9FjSharedQueues)

# Run progress: 48,61% complete, ETA 06:25:07
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
321,124 ops/s
# Warmup Iteration   2: 324,899 ops/s
# Warmup Iteration   3: 314,241 ops/s
Iteration   1: 313,563 ops/s
Iteration   2: 313,016 ops/s
Iteration   3: 313,415 ops/s
Iteration   4: 313,185 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
312,753 ops/s

# Run progress: 48,84% complete, ETA 06:23:26
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
318,746 ops/s
# Warmup Iteration   2: 327,330 ops/s
# Warmup Iteration   3: 319,166 ops/s
Iteration   1: 316,743 ops/s
Iteration   2: 316,784 ops/s
Iteration   3: 315,587 ops/s
Iteration   4: 316,559 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
315,931 ops/s


Result "testPingPong02":
  314,754 Â±(99.9%) 2,575 ops/s [Average]
  (min, avg, max) = (312,753, 314,754, 316,784), stdev = 1,703
  CI (99.9%): [312,178, 317,329] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong02
# Parameters: (strategy = J9FjLifo)

# Run progress: 49,07% complete, ETA 06:21:44
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
606,728 ops/s
# Warmup Iteration   2: 594,378 ops/s
# Warmup Iteration   3: 589,581 ops/s
Iteration   1: 577,575 ops/s
Iteration   2: 572,005 ops/s
Iteration   3: 571,935 ops/s
Iteration   4: 573,421 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
572,524 ops/s

# Run progress: 49,31% complete, ETA 06:20:03
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
597,270 ops/s
# Warmup Iteration   2: 585,589 ops/s
# Warmup Iteration   3: 585,139 ops/s
Iteration   1: 571,671 ops/s
Iteration   2: 566,073 ops/s
Iteration   3: 565,823 ops/s
Iteration   4: 565,802 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
566,012 ops/s


Result "testPingPong02":
  570,284 Â±(99.9%) 6,205 ops/s [Average]
  (min, avg, max) = (565,802, 570,284, 577,575), stdev = 4,104
  CI (99.9%): [564,079, 576,489] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong02
# Parameters: (strategy = J9FjFifo)

# Run progress: 49,54% complete, ETA 06:18:21
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
689,698 ops/s
# Warmup Iteration   2: 646,053 ops/s
# Warmup Iteration   3: 640,375 ops/s
Iteration   1: 639,827 ops/s
Iteration   2: 635,514 ops/s
Iteration   3: 637,828 ops/s
Iteration   4: 637,738 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
636,599 ops/s

# Run progress: 49,77% complete, ETA 06:16:40
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
683,439 ops/s
# Warmup Iteration   2: 651,058 ops/s
# Warmup Iteration   3: 652,654 ops/s
Iteration   1: 633,919 ops/s
Iteration   2: 629,234 ops/s
Iteration   3: 631,069 ops/s
Iteration   4: 631,135 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
629,976 ops/s


Result "testPingPong02":
  634,284 Â±(99.9%) 5,669 ops/s [Average]
  (min, avg, max) = (629,234, 634,284, 639,827), stdev = 3,750
  CI (99.9%): [628,615, 639,953] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong07
# Parameters: (strategy = a-sync-block)

# Run progress: 50,00% complete, ETA 06:14:58
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1001,516 ops/s
# Warmup Iteration   2: 1128,349 ops/s
# Warmup Iteration   3: 1116,707 ops/s
Iteration   1: 1080,814 ops/s
Iteration   2: 1065,397 ops/s
Iteration   3: 1068,164 ops/s
Iteration   4: 1067,627 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1012446095, numSharedTasksExecuted=113601, numSteals=12925792, numExceptions=0, numParks=4371676, numFalseAlarmUnparks=847130, numSharedQueueSwitches=0, numLocalSubmits=1012332970, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=941293820, numSharedTasksExecuted=114317, numSteals=10939051, numExceptions=0, numParks=4510417, numFalseAlarmUnparks=921803, numSharedQueueSwitches=1, numLocalSubmits=941183997, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1491193399, numSharedTasksExecuted=114537, numSteals=5844200, numExceptions=0, numParks=2543671, numFalseAlarmUnparks=555882, numSharedQueueSwitches=1, numLocalSubmits=1491045475, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=473047937, numSharedTasksExecuted=113527, numSteals=9735546, numExceptions=0, numParks=4329877, numFalseAlarmUnparks=998716, numSharedQueueSwitches=1, numLocalSubmits=472982930, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1467475031, numSharedTasksExecuted=113674, numSteals=4760569, numExceptions=0, numParks=1998156, numFalseAlarmUnparks=440771, numSharedQueueSwitches=1, numLocalSubmits=1467341754, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1478488463, numSharedTasksExecuted=112957, numSteals=4411933, numExceptions=0, numParks=1670375, numFalseAlarmUnparks=361507, numSharedQueueSwitches=1, numLocalSubmits=1478359715, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=471854731, numSharedTasksExecuted=111234, numSteals=7493288, numExceptions=0, numParks=2907381, numFalseAlarmUnparks=614971, numSharedQueueSwitches=1, numLocalSubmits=471807513, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=614660532, numSharedTasksExecuted=1207, numSteals=6077883, numExceptions=0, numParks=2329471, numFalseAlarmUnparks=487907, numSharedQueueSwitches=1, numLocalSubmits=614610600, approximateLocalQueueSize=0}
--------------------------------
1071,996 ops/s

# Run progress: 50,23% complete, ETA 06:13:16
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1491,038 ops/s
# Warmup Iteration   2: 1710,332 ops/s
# Warmup Iteration   3: 1696,888 ops/s
Iteration   1: 1649,479 ops/s
Iteration   2: 1649,611 ops/s
Iteration   3: 1648,116 ops/s
Iteration   4: 1653,311 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1669413705, numSharedTasksExecuted=178086, numSteals=1735716, numExceptions=0, numParks=3367518, numFalseAlarmUnparks=1987485, numSharedQueueSwitches=0, numLocalSubmits=1669232753, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1751610187, numSharedTasksExecuted=177835, numSteals=1867852, numExceptions=0, numParks=4503032, numFalseAlarmUnparks=3005355, numSharedQueueSwitches=1, numLocalSubmits=1751402822, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1711621557, numSharedTasksExecuted=176096, numSteals=1721372, numExceptions=0, numParks=3767849, numFalseAlarmUnparks=2386052, numSharedQueueSwitches=1, numLocalSubmits=1711421590, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1555059892, numSharedTasksExecuted=175140, numSteals=1613895, numExceptions=0, numParks=4357842, numFalseAlarmUnparks=3072196, numSharedQueueSwitches=1, numLocalSubmits=1554906256, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1650796427, numSharedTasksExecuted=174705, numSteals=1451268, numExceptions=0, numParks=3583327, numFalseAlarmUnparks=2454930, numSharedQueueSwitches=1, numLocalSubmits=1650636818, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1589975705, numSharedTasksExecuted=173127, numSteals=1273098, numExceptions=0, numParks=2991582, numFalseAlarmUnparks=2019213, numSharedQueueSwitches=1, numLocalSubmits=1589837951, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1136803233, numSharedTasksExecuted=165058, numSteals=1419547, numExceptions=0, numParks=4725279, numFalseAlarmUnparks=3603322, numSharedQueueSwitches=1, numLocalSubmits=1136716203, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1169179302, numSharedTasksExecuted=3407, numSteals=1414102, numExceptions=0, numParks=4742081, numFalseAlarmUnparks=3766871, numSharedQueueSwitches=1, numLocalSubmits=1169082161, approximateLocalQueueSize=0}
--------------------------------
1648,344 ops/s


Result "testPingPong07":
  1360,286 Â±(99.9%) 461,382 ops/s [Average]
  (min, avg, max) = (1065,397, 1360,286, 1653,311), stdev = 305,175
  CI (99.9%): [898,904, 1821,668] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong07
# Parameters: (strategy = a-sync-nocheck)

# Run progress: 50,46% complete, ETA 06:11:35
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1234,568 ops/s
# Warmup Iteration   2: 1301,172 ops/s
# Warmup Iteration   3: 1284,843 ops/s
Iteration   1: 1254,651 ops/s
Iteration   2: 1246,204 ops/s
Iteration   3: 1248,583 ops/s
Iteration   4: 1249,655 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1815071370, numSharedTasksExecuted=134431, numSteals=4164977, numExceptions=0, numParks=3098627, numFalseAlarmUnparks=861644, numSharedQueueSwitches=0, numLocalSubmits=1814875397, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1040854926, numSharedTasksExecuted=132570, numSteals=4988463, numExceptions=0, numParks=4272420, numFalseAlarmUnparks=1450609, numSharedQueueSwitches=1, numLocalSubmits=1040731549, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1699753380, numSharedTasksExecuted=133660, numSteals=3690894, numExceptions=0, numParks=2770943, numFalseAlarmUnparks=765938, numSharedQueueSwitches=1, numLocalSubmits=1699574459, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=398388777, numSharedTasksExecuted=132554, numSteals=7328530, numExceptions=0, numParks=7662422, numFalseAlarmUnparks=3464477, numSharedQueueSwitches=1, numLocalSubmits=398324101, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=554967406, numSharedTasksExecuted=132362, numSteals=6453832, numExceptions=0, numParks=6132507, numFalseAlarmUnparks=2578670, numSharedQueueSwitches=1, numLocalSubmits=554894784, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1530969660, numSharedTasksExecuted=131847, numSteals=3081512, numExceptions=0, numParks=2130201, numFalseAlarmUnparks=614639, numSharedQueueSwitches=1, numLocalSubmits=1530852823, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1554310563, numSharedTasksExecuted=129670, numSteals=2716084, numExceptions=0, numParks=1785204, numFalseAlarmUnparks=506984, numSharedQueueSwitches=1, numLocalSubmits=1554187181, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=688313926, numSharedTasksExecuted=1177, numSteals=4229531, numExceptions=0, numParks=3487057, numFalseAlarmUnparks=1413656, numSharedQueueSwitches=1, numLocalSubmits=688261443, approximateLocalQueueSize=0}
--------------------------------
1248,858 ops/s

# Run progress: 50,69% complete, ETA 06:09:53
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1220,244 ops/s
# Warmup Iteration   2: 1255,798 ops/s
# Warmup Iteration   3: 1245,339 ops/s
Iteration   1: 1218,192 ops/s
Iteration   2: 1205,343 ops/s
Iteration   3: 1212,239 ops/s
Iteration   4: 1210,010 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1697213030, numSharedTasksExecuted=131413, numSteals=3880942, numExceptions=0, numParks=2916288, numFalseAlarmUnparks=860503, numSharedQueueSwitches=0, numLocalSubmits=1697038247, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1315651335, numSharedTasksExecuted=128476, numSteals=3211527, numExceptions=0, numParks=2480072, numFalseAlarmUnparks=730094, numSharedQueueSwitches=1, numLocalSubmits=1315511877, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1262962890, numSharedTasksExecuted=128531, numSteals=2923492, numExceptions=0, numParks=2219376, numFalseAlarmUnparks=633391, numSharedQueueSwitches=1, numLocalSubmits=1262820811, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=680086354, numSharedTasksExecuted=128692, numSteals=5629337, numExceptions=0, numParks=5816447, numFalseAlarmUnparks=2603294, numSharedQueueSwitches=1, numLocalSubmits=680000977, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=437345116, numSharedTasksExecuted=128290, numSteals=6401452, numExceptions=0, numParks=8047312, numFalseAlarmUnparks=4259907, numSharedQueueSwitches=1, numLocalSubmits=437282949, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1661134910, numSharedTasksExecuted=127756, numSteals=2804697, numExceptions=0, numParks=1912003, numFalseAlarmUnparks=552977, numSharedQueueSwitches=1, numLocalSubmits=1660978583, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=691808751, numSharedTasksExecuted=124765, numSteals=4379841, numExceptions=0, numParks=3909132, numFalseAlarmUnparks=1592573, numSharedQueueSwitches=1, numLocalSubmits=691749576, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1247467622, numSharedTasksExecuted=1452, numSteals=2934782, numExceptions=0, numParks=1993101, numFalseAlarmUnparks=646125, numSharedQueueSwitches=1, numLocalSubmits=1247387613, approximateLocalQueueSize=0}
--------------------------------
1205,952 ops/s


Result "testPingPong07":
  1229,969 Â±(99.9%) 31,866 ops/s [Average]
  (min, avg, max) = (1205,343, 1229,969, 1254,651), stdev = 21,077
  CI (99.9%): [1198,103, 1261,835] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong07
# Parameters: (strategy = a-lock-block)

# Run progress: 50,93% complete, ETA 06:08:11
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1192,589 ops/s
# Warmup Iteration   2: 1255,727 ops/s
# Warmup Iteration   3: 1240,469 ops/s
Iteration   1: 1200,595 ops/s
Iteration   2: 1196,020 ops/s
Iteration   3: 1197,723 ops/s
Iteration   4: 1192,289 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1653837659, numSharedTasksExecuted=129899, numSteals=5496866, numExceptions=0, numParks=3498467, numFalseAlarmUnparks=958480, numSharedQueueSwitches=0, numLocalSubmits=1653674921, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1409492618, numSharedTasksExecuted=127537, numSteals=3815008, numExceptions=0, numParks=2600496, numFalseAlarmUnparks=699788, numSharedQueueSwitches=1, numLocalSubmits=1409350496, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=704184312, numSharedTasksExecuted=127119, numSteals=5962545, numExceptions=0, numParks=4657038, numFalseAlarmUnparks=1589737, numSharedQueueSwitches=1, numLocalSubmits=704082124, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=780991688, numSharedTasksExecuted=127106, numSteals=5025416, numExceptions=0, numParks=3788631, numFalseAlarmUnparks=1227224, numSharedQueueSwitches=1, numLocalSubmits=780899190, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=725094488, numSharedTasksExecuted=127006, numSteals=4536142, numExceptions=0, numParks=3764923, numFalseAlarmUnparks=1330685, numSharedQueueSwitches=1, numLocalSubmits=725015208, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1700507295, numSharedTasksExecuted=126563, numSteals=2587750, numExceptions=0, numParks=1714003, numFalseAlarmUnparks=479049, numSharedQueueSwitches=1, numLocalSubmits=1700339458, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1404441413, numSharedTasksExecuted=123721, numSteals=2385674, numExceptions=0, numParks=1392828, numFalseAlarmUnparks=349214, numSharedQueueSwitches=1, numLocalSubmits=1404339457, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=521600535, numSharedTasksExecuted=1072, numSteals=6423076, numExceptions=0, numParks=4957672, numFalseAlarmUnparks=1981164, numSharedQueueSwitches=1, numLocalSubmits=521559131, approximateLocalQueueSize=0}
--------------------------------
1201,395 ops/s

# Run progress: 51,16% complete, ETA 06:06:29
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1138,075 ops/s
# Warmup Iteration   2: 1078,663 ops/s
# Warmup Iteration   3: 1110,331 ops/s
Iteration   1: 1096,248 ops/s
Iteration   2: 1083,178 ops/s
Iteration   3: 1085,183 ops/s
Iteration   4: 1084,198 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=932550162, numSharedTasksExecuted=116737, numSteals=10637950, numExceptions=0, numParks=5034397, numFalseAlarmUnparks=1234114, numSharedQueueSwitches=0, numLocalSubmits=932440842, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1073689059, numSharedTasksExecuted=115467, numSteals=7798469, numExceptions=0, numParks=2475511, numFalseAlarmUnparks=488912, numSharedQueueSwitches=1, numLocalSubmits=1073574656, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1551595021, numSharedTasksExecuted=116567, numSteals=5471858, numExceptions=0, numParks=2095397, numFalseAlarmUnparks=439621, numSharedQueueSwitches=1, numLocalSubmits=1551437951, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1495633789, numSharedTasksExecuted=115938, numSteals=5817785, numExceptions=0, numParks=2089663, numFalseAlarmUnparks=428372, numSharedQueueSwitches=1, numLocalSubmits=1495494775, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=609979940, numSharedTasksExecuted=115183, numSteals=8315396, numExceptions=0, numParks=3455688, numFalseAlarmUnparks=744228, numSharedQueueSwitches=1, numLocalSubmits=609907391, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1496672468, numSharedTasksExecuted=114477, numSteals=4122793, numExceptions=0, numParks=1483498, numFalseAlarmUnparks=308931, numSharedQueueSwitches=1, numLocalSubmits=1496544111, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=436594422, numSharedTasksExecuted=111846, numSteals=9156012, numExceptions=0, numParks=3859202, numFalseAlarmUnparks=888415, numSharedQueueSwitches=1, numLocalSubmits=436551650, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=479955147, numSharedTasksExecuted=1460, numSteals=7989132, numExceptions=0, numParks=2972999, numFalseAlarmUnparks=599967, numSharedQueueSwitches=1, numLocalSubmits=479910957, approximateLocalQueueSize=0}
--------------------------------
1087,155 ops/s


Result "testPingPong07":
  1142,398 Â±(99.9%) 88,216 ops/s [Average]
  (min, avg, max) = (1083,178, 1142,398, 1201,395), stdev = 58,350
  CI (99.9%): [1054,182, 1230,615] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong07
# Parameters: (strategy = a-nonblocking)

# Run progress: 51,39% complete, ETA 06:04:48
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
920,239 ops/s
# Warmup Iteration   2: 826,101 ops/s
# Warmup Iteration   3: 801,485 ops/s
Iteration   1: 795,438 ops/s
Iteration   2: 783,023 ops/s
Iteration   3: 782,565 ops/s
Iteration   4: 788,255 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1229213570, numSharedTasksExecuted=84960, numSteals=3169155, numExceptions=0, numParks=2038722, numFalseAlarmUnparks=549571, numSharedQueueSwitches=0, numLocalSubmits=1229088343, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=801807249, numSharedTasksExecuted=83760, numSteals=5055778, numExceptions=0, numParks=3329726, numFalseAlarmUnparks=967993, numSharedQueueSwitches=1, numLocalSubmits=801717600, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=420664585, numSharedTasksExecuted=83678, numSteals=9202928, numExceptions=0, numParks=7261633, numFalseAlarmUnparks=2659061, numSharedQueueSwitches=1, numLocalSubmits=420604683, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=456534523, numSharedTasksExecuted=83674, numSteals=6513694, numExceptions=0, numParks=4677630, numFalseAlarmUnparks=1557047, numSharedQueueSwitches=1, numLocalSubmits=456478120, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1033618325, numSharedTasksExecuted=83743, numSteals=1930759, numExceptions=0, numParks=1140037, numFalseAlarmUnparks=296491, numSharedQueueSwitches=1, numLocalSubmits=1033516789, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=615193631, numSharedTasksExecuted=83207, numSteals=4904095, numExceptions=0, numParks=3090805, numFalseAlarmUnparks=921744, numSharedQueueSwitches=1, numLocalSubmits=615140486, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=728543014, numSharedTasksExecuted=81883, numSteals=4193599, numExceptions=0, numParks=2755073, numFalseAlarmUnparks=841983, numSharedQueueSwitches=1, numLocalSubmits=728484622, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=573705111, numSharedTasksExecuted=1031, numSteals=5387634, numExceptions=0, numParks=3514289, numFalseAlarmUnparks=1120348, numSharedQueueSwitches=1, numLocalSubmits=573663429, approximateLocalQueueSize=0}
--------------------------------
780,836 ops/s

# Run progress: 51,62% complete, ETA 06:03:06
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
942,469 ops/s
# Warmup Iteration   2: 857,298 ops/s
# Warmup Iteration   3: 867,445 ops/s
Iteration   1: 839,322 ops/s
Iteration   2: 823,369 ops/s
Iteration   3: 823,238 ops/s
Iteration   4: 821,236 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=873238069, numSharedTasksExecuted=89318, numSteals=8376430, numExceptions=0, numParks=6033025, numFalseAlarmUnparks=2061534, numSharedQueueSwitches=0, numLocalSubmits=873138167, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=978012717, numSharedTasksExecuted=87956, numSteals=4327029, numExceptions=0, numParks=1897176, numFalseAlarmUnparks=411646, numSharedQueueSwitches=1, numLocalSubmits=977913430, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=694630272, numSharedTasksExecuted=88094, numSteals=6793495, numExceptions=0, numParks=2904044, numFalseAlarmUnparks=687779, numSharedQueueSwitches=1, numLocalSubmits=694549349, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1264567043, numSharedTasksExecuted=88900, numSteals=3135674, numExceptions=0, numParks=1638780, numFalseAlarmUnparks=393848, numSharedQueueSwitches=1, numLocalSubmits=1264441444, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=479368443, numSharedTasksExecuted=87784, numSteals=8863772, numExceptions=0, numParks=5869432, numFalseAlarmUnparks=1918023, numSharedQueueSwitches=1, numLocalSubmits=479314155, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=425139505, numSharedTasksExecuted=87124, numSteals=6431047, numExceptions=0, numParks=3455239, numFalseAlarmUnparks=948274, numSharedQueueSwitches=1, numLocalSubmits=425096902, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=735437885, numSharedTasksExecuted=85384, numSteals=5736948, numExceptions=0, numParks=2289331, numFalseAlarmUnparks=474326, numSharedQueueSwitches=1, numLocalSubmits=735379070, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=706526074, numSharedTasksExecuted=1140, numSteals=5221021, numExceptions=0, numParks=2457236, numFalseAlarmUnparks=613071, numSharedQueueSwitches=1, numLocalSubmits=706471791, approximateLocalQueueSize=0}
--------------------------------
823,712 ops/s


Result "testPingPong07":
  806,099 Â±(99.9%) 33,397 ops/s [Average]
  (min, avg, max) = (780,836, 806,099, 839,322), stdev = 22,090
  CI (99.9%): [772,702, 839,497] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong07
# Parameters: (strategy = no-conc)

# Run progress: 51,85% complete, ETA 06:01:24
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
<failure>

java.lang.StackOverflowError
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)



# Run progress: 52,08% complete, ETA 05:58:06
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
<failure>

java.lang.StackOverflowError
	at benchmark.PoolBenchmark$PingPongActor$$Lambda$2/1789253429.<init>(Unknown Source)
	at benchmark.PoolBenchmark$PingPongActor$$Lambda$2/1789253429.get$Lambda(Unknown Source)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)




# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong07
# Parameters: (strategy = ForkJoinLifo)

# Run progress: 52,31% complete, ETA 05:54:49
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1353,592 ops/s
# Warmup Iteration   2: 1613,945 ops/s
# Warmup Iteration   3: 1551,831 ops/s
Iteration   1: 1521,668 ops/s
Iteration   2: 1486,762 ops/s
Iteration   3: 1488,597 ops/s
Iteration   4: 1501,585 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
1475,454 ops/s

# Run progress: 52,55% complete, ETA 05:53:09
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1348,723 ops/s
# Warmup Iteration   2: 1556,020 ops/s
# Warmup Iteration   3: 1537,378 ops/s
Iteration   1: 1550,764 ops/s
Iteration   2: 1549,951 ops/s
Iteration   3: 1545,539 ops/s
Iteration   4: 1551,029 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
1546,755 ops/s


Result "testPingPong07":
  1521,810 Â±(99.9%) 46,622 ops/s [Average]
  (min, avg, max) = (1475,454, 1521,810, 1551,029), stdev = 30,838
  CI (99.9%): [1475,188, 1568,433] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong07
# Parameters: (strategy = J9FjSharedQueues)

# Run progress: 52,78% complete, ETA 05:51:28
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
218,381 ops/s
# Warmup Iteration   2: 240,564 ops/s
# Warmup Iteration   3: 231,028 ops/s
Iteration   1: 222,638 ops/s
Iteration   2: 218,738 ops/s
Iteration   3: 218,352 ops/s
Iteration   4: 219,184 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
218,021 ops/s

# Run progress: 53,01% complete, ETA 05:49:48
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
211,569 ops/s
# Warmup Iteration   2: 226,766 ops/s
# Warmup Iteration   3: 219,121 ops/s
Iteration   1: 208,881 ops/s
Iteration   2: 207,085 ops/s
Iteration   3: 207,225 ops/s
Iteration   4: 207,497 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
207,885 ops/s


Result "testPingPong07":
  213,551 Â±(99.9%) 9,517 ops/s [Average]
  (min, avg, max) = (207,085, 213,551, 222,638), stdev = 6,295
  CI (99.9%): [204,034, 223,068] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong07
# Parameters: (strategy = J9FjLifo)

# Run progress: 53,24% complete, ETA 05:48:07
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1011,523 ops/s
# Warmup Iteration   2: 1073,080 ops/s
# Warmup Iteration   3: 1059,238 ops/s
Iteration   1: 1070,905 ops/s
Iteration   2: 1072,593 ops/s
Iteration   3: 1072,957 ops/s
Iteration   4: 1068,354 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
1075,060 ops/s

# Run progress: 53,47% complete, ETA 05:46:27
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
865,917 ops/s
# Warmup Iteration   2: 945,310 ops/s
# Warmup Iteration   3: 929,276 ops/s
Iteration   1: 918,437 ops/s
Iteration   2: 920,668 ops/s
Iteration   3: 919,651 ops/s
Iteration   4: 919,424 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
919,413 ops/s


Result "testPingPong07":
  995,746 Â±(99.9%) 121,508 ops/s [Average]
  (min, avg, max) = (918,437, 995,746, 1075,060), stdev = 80,370
  CI (99.9%): [874,238, 1117,254] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong07
# Parameters: (strategy = J9FjFifo)

# Run progress: 53,70% complete, ETA 05:44:46
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
761,737 ops/s
# Warmup Iteration   2: 799,012 ops/s
# Warmup Iteration   3: 803,775 ops/s
Iteration   1: 776,862 ops/s
Iteration   2: 779,862 ops/s
Iteration   3: 771,559 ops/s
Iteration   4: 776,143 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
778,213 ops/s

# Run progress: 53,94% complete, ETA 05:43:06
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
864,561 ops/s
# Warmup Iteration   2: 849,382 ops/s
# Warmup Iteration   3: 872,752 ops/s
Iteration   1: 870,393 ops/s
Iteration   2: 864,586 ops/s
Iteration   3: 865,366 ops/s
Iteration   4: 870,819 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
869,831 ops/s


Result "testPingPong07":
  822,363 Â±(99.9%) 73,174 ops/s [Average]
  (min, avg, max) = (771,559, 822,363, 870,819), stdev = 48,400
  CI (99.9%): [749,189, 895,538] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong08
# Parameters: (strategy = a-sync-block)

# Run progress: 54,17% complete, ETA 05:41:25
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1041,635 ops/s
# Warmup Iteration   2: 937,430 ops/s
# Warmup Iteration   3: 937,673 ops/s
Iteration   1: 920,113 ops/s
Iteration   2: 919,797 ops/s
Iteration   3: 920,245 ops/s
Iteration   4: 917,096 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=732131004, numSharedTasksExecuted=97787, numSteals=9281654, numExceptions=0, numParks=4202335, numFalseAlarmUnparks=806093, numSharedQueueSwitches=0, numLocalSubmits=732046061, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1611789714, numSharedTasksExecuted=102629, numSteals=7726302, numExceptions=0, numParks=3326510, numFalseAlarmUnparks=609132, numSharedQueueSwitches=1, numLocalSubmits=1611576518, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=866424226, numSharedTasksExecuted=97790, numSteals=7502166, numExceptions=0, numParks=3358860, numFalseAlarmUnparks=625736, numSharedQueueSwitches=1, numLocalSubmits=866331319, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1608025932, numSharedTasksExecuted=100472, numSteals=6609378, numExceptions=0, numParks=2874181, numFalseAlarmUnparks=521553, numSharedQueueSwitches=1, numLocalSubmits=1607844954, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=653409529, numSharedTasksExecuted=98360, numSteals=6068897, numExceptions=0, numParks=3387337, numFalseAlarmUnparks=813411, numSharedQueueSwitches=1, numLocalSubmits=653349741, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=497030130, numSharedTasksExecuted=97007, numSteals=7657664, numExceptions=0, numParks=3394895, numFalseAlarmUnparks=658753, numSharedQueueSwitches=1, numLocalSubmits=496984450, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=527093143, numSharedTasksExecuted=95500, numSteals=6810111, numExceptions=0, numParks=2945776, numFalseAlarmUnparks=562753, numSharedQueueSwitches=1, numLocalSubmits=527052038, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1323936330, numSharedTasksExecuted=92447, numSteals=5215883, numExceptions=0, numParks=2202527, numFalseAlarmUnparks=395762, numSharedQueueSwitches=1, numLocalSubmits=1323872935, approximateLocalQueueSize=0}
--------------------------------
918,319 ops/s

# Run progress: 54,40% complete, ETA 05:39:44
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
980,705 ops/s
# Warmup Iteration   2: 939,721 ops/s
# Warmup Iteration   3: 899,677 ops/s
Iteration   1: 883,321 ops/s
Iteration   2: 871,262 ops/s
Iteration   3: 878,848 ops/s
Iteration   4: 878,319 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1368306902, numSharedTasksExecuted=95266, numSteals=4405870, numExceptions=0, numParks=2635058, numFalseAlarmUnparks=604681, numSharedQueueSwitches=0, numLocalSubmits=1368172391, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=972792101, numSharedTasksExecuted=93575, numSteals=4145711, numExceptions=0, numParks=2683235, numFalseAlarmUnparks=639445, numSharedQueueSwitches=1, numLocalSubmits=972685790, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=463718281, numSharedTasksExecuted=93480, numSteals=6479779, numExceptions=0, numParks=4394915, numFalseAlarmUnparks=1229589, numSharedQueueSwitches=1, numLocalSubmits=463648916, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=560639143, numSharedTasksExecuted=93569, numSteals=5408007, numExceptions=0, numParks=3257848, numFalseAlarmUnparks=811685, numSharedQueueSwitches=1, numLocalSubmits=560570774, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1656612155, numSharedTasksExecuted=98628, numSteals=3454474, numExceptions=0, numParks=2004556, numFalseAlarmUnparks=469661, numSharedQueueSwitches=1, numLocalSubmits=1656405008, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=818585544, numSharedTasksExecuted=93344, numSteals=4284386, numExceptions=0, numParks=2395764, numFalseAlarmUnparks=586005, numSharedQueueSwitches=1, numLocalSubmits=818528671, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=702004976, numSharedTasksExecuted=91406, numSteals=3707170, numExceptions=0, numParks=2107342, numFalseAlarmUnparks=530644, numSharedQueueSwitches=1, numLocalSubmits=701953163, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=934620906, numSharedTasksExecuted=88468, numSteals=3433615, numExceptions=0, numParks=1889927, numFalseAlarmUnparks=457900, numSharedQueueSwitches=1, numLocalSubmits=934567559, approximateLocalQueueSize=0}
--------------------------------
879,287 ops/s


Result "testPingPong08":
  898,661 Â±(99.9%) 32,919 ops/s [Average]
  (min, avg, max) = (871,262, 898,661, 920,245), stdev = 21,774
  CI (99.9%): [865,742, 931,579] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong08
# Parameters: (strategy = a-sync-nocheck)

# Run progress: 54,63% complete, ETA 05:38:03
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1091,005 ops/s
# Warmup Iteration   2: 992,860 ops/s
# Warmup Iteration   3: 977,543 ops/s
Iteration   1: 961,006 ops/s
Iteration   2: 948,021 ops/s
Iteration   3: 948,533 ops/s
Iteration   4: 955,990 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1253476804, numSharedTasksExecuted=103710, numSteals=6517332, numExceptions=0, numParks=3373282, numFalseAlarmUnparks=821987, numSharedQueueSwitches=0, numLocalSubmits=1253356695, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1833591127, numSharedTasksExecuted=105346, numSteals=5402257, numExceptions=0, numParks=2803932, numFalseAlarmUnparks=670582, numSharedQueueSwitches=1, numLocalSubmits=1833364472, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=795727552, numSharedTasksExecuted=101529, numSteals=5675935, numExceptions=0, numParks=2968624, numFalseAlarmUnparks=719104, numSharedQueueSwitches=1, numLocalSubmits=795638868, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1605831213, numSharedTasksExecuted=103978, numSteals=4315970, numExceptions=0, numParks=2184021, numFalseAlarmUnparks=506008, numSharedQueueSwitches=1, numLocalSubmits=1605663528, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=701174740, numSharedTasksExecuted=101303, numSteals=4809537, numExceptions=0, numParks=2677458, numFalseAlarmUnparks=697659, numSharedQueueSwitches=1, numLocalSubmits=701109786, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=747938523, numSharedTasksExecuted=100723, numSteals=4564839, numExceptions=0, numParks=2488990, numFalseAlarmUnparks=624884, numSharedQueueSwitches=1, numLocalSubmits=747879657, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=438307082, numSharedTasksExecuted=99058, numSteals=5794972, numExceptions=0, numParks=3150924, numFalseAlarmUnparks=826385, numSharedQueueSwitches=1, numLocalSubmits=438271711, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=736672967, numSharedTasksExecuted=95633, numSteals=4186289, numExceptions=0, numParks=2075466, numFalseAlarmUnparks=480515, numSharedQueueSwitches=1, numLocalSubmits=736624011, approximateLocalQueueSize=0}
--------------------------------
950,338 ops/s

# Run progress: 54,86% complete, ETA 05:36:23
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1042,625 ops/s
# Warmup Iteration   2: 898,437 ops/s
# Warmup Iteration   3: 905,824 ops/s
Iteration   1: 896,369 ops/s
Iteration   2: 883,177 ops/s
Iteration   3: 885,021 ops/s
Iteration   4: 887,627 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1647903845, numSharedTasksExecuted=100349, numSteals=10871006, numExceptions=0, numParks=3611403, numFalseAlarmUnparks=576123, numSharedQueueSwitches=0, numLocalSubmits=1647696597, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=653933477, numSharedTasksExecuted=94531, numSteals=11093216, numExceptions=0, numParks=3793441, numFalseAlarmUnparks=633172, numSharedQueueSwitches=1, numLocalSubmits=653853758, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1363050459, numSharedTasksExecuted=95810, numSteals=8168696, numExceptions=0, numParks=2828102, numFalseAlarmUnparks=462306, numSharedQueueSwitches=1, numLocalSubmits=1362938393, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=561192009, numSharedTasksExecuted=94415, numSteals=9646868, numExceptions=0, numParks=3342635, numFalseAlarmUnparks=560651, numSharedQueueSwitches=1, numLocalSubmits=561132332, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1598430574, numSharedTasksExecuted=97056, numSteals=5163833, numExceptions=0, numParks=2168611, numFalseAlarmUnparks=429609, numSharedQueueSwitches=1, numLocalSubmits=1598264799, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=626116425, numSharedTasksExecuted=93616, numSteals=8230558, numExceptions=0, numParks=2858664, numFalseAlarmUnparks=466317, numSharedQueueSwitches=1, numLocalSubmits=626064184, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=407490827, numSharedTasksExecuted=91519, numSteals=9413081, numExceptions=0, numParks=3299806, numFalseAlarmUnparks=562368, numSharedQueueSwitches=1, numLocalSubmits=407457227, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=694682392, numSharedTasksExecuted=87992, numSteals=7754101, numExceptions=0, numParks=2554611, numFalseAlarmUnparks=399298, numSharedQueueSwitches=1, numLocalSubmits=694637430, approximateLocalQueueSize=0}
--------------------------------
883,197 ops/s


Result "testPingPong08":
  919,928 Â±(99.9%) 52,943 ops/s [Average]
  (min, avg, max) = (883,177, 919,928, 961,006), stdev = 35,019
  CI (99.9%): [866,985, 972,872] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong08
# Parameters: (strategy = a-lock-block)

# Run progress: 55,09% complete, ETA 05:34:42
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1066,615 ops/s
# Warmup Iteration   2: 1078,963 ops/s
# Warmup Iteration   3: 1044,135 ops/s
Iteration   1: 1024,226 ops/s
Iteration   2: 1024,589 ops/s
Iteration   3: 1032,314 ops/s
Iteration   4: 1014,995 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1474501951, numSharedTasksExecuted=108910, numSteals=3663630, numExceptions=0, numParks=2588973, numFalseAlarmUnparks=621029, numSharedQueueSwitches=0, numLocalSubmits=1474350271, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1190938984, numSharedTasksExecuted=113157, numSteals=5602772, numExceptions=0, numParks=3697548, numFalseAlarmUnparks=948506, numSharedQueueSwitches=1, numLocalSubmits=1190805831, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2025410472, numSharedTasksExecuted=114454, numSteals=3747067, numExceptions=0, numParks=2544746, numFalseAlarmUnparks=597451, numSharedQueueSwitches=1, numLocalSubmits=2025144918, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1317993180, numSharedTasksExecuted=108833, numSteals=3131667, numExceptions=0, numParks=2136465, numFalseAlarmUnparks=520663, numSharedQueueSwitches=1, numLocalSubmits=1317875750, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=793050923, numSharedTasksExecuted=109397, numSteals=4566891, numExceptions=0, numParks=3130820, numFalseAlarmUnparks=871478, numSharedQueueSwitches=1, numLocalSubmits=792978757, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=504677439, numSharedTasksExecuted=107952, numSteals=4769498, numExceptions=0, numParks=3445638, numFalseAlarmUnparks=1082430, numSharedQueueSwitches=1, numLocalSubmits=504634690, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=431459148, numSharedTasksExecuted=105855, numSteals=4378944, numExceptions=0, numParks=3215294, numFalseAlarmUnparks=1077878, numSharedQueueSwitches=1, numLocalSubmits=431424219, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=965807911, numSharedTasksExecuted=101834, numSteals=2693291, numExceptions=0, numParks=1680411, numFalseAlarmUnparks=448041, numSharedQueueSwitches=1, numLocalSubmits=965755180, approximateLocalQueueSize=0}
--------------------------------
1024,582 ops/s

# Run progress: 55,32% complete, ETA 05:33:01
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
930,864 ops/s
# Warmup Iteration   2: 857,613 ops/s
# Warmup Iteration   3: 827,679 ops/s
Iteration   1: 849,625 ops/s
Iteration   2: 824,079 ops/s
Iteration   3: 827,355 ops/s
Iteration   4: 828,965 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=797544987, numSharedTasksExecuted=88302, numSteals=5996151, numExceptions=0, numParks=3119333, numFalseAlarmUnparks=741214, numSharedQueueSwitches=0, numLocalSubmits=797456939, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=990803716, numSharedTasksExecuted=88585, numSteals=4565047, numExceptions=0, numParks=2467083, numFalseAlarmUnparks=588164, numSharedQueueSwitches=1, numLocalSubmits=990696756, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1799092691, numSharedTasksExecuted=94295, numSteals=3712119, numExceptions=0, numParks=1974061, numFalseAlarmUnparks=443467, numSharedQueueSwitches=1, numLocalSubmits=1798875886, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=813319050, numSharedTasksExecuted=88483, numSteals=4662982, numExceptions=0, numParks=2474867, numFalseAlarmUnparks=594437, numSharedQueueSwitches=1, numLocalSubmits=813239990, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=583543230, numSharedTasksExecuted=88293, numSteals=6260001, numExceptions=0, numParks=3307202, numFalseAlarmUnparks=822427, numSharedQueueSwitches=1, numLocalSubmits=583485878, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=455712963, numSharedTasksExecuted=87751, numSteals=4733659, numExceptions=0, numParks=2613866, numFalseAlarmUnparks=673885, numSharedQueueSwitches=1, numLocalSubmits=455671034, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=854621938, numSharedTasksExecuted=86517, numSteals=3891760, numExceptions=0, numParks=1748143, numFalseAlarmUnparks=374134, numSharedQueueSwitches=1, numLocalSubmits=854557546, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=764801433, numSharedTasksExecuted=83726, numSteals=3404671, numExceptions=0, numParks=1530642, numFalseAlarmUnparks=332100, numSharedQueueSwitches=1, numLocalSubmits=764750027, approximateLocalQueueSize=0}
--------------------------------
820,237 ops/s


Result "testPingPong08":
  927,097 Â±(99.9%) 155,207 ops/s [Average]
  (min, avg, max) = (820,237, 927,097, 1032,314), stdev = 102,660
  CI (99.9%): [771,890, 1082,303] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong08
# Parameters: (strategy = a-nonblocking)

# Run progress: 55,56% complete, ETA 05:31:20
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1034,307 ops/s
# Warmup Iteration   2: 968,083 ops/s
# Warmup Iteration   3: 945,264 ops/s
Iteration   1: 933,322 ops/s
Iteration   2: 930,811 ops/s
Iteration   3: 929,315 ops/s
Iteration   4: 929,118 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=685859276, numSharedTasksExecuted=98894, numSteals=9021434, numExceptions=0, numParks=3689084, numFalseAlarmUnparks=740000, numSharedQueueSwitches=0, numLocalSubmits=685776862, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1654084144, numSharedTasksExecuted=103517, numSteals=7485533, numExceptions=0, numParks=3041064, numFalseAlarmUnparks=596718, numSharedQueueSwitches=1, numLocalSubmits=1653890017, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1573076025, numSharedTasksExecuted=102743, numSteals=5434114, numExceptions=0, numParks=2699267, numFalseAlarmUnparks=620325, numSharedQueueSwitches=1, numLocalSubmits=1572896229, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=668296917, numSharedTasksExecuted=98827, numSteals=7640826, numExceptions=0, numParks=3195672, numFalseAlarmUnparks=645745, numSharedQueueSwitches=1, numLocalSubmits=668230186, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1503876020, numSharedTasksExecuted=100825, numSteals=6358815, numExceptions=0, numParks=2396295, numFalseAlarmUnparks=427323, numSharedQueueSwitches=1, numLocalSubmits=1503743117, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=688729998, numSharedTasksExecuted=97983, numSteals=6344988, numExceptions=0, numParks=2719911, numFalseAlarmUnparks=556116, numSharedQueueSwitches=1, numLocalSubmits=688674919, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=427139076, numSharedTasksExecuted=95904, numSteals=7139595, numExceptions=0, numParks=3006457, numFalseAlarmUnparks=613207, numSharedQueueSwitches=1, numLocalSubmits=427104303, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=706538552, numSharedTasksExecuted=92075, numSteals=5837232, numExceptions=0, numParks=2266317, numFalseAlarmUnparks=418223, numSharedQueueSwitches=1, numLocalSubmits=706493607, approximateLocalQueueSize=0}
--------------------------------
924,224 ops/s

# Run progress: 55,79% complete, ETA 05:29:39
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1264,845 ops/s
# Warmup Iteration   2: 1237,129 ops/s
# Warmup Iteration   3: 1259,285 ops/s
Iteration   1: 1232,308 ops/s
Iteration   2: 1232,704 ops/s
Iteration   3: 1233,208 ops/s
Iteration   4: 1223,983 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1901556081, numSharedTasksExecuted=134862, numSteals=4627121, numExceptions=0, numParks=3383944, numFalseAlarmUnparks=791134, numSharedQueueSwitches=0, numLocalSubmits=1901312890, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1875753576, numSharedTasksExecuted=134798, numSteals=4778872, numExceptions=0, numParks=3516064, numFalseAlarmUnparks=831339, numSharedQueueSwitches=1, numLocalSubmits=1875532329, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1880785791, numSharedTasksExecuted=134597, numSteals=4418067, numExceptions=0, numParks=3196187, numFalseAlarmUnparks=727981, numSharedQueueSwitches=1, numLocalSubmits=1880577328, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1855209584, numSharedTasksExecuted=133494, numSteals=4215178, numExceptions=0, numParks=3004004, numFalseAlarmUnparks=693801, numSharedQueueSwitches=1, numLocalSubmits=1855042298, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=927812643, numSharedTasksExecuted=131162, numSteals=4245402, numExceptions=0, numParks=3212005, numFalseAlarmUnparks=828829, numSharedQueueSwitches=1, numLocalSubmits=927736336, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=858592614, numSharedTasksExecuted=129461, numSteals=3828449, numExceptions=0, numParks=2873131, numFalseAlarmUnparks=750515, numSharedQueueSwitches=1, numLocalSubmits=858533119, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=527848154, numSharedTasksExecuted=125831, numSteals=3912346, numExceptions=0, numParks=2985516, numFalseAlarmUnparks=873918, numSharedQueueSwitches=1, numLocalSubmits=527812485, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=610121565, numSharedTasksExecuted=119571, numSteals=2914826, numExceptions=0, numParks=2107244, numFalseAlarmUnparks=601903, numSharedQueueSwitches=1, numLocalSubmits=610089447, approximateLocalQueueSize=0}
--------------------------------
1224,903 ops/s


Result "testPingPong08":
  1079,390 Â±(99.9%) 239,164 ops/s [Average]
  (min, avg, max) = (924,224, 1079,390, 1233,208), stdev = 158,192
  CI (99.9%): [840,226, 1318,554] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong08
# Parameters: (strategy = no-conc)

# Run progress: 56,02% complete, ETA 05:27:58
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
<failure>

java.lang.StackOverflowError
	at benchmark.PoolBenchmark$PingPongActor$$Lambda$2/1789253429.<init>(Unknown Source)
	at benchmark.PoolBenchmark$PingPongActor$$Lambda$2/1789253429.get$Lambda(Unknown Source)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)



# Run progress: 56,25% complete, ETA 05:24:55
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
<failure>

java.lang.StackOverflowError
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)




# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong08
# Parameters: (strategy = ForkJoinLifo)

# Run progress: 56,48% complete, ETA 05:21:54
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
577,815 ops/s
# Warmup Iteration   2: 655,190 ops/s
# Warmup Iteration   3: 620,459 ops/s
Iteration   1: 625,216 ops/s
Iteration   2: 615,889 ops/s
Iteration   3: 620,824 ops/s
Iteration   4: 619,062 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
622,526 ops/s

# Run progress: 56,71% complete, ETA 05:20:15
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
604,237 ops/s
# Warmup Iteration   2: 566,632 ops/s
# Warmup Iteration   3: 606,340 ops/s
Iteration   1: 592,255 ops/s
Iteration   2: 588,815 ops/s
Iteration   3: 590,667 ops/s
Iteration   4: 592,460 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
591,318 ops/s


Result "testPingPong08":
  605,903 Â±(99.9%) 23,898 ops/s [Average]
  (min, avg, max) = (588,815, 605,903, 625,216), stdev = 15,807
  CI (99.9%): [582,006, 629,801] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong08
# Parameters: (strategy = J9FjSharedQueues)

# Run progress: 56,94% complete, ETA 05:18:35
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
200,555 ops/s
# Warmup Iteration   2: 218,669 ops/s
# Warmup Iteration   3: 211,555 ops/s
Iteration   1: 203,615 ops/s
Iteration   2: 199,505 ops/s
Iteration   3: 200,331 ops/s
Iteration   4: 200,277 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
199,945 ops/s

# Run progress: 57,18% complete, ETA 05:16:55
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
194,240 ops/s
# Warmup Iteration   2: 209,927 ops/s
# Warmup Iteration   3: 198,870 ops/s
Iteration   1: 193,796 ops/s
Iteration   2: 190,096 ops/s
Iteration   3: 189,793 ops/s
Iteration   4: 190,421 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
190,704 ops/s


Result "testPingPong08":
  195,848 Â±(99.9%) 8,127 ops/s [Average]
  (min, avg, max) = (189,793, 195,848, 203,615), stdev = 5,375
  CI (99.9%): [187,722, 203,975] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong08
# Parameters: (strategy = J9FjLifo)

# Run progress: 57,41% complete, ETA 05:15:15
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
595,335 ops/s
# Warmup Iteration   2: 678,746 ops/s
# Warmup Iteration   3: 661,341 ops/s
Iteration   1: 678,271 ops/s
Iteration   2: 681,584 ops/s
Iteration   3: 681,540 ops/s
Iteration   4: 679,239 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
676,097 ops/s

# Run progress: 57,64% complete, ETA 05:13:35
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
793,511 ops/s
# Warmup Iteration   2: 957,676 ops/s
# Warmup Iteration   3: 975,285 ops/s
Iteration   1: 969,323 ops/s
Iteration   2: 968,586 ops/s
Iteration   3: 968,887 ops/s
Iteration   4: 955,185 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
958,587 ops/s


Result "testPingPong08":
  821,730 Â±(99.9%) 227,021 ops/s [Average]
  (min, avg, max) = (676,097, 821,730, 969,323), stdev = 150,160
  CI (99.9%): [594,709, 1048,751] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong08
# Parameters: (strategy = J9FjFifo)

# Run progress: 57,87% complete, ETA 05:11:55
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
654,195 ops/s
# Warmup Iteration   2: 658,864 ops/s
# Warmup Iteration   3: 664,701 ops/s
Iteration   1: 636,453 ops/s
Iteration   2: 636,109 ops/s
Iteration   3: 639,371 ops/s
Iteration   4: 632,564 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
629,358 ops/s

# Run progress: 58,10% complete, ETA 05:10:15
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
716,383 ops/s
# Warmup Iteration   2: 761,602 ops/s
# Warmup Iteration   3: 751,309 ops/s
Iteration   1: 725,461 ops/s
Iteration   2: 725,671 ops/s
Iteration   3: 725,261 ops/s
Iteration   4: 723,725 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
722,662 ops/s


Result "testPingPong08":
  679,664 Â±(99.9%) 71,661 ops/s [Average]
  (min, avg, max) = (629,358, 679,664, 725,671), stdev = 47,399
  CI (99.9%): [608,003, 751,324] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong15
# Parameters: (strategy = a-sync-block)

# Run progress: 58,33% complete, ETA 05:08:35
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
403,341 ops/s
# Warmup Iteration   2: 396,529 ops/s
# Warmup Iteration   3: 373,058 ops/s
Iteration   1: 360,148 ops/s
Iteration   2: 352,187 ops/s
Iteration   3: 354,546 ops/s
Iteration   4: 355,868 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=825248017, numSharedTasksExecuted=77518, numSteals=3366900, numExceptions=0, numParks=1879809, numFalseAlarmUnparks=440504, numSharedQueueSwitches=0, numLocalSubmits=825160145, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=871501912, numSharedTasksExecuted=79835, numSteals=2881502, numExceptions=0, numParks=1613644, numFalseAlarmUnparks=373133, numSharedQueueSwitches=1, numLocalSubmits=871409121, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=994221755, numSharedTasksExecuted=99558, numSteals=2203935, numExceptions=0, numParks=1558707, numFalseAlarmUnparks=372181, numSharedQueueSwitches=1, numLocalSubmits=994106401, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=750441460, numSharedTasksExecuted=76724, numSteals=2826415, numExceptions=0, numParks=1533549, numFalseAlarmUnparks=352099, numSharedQueueSwitches=1, numLocalSubmits=750365583, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=822702682, numSharedTasksExecuted=79592, numSteals=2252879, numExceptions=0, numParks=1197395, numFalseAlarmUnparks=297800, numSharedQueueSwitches=1, numLocalSubmits=822622984, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=436918186, numSharedTasksExecuted=40894, numSteals=2753948, numExceptions=0, numParks=1442165, numFalseAlarmUnparks=364454, numSharedQueueSwitches=1, numLocalSubmits=436888510, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=452666797, numSharedTasksExecuted=44877, numSteals=2408638, numExceptions=0, numParks=1176693, numFalseAlarmUnparks=290745, numSharedQueueSwitches=1, numLocalSubmits=452633669, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=534449199, numSharedTasksExecuted=69825, numSteals=2062519, numExceptions=0, numParks=948468, numFalseAlarmUnparks=228281, numSharedQueueSwitches=1, numLocalSubmits=534394772, approximateLocalQueueSize=0}
--------------------------------
355,705 ops/s

# Run progress: 58,56% complete, ETA 05:06:55
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
678,845 ops/s
# Warmup Iteration   2: 654,350 ops/s
# Warmup Iteration   3: 654,967 ops/s
Iteration   1: 659,661 ops/s
Iteration   2: 655,575 ops/s
Iteration   3: 658,065 ops/s
Iteration   4: 656,014 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1976949965, numSharedTasksExecuted=205193, numSteals=4692534, numExceptions=0, numParks=2668231, numFalseAlarmUnparks=538602, numSharedQueueSwitches=0, numLocalSubmits=1976719278, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1952712166, numSharedTasksExecuted=202217, numSteals=4619587, numExceptions=0, numParks=2671216, numFalseAlarmUnparks=538750, numSharedQueueSwitches=1, numLocalSubmits=1952483184, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=709348698, numSharedTasksExecuted=72080, numSteals=3787850, numExceptions=0, numParks=2642003, numFalseAlarmUnparks=659928, numSharedQueueSwitches=1, numLocalSubmits=709286284, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=741550452, numSharedTasksExecuted=72773, numSteals=4184177, numExceptions=0, numParks=2490347, numFalseAlarmUnparks=560470, numSharedQueueSwitches=1, numLocalSubmits=741494349, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1806658070, numSharedTasksExecuted=175944, numSteals=3760699, numExceptions=0, numParks=2125093, numFalseAlarmUnparks=450960, numSharedQueueSwitches=1, numLocalSubmits=1806466341, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1903923079, numSharedTasksExecuted=176195, numSteals=2836767, numExceptions=0, numParks=1580366, numFalseAlarmUnparks=352432, numSharedQueueSwitches=1, numLocalSubmits=1903718286, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=745724059, numSharedTasksExecuted=73213, numSteals=3081276, numExceptions=0, numParks=1672396, numFalseAlarmUnparks=394038, numSharedQueueSwitches=1, numLocalSubmits=745679896, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=630133519, numSharedTasksExecuted=69093, numSteals=3544862, numExceptions=0, numParks=1970233, numFalseAlarmUnparks=515159, numSharedQueueSwitches=1, numLocalSubmits=630105682, approximateLocalQueueSize=0}
--------------------------------
660,635 ops/s


Result "testPingPong15":
  506,841 Â±(99.9%) 240,906 ops/s [Average]
  (min, avg, max) = (352,187, 506,841, 660,635), stdev = 159,344
  CI (99.9%): [265,935, 747,746] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong15
# Parameters: (strategy = a-sync-nocheck)

# Run progress: 58,80% complete, ETA 05:05:15
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
666,994 ops/s
# Warmup Iteration   2: 655,121 ops/s
# Warmup Iteration   3: 661,015 ops/s
Iteration   1: 644,426 ops/s
Iteration   2: 642,124 ops/s
Iteration   3: 641,470 ops/s
Iteration   4: 638,425 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2214520389, numSharedTasksExecuted=205650, numSteals=2815309, numExceptions=0, numParks=2079478, numFalseAlarmUnparks=514874, numSharedQueueSwitches=0, numLocalSubmits=2214280085, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1930000328, numSharedTasksExecuted=174343, numSteals=2749204, numExceptions=0, numParks=2002628, numFalseAlarmUnparks=486393, numSharedQueueSwitches=1, numLocalSubmits=1929774615, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=824884607, numSharedTasksExecuted=73630, numSteals=3211427, numExceptions=0, numParks=2387909, numFalseAlarmUnparks=622587, numSharedQueueSwitches=1, numLocalSubmits=824805332, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=578707797, numSharedTasksExecuted=68526, numSteals=3329453, numExceptions=0, numParks=2576284, numFalseAlarmUnparks=787251, numSharedQueueSwitches=1, numLocalSubmits=578666042, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2120763232, numSharedTasksExecuted=203534, numSteals=2162868, numExceptions=0, numParks=1463653, numFalseAlarmUnparks=380865, numSharedQueueSwitches=1, numLocalSubmits=2120551917, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1063107097, numSharedTasksExecuted=106258, numSteals=2667578, numExceptions=0, numParks=1705295, numFalseAlarmUnparks=473662, numSharedQueueSwitches=1, numLocalSubmits=1063006023, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=462519594, numSharedTasksExecuted=66814, numSteals=2546498, numExceptions=0, numParks=1849023, numFalseAlarmUnparks=604644, numSharedQueueSwitches=1, numLocalSubmits=462496135, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1033096964, numSharedTasksExecuted=124013, numSteals=1727977, numExceptions=0, numParks=1102977, numFalseAlarmUnparks=301376, numSharedQueueSwitches=1, numLocalSubmits=1032997091, approximateLocalQueueSize=0}
--------------------------------
644,125 ops/s

# Run progress: 59,03% complete, ETA 05:03:35
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
623,102 ops/s
# Warmup Iteration   2: 618,337 ops/s
# Warmup Iteration   3: 621,425 ops/s
Iteration   1: 615,367 ops/s
Iteration   2: 610,554 ops/s
Iteration   3: 599,058 ops/s
Iteration   4: 604,965 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2139564887, numSharedTasksExecuted=199533, numSteals=3011818, numExceptions=0, numParks=2436725, numFalseAlarmUnparks=512241, numSharedQueueSwitches=0, numLocalSubmits=2139321760, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2074819533, numSharedTasksExecuted=191707, numSteals=2982654, numExceptions=0, numParks=2383592, numFalseAlarmUnparks=493289, numSharedQueueSwitches=1, numLocalSubmits=2074597853, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2115576368, numSharedTasksExecuted=192901, numSteals=2749110, numExceptions=0, numParks=2208444, numFalseAlarmUnparks=445869, numSharedQueueSwitches=1, numLocalSubmits=2115339160, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=881417022, numSharedTasksExecuted=85586, numSteals=2346027, numExceptions=0, numParks=1775844, numFalseAlarmUnparks=477439, numSharedQueueSwitches=1, numLocalSubmits=881327436, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=858842868, numSharedTasksExecuted=93123, numSteals=2154713, numExceptions=0, numParks=1586006, numFalseAlarmUnparks=427778, numSharedQueueSwitches=1, numLocalSubmits=858759135, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=437406614, numSharedTasksExecuted=65014, numSteals=2246731, numExceptions=0, numParks=1603950, numFalseAlarmUnparks=487158, numSharedQueueSwitches=1, numLocalSubmits=437383753, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=516350050, numSharedTasksExecuted=64302, numSteals=1799629, numExceptions=0, numParks=1281422, numFalseAlarmUnparks=403882, numSharedQueueSwitches=1, numLocalSubmits=516323163, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=648472666, numSharedTasksExecuted=75087, numSteals=1581614, numExceptions=0, numParks=1060521, numFalseAlarmUnparks=313495, numSharedQueueSwitches=1, numLocalSubmits=648430495, approximateLocalQueueSize=0}
--------------------------------
607,662 ops/s


Result "testPingPong15":
  624,818 Â±(99.9%) 28,347 ops/s [Average]
  (min, avg, max) = (599,058, 624,818, 644,426), stdev = 18,750
  CI (99.9%): [596,471, 653,165] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong15
# Parameters: (strategy = a-lock-block)

# Run progress: 59,26% complete, ETA 05:01:54
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
677,508 ops/s
# Warmup Iteration   2: 640,880 ops/s
# Warmup Iteration   3: 633,648 ops/s
Iteration   1: 633,136 ops/s
Iteration   2: 630,747 ops/s
Iteration   3: 627,659 ops/s
Iteration   4: 626,128 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1711232519, numSharedTasksExecuted=189973, numSteals=7208087, numExceptions=0, numParks=3845669, numFalseAlarmUnparks=817446, numSharedQueueSwitches=0, numLocalSubmits=1711033924, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=658147183, numSharedTasksExecuted=67656, numSteals=6515731, numExceptions=0, numParks=3521182, numFalseAlarmUnparks=757431, numSharedQueueSwitches=1, numLocalSubmits=658087006, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=531362345, numSharedTasksExecuted=67265, numSteals=5965364, numExceptions=0, numParks=3158014, numFalseAlarmUnparks=673708, numSharedQueueSwitches=1, numLocalSubmits=531307511, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1808630125, numSharedTasksExecuted=182770, numSteals=5284419, numExceptions=0, numParks=2697029, numFalseAlarmUnparks=560822, numSharedQueueSwitches=1, numLocalSubmits=1808427047, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=612839257, numSharedTasksExecuted=67458, numSteals=5150098, numExceptions=0, numParks=2564946, numFalseAlarmUnparks=584414, numSharedQueueSwitches=1, numLocalSubmits=612798832, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1690600666, numSharedTasksExecuted=157814, numSteals=4241760, numExceptions=0, numParks=2048939, numFalseAlarmUnparks=478429, numSharedQueueSwitches=1, numLocalSubmits=1690424258, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1535594337, numSharedTasksExecuted=138028, numSteals=4273039, numExceptions=0, numParks=1964888, numFalseAlarmUnparks=435579, numSharedQueueSwitches=1, numLocalSubmits=1535459821, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1480143576, numSharedTasksExecuted=131899, numSteals=3106022, numExceptions=0, numParks=1594520, numFalseAlarmUnparks=378165, numSharedQueueSwitches=1, numLocalSubmits=1480008746, approximateLocalQueueSize=0}
--------------------------------
629,754 ops/s

# Run progress: 59,49% complete, ETA 05:00:14
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
692,018 ops/s
# Warmup Iteration   2: 660,345 ops/s
# Warmup Iteration   3: 676,428 ops/s
Iteration   1: 664,612 ops/s
Iteration   2: 669,576 ops/s
Iteration   3: 671,679 ops/s
Iteration   4: 676,052 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1786934463, numSharedTasksExecuted=166648, numSteals=4925416, numExceptions=0, numParks=2696960, numFalseAlarmUnparks=556027, numSharedQueueSwitches=0, numLocalSubmits=1786725643, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1327006507, numSharedTasksExecuted=140960, numSteals=4063313, numExceptions=0, numParks=2628724, numFalseAlarmUnparks=582934, numSharedQueueSwitches=1, numLocalSubmits=1326865405, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1314512990, numSharedTasksExecuted=143421, numSteals=4165781, numExceptions=0, numParks=2457692, numFalseAlarmUnparks=506937, numSharedQueueSwitches=1, numLocalSubmits=1314364344, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1735044601, numSharedTasksExecuted=159620, numSteals=3634426, numExceptions=0, numParks=1946469, numFalseAlarmUnparks=435038, numSharedQueueSwitches=1, numLocalSubmits=1734859321, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1653966965, numSharedTasksExecuted=156743, numSteals=3455766, numExceptions=0, numParks=1734311, numFalseAlarmUnparks=379664, numSharedQueueSwitches=1, numLocalSubmits=1653804227, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1674781319, numSharedTasksExecuted=154798, numSteals=2953904, numExceptions=0, numParks=1444689, numFalseAlarmUnparks=321754, numSharedQueueSwitches=1, numLocalSubmits=1674620264, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=455658199, numSharedTasksExecuted=70390, numSteals=3411981, numExceptions=0, numParks=1647386, numFalseAlarmUnparks=378119, numSharedQueueSwitches=1, numLocalSubmits=455634567, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=724444964, numSharedTasksExecuted=74663, numSteals=2807366, numExceptions=0, numParks=1294012, numFalseAlarmUnparks=281993, numSharedQueueSwitches=1, numLocalSubmits=724408994, approximateLocalQueueSize=0}
--------------------------------
672,227 ops/s


Result "testPingPong15":
  650,157 Â±(99.9%) 33,326 ops/s [Average]
  (min, avg, max) = (626,128, 650,157, 676,052), stdev = 22,043
  CI (99.9%): [616,831, 683,484] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong15
# Parameters: (strategy = a-nonblocking)

# Run progress: 59,72% complete, ETA 04:58:34
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
452,305 ops/s
# Warmup Iteration   2: 410,851 ops/s
# Warmup Iteration   3: 405,802 ops/s
Iteration   1: 386,382 ops/s
Iteration   2: 377,490 ops/s
Iteration   3: 381,191 ops/s
Iteration   4: 377,966 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=692510526, numSharedTasksExecuted=80714, numSteals=5865825, numExceptions=0, numParks=2034083, numFalseAlarmUnparks=364801, numSharedQueueSwitches=0, numLocalSubmits=692427009, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=927182703, numSharedTasksExecuted=84322, numSteals=5340296, numExceptions=0, numParks=1920860, numFalseAlarmUnparks=338054, numSharedQueueSwitches=1, numLocalSubmits=927090155, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1002583519, numSharedTasksExecuted=84920, numSteals=4370779, numExceptions=0, numParks=1636553, numFalseAlarmUnparks=290152, numSharedQueueSwitches=1, numLocalSubmits=1002477818, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=970286806, numSharedTasksExecuted=83382, numSteals=3072285, numExceptions=0, numParks=1551638, numFalseAlarmUnparks=327445, numSharedQueueSwitches=1, numLocalSubmits=970186248, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=490896264, numSharedTasksExecuted=42462, numSteals=4242352, numExceptions=0, numParks=1549212, numFalseAlarmUnparks=287419, numSharedQueueSwitches=1, numLocalSubmits=490863326, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=657017368, numSharedTasksExecuted=79554, numSteals=3808908, numExceptions=0, numParks=1340183, numFalseAlarmUnparks=250992, numSharedQueueSwitches=1, numLocalSubmits=656949072, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=630806035, numSharedTasksExecuted=76775, numSteals=3438410, numExceptions=0, numParks=1171882, numFalseAlarmUnparks=220162, numSharedQueueSwitches=1, numLocalSubmits=630740924, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=724716787, numSharedTasksExecuted=77479, numSteals=3571742, numExceptions=0, numParks=1195774, numFalseAlarmUnparks=227257, numSharedQueueSwitches=1, numLocalSubmits=724655848, approximateLocalQueueSize=0}
--------------------------------
381,907 ops/s

# Run progress: 59,95% complete, ETA 04:56:53
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
653,870 ops/s
# Warmup Iteration   2: 621,441 ops/s
# Warmup Iteration   3: 626,678 ops/s
Iteration   1: 627,937 ops/s
Iteration   2: 624,069 ops/s
Iteration   3: 625,888 ops/s
Iteration   4: 629,630 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2221427147, numSharedTasksExecuted=207277, numSteals=3667662, numExceptions=0, numParks=2584759, numFalseAlarmUnparks=521631, numSharedQueueSwitches=0, numLocalSubmits=2221169177, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2179869341, numSharedTasksExecuted=204468, numSteals=2885406, numExceptions=0, numParks=2453995, numFalseAlarmUnparks=563740, numSharedQueueSwitches=1, numLocalSubmits=2179626902, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2161357095, numSharedTasksExecuted=198385, numSteals=3466028, numExceptions=0, numParks=2445619, numFalseAlarmUnparks=475766, numSharedQueueSwitches=1, numLocalSubmits=2161120449, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=782171859, numSharedTasksExecuted=78585, numSteals=2825409, numExceptions=0, numParks=1849348, numFalseAlarmUnparks=474210, numSharedQueueSwitches=1, numLocalSubmits=782110392, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=951631341, numSharedTasksExecuted=102405, numSteals=2449888, numExceptions=0, numParks=1551021, numFalseAlarmUnparks=409627, numSharedQueueSwitches=1, numLocalSubmits=951533400, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=670005652, numSharedTasksExecuted=75913, numSteals=2468010, numExceptions=0, numParks=1510656, numFalseAlarmUnparks=414521, numSharedQueueSwitches=1, numLocalSubmits=669958939, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=450925152, numSharedTasksExecuted=65591, numSteals=2211173, numExceptions=0, numParks=1300905, numFalseAlarmUnparks=352211, numSharedQueueSwitches=1, numLocalSubmits=450898161, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=550262421, numSharedTasksExecuted=64149, numSteals=1932243, numExceptions=0, numParks=1099708, numFalseAlarmUnparks=291335, numSharedQueueSwitches=1, numLocalSubmits=550235815, approximateLocalQueueSize=0}
--------------------------------
624,616 ops/s


Result "testPingPong15":
  503,708 Â±(99.9%) 195,619 ops/s [Average]
  (min, avg, max) = (377,490, 503,708, 629,630), stdev = 129,390
  CI (99.9%): [308,088, 699,327] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong15
# Parameters: (strategy = no-conc)

# Run progress: 60,19% complete, ETA 04:55:13
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
<failure>

java.lang.StackOverflowError
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)



# Run progress: 60,42% complete, ETA 04:52:24
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
<failure>

java.lang.StackOverflowError
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)




# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong15
# Parameters: (strategy = ForkJoinLifo)

# Run progress: 60,65% complete, ETA 04:49:36
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
548,981 ops/s
# Warmup Iteration   2: 621,120 ops/s
# Warmup Iteration   3: 653,013 ops/s
Iteration   1: 684,006 ops/s
Iteration   2: 686,543 ops/s
Iteration   3: 685,394 ops/s
Iteration   4: 687,521 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
699,646 ops/s

# Run progress: 60,88% complete, ETA 04:47:57
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
486,695 ops/s
# Warmup Iteration   2: 568,076 ops/s
# Warmup Iteration   3: 567,031 ops/s
Iteration   1: 572,211 ops/s
Iteration   2: 573,593 ops/s
Iteration   3: 570,853 ops/s
Iteration   4: 570,081 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
570,578 ops/s


Result "testPingPong15":
  630,043 Â±(99.9%) 93,581 ops/s [Average]
  (min, avg, max) = (570,081, 630,043, 699,646), stdev = 61,898
  CI (99.9%): [536,461, 723,624] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong15
# Parameters: (strategy = J9FjSharedQueues)

# Run progress: 61,11% complete, ETA 04:46:17
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
116,384 ops/s
# Warmup Iteration   2: 126,912 ops/s
# Warmup Iteration   3: 121,891 ops/s
Iteration   1: 116,477 ops/s
Iteration   2: 114,252 ops/s
Iteration   3: 114,290 ops/s
Iteration   4: 114,384 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
114,296 ops/s

# Run progress: 61,34% complete, ETA 04:44:38
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
115,044 ops/s
# Warmup Iteration   2: 122,654 ops/s
# Warmup Iteration   3: 117,127 ops/s
Iteration   1: 113,754 ops/s
Iteration   2: 111,275 ops/s
Iteration   3: 111,612 ops/s
Iteration   4: 111,640 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
111,089 ops/s


Result "testPingPong15":
  113,307 Â±(99.9%) 2,711 ops/s [Average]
  (min, avg, max) = (111,089, 113,307, 116,477), stdev = 1,793
  CI (99.9%): [110,596, 116,018] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong15
# Parameters: (strategy = J9FjLifo)

# Run progress: 61,57% complete, ETA 04:42:58
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
443,924 ops/s
# Warmup Iteration   2: 481,912 ops/s
# Warmup Iteration   3: 454,525 ops/s
Iteration   1: 460,226 ops/s
Iteration   2: 465,947 ops/s
Iteration   3: 467,613 ops/s
Iteration   4: 463,041 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
467,891 ops/s

# Run progress: 61,81% complete, ETA 04:41:19
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
506,829 ops/s
# Warmup Iteration   2: 539,678 ops/s
# Warmup Iteration   3: 519,662 ops/s
Iteration   1: 524,186 ops/s
Iteration   2: 522,666 ops/s
Iteration   3: 524,276 ops/s
Iteration   4: 523,018 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
524,215 ops/s


Result "testPingPong15":
  494,308 Â±(99.9%) 46,918 ops/s [Average]
  (min, avg, max) = (460,226, 494,308, 524,276), stdev = 31,033
  CI (99.9%): [447,390, 541,226] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong15
# Parameters: (strategy = J9FjFifo)

# Run progress: 62,04% complete, ETA 04:39:39
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
516,742 ops/s
# Warmup Iteration   2: 532,950 ops/s
# Warmup Iteration   3: 511,777 ops/s
Iteration   1: 525,257 ops/s
Iteration   2: 524,153 ops/s
Iteration   3: 523,794 ops/s
Iteration   4: 525,382 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
525,600 ops/s

# Run progress: 62,27% complete, ETA 04:37:59
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
425,072 ops/s
# Warmup Iteration   2: 436,569 ops/s
# Warmup Iteration   3: 433,707 ops/s
Iteration   1: 423,740 ops/s
Iteration   2: 424,128 ops/s
Iteration   3: 421,883 ops/s
Iteration   4: 421,991 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
423,315 ops/s


Result "testPingPong15":
  473,924 Â±(99.9%) 81,147 ops/s [Average]
  (min, avg, max) = (421,883, 473,924, 525,600), stdev = 53,674
  CI (99.9%): [392,777, 555,071] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong16
# Parameters: (strategy = a-sync-block)

# Run progress: 62,50% complete, ETA 04:36:20
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
642,955 ops/s
# Warmup Iteration   2: 610,263 ops/s
# Warmup Iteration   3: 591,632 ops/s
Iteration   1: 598,958 ops/s
Iteration   2: 591,889 ops/s
Iteration   3: 591,267 ops/s
Iteration   4: 592,042 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2162583304, numSharedTasksExecuted=196381, numSteals=2770536, numExceptions=0, numParks=1864969, numFalseAlarmUnparks=410926, numSharedQueueSwitches=0, numLocalSubmits=2162334205, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1956280252, numSharedTasksExecuted=187878, numSteals=2662463, numExceptions=0, numParks=1821532, numFalseAlarmUnparks=402080, numSharedQueueSwitches=1, numLocalSubmits=1956065735, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=825901892, numSharedTasksExecuted=77618, numSteals=3126995, numExceptions=0, numParks=2207641, numFalseAlarmUnparks=525911, numSharedQueueSwitches=1, numLocalSubmits=825816694, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=567317381, numSharedTasksExecuted=63498, numSteals=3119609, numExceptions=0, numParks=2110816, numFalseAlarmUnparks=561227, numSharedQueueSwitches=1, numLocalSubmits=567280369, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1072660640, numSharedTasksExecuted=115774, numSteals=2629806, numExceptions=0, numParks=1580951, numFalseAlarmUnparks=390608, numSharedQueueSwitches=1, numLocalSubmits=1072550690, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=480931603, numSharedTasksExecuted=63113, numSteals=2499507, numExceptions=0, numParks=1586660, numFalseAlarmUnparks=435122, numSharedQueueSwitches=1, numLocalSubmits=480907308, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1116790274, numSharedTasksExecuted=125277, numSteals=1764210, numExceptions=0, numParks=1039454, numFalseAlarmUnparks=258595, numSharedQueueSwitches=1, numLocalSubmits=1116689522, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1896094662, numSharedTasksExecuted=178325, numSteals=1531619, numExceptions=0, numParks=839512, numFalseAlarmUnparks=195504, numSharedQueueSwitches=1, numLocalSubmits=1895907621, approximateLocalQueueSize=0}
--------------------------------
590,674 ops/s

# Run progress: 62,73% complete, ETA 04:34:40
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
409,118 ops/s
# Warmup Iteration   2: 346,857 ops/s
# Warmup Iteration   3: 347,338 ops/s
Iteration   1: 345,968 ops/s
Iteration   2: 338,330 ops/s
Iteration   3: 337,833 ops/s
Iteration   4: 338,233 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=994106146, numSharedTasksExecuted=97379, numSteals=2984398, numExceptions=0, numParks=1610826, numFalseAlarmUnparks=367160, numSharedQueueSwitches=0, numLocalSubmits=993995168, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=654512314, numSharedTasksExecuted=72464, numSteals=3802942, numExceptions=0, numParks=1498880, numFalseAlarmUnparks=294763, numSharedQueueSwitches=1, numLocalSubmits=654439729, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=886321997, numSharedTasksExecuted=76926, numSteals=3012207, numExceptions=0, numParks=1180111, numFalseAlarmUnparks=226720, numSharedQueueSwitches=1, numLocalSubmits=886232240, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=643697815, numSharedTasksExecuted=72255, numSteals=3651466, numExceptions=0, numParks=1431016, numFalseAlarmUnparks=284917, numSharedQueueSwitches=1, numLocalSubmits=643631281, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=604766860, numSharedTasksExecuted=71768, numSteals=3301175, numExceptions=0, numParks=1295210, numFalseAlarmUnparks=260628, numSharedQueueSwitches=1, numLocalSubmits=604704643, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=952258899, numSharedTasksExecuted=79350, numSteals=2630537, numExceptions=0, numParks=957790, numFalseAlarmUnparks=185095, numSharedQueueSwitches=1, numLocalSubmits=952166099, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=446314936, numSharedTasksExecuted=40515, numSteals=3375317, numExceptions=0, numParks=1317441, numFalseAlarmUnparks=263257, numSharedQueueSwitches=1, numLocalSubmits=446284336, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=614181041, numSharedTasksExecuted=68967, numSteals=2719621, numExceptions=0, numParks=994996, numFalseAlarmUnparks=187084, numSharedQueueSwitches=1, numLocalSubmits=614126888, approximateLocalQueueSize=0}
--------------------------------
340,442 ops/s


Result "testPingPong16":
  466,564 Â±(99.9%) 201,498 ops/s [Average]
  (min, avg, max) = (337,833, 466,564, 598,958), stdev = 133,278
  CI (99.9%): [265,066, 668,061] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong16
# Parameters: (strategy = a-sync-nocheck)

# Run progress: 62,96% complete, ETA 04:33:00
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
687,107 ops/s
# Warmup Iteration   2: 724,746 ops/s
# Warmup Iteration   3: 705,835 ops/s
Iteration   1: 697,684 ops/s
Iteration   2: 699,388 ops/s
Iteration   3: 693,206 ops/s
Iteration   4: 693,651 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=767838403, numSharedTasksExecuted=86133, numSteals=2525330, numExceptions=0, numParks=2103076, numFalseAlarmUnparks=627630, numSharedQueueSwitches=0, numLocalSubmits=767766459, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2133147361, numSharedTasksExecuted=215791, numSteals=2328604, numExceptions=0, numParks=1631163, numFalseAlarmUnparks=396223, numSharedQueueSwitches=1, numLocalSubmits=2132910377, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2136841381, numSharedTasksExecuted=210649, numSteals=2200441, numExceptions=0, numParks=1546526, numFalseAlarmUnparks=372768, numSharedQueueSwitches=1, numLocalSubmits=2136604833, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2112106805, numSharedTasksExecuted=212001, numSteals=2167626, numExceptions=0, numParks=1462920, numFalseAlarmUnparks=367471, numSharedQueueSwitches=1, numLocalSubmits=2111883408, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2033584684, numSharedTasksExecuted=207032, numSteals=1941914, numExceptions=0, numParks=1283719, numFalseAlarmUnparks=325360, numSharedQueueSwitches=1, numLocalSubmits=2033381394, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=879656946, numSharedTasksExecuted=85594, numSteals=1926192, numExceptions=0, numParks=1298108, numFalseAlarmUnparks=356636, numSharedQueueSwitches=1, numLocalSubmits=879593843, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=962406703, numSharedTasksExecuted=85625, numSteals=1836900, numExceptions=0, numParks=1234771, numFalseAlarmUnparks=355249, numSharedQueueSwitches=1, numLocalSubmits=962302671, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=785617725, numSharedTasksExecuted=78303, numSteals=1845403, numExceptions=0, numParks=1244960, numFalseAlarmUnparks=368900, numSharedQueueSwitches=1, numLocalSubmits=785575895, approximateLocalQueueSize=0}
--------------------------------
695,033 ops/s

# Run progress: 63,19% complete, ETA 04:31:20
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
699,826 ops/s
# Warmup Iteration   2: 716,488 ops/s
# Warmup Iteration   3: 714,931 ops/s
Iteration   1: 678,247 ops/s
Iteration   2: 672,959 ops/s
Iteration   3: 675,597 ops/s
Iteration   4: 678,911 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2077882229, numSharedTasksExecuted=213535, numSteals=4284894, numExceptions=0, numParks=2505012, numFalseAlarmUnparks=638876, numSharedQueueSwitches=0, numLocalSubmits=2077656743, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1906365443, numSharedTasksExecuted=159084, numSteals=2789527, numExceptions=0, numParks=1564776, numFalseAlarmUnparks=364463, numSharedQueueSwitches=1, numLocalSubmits=1906142947, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1463400005, numSharedTasksExecuted=145157, numSteals=2668403, numExceptions=0, numParks=1726465, numFalseAlarmUnparks=434652, numSharedQueueSwitches=1, numLocalSubmits=1463244871, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=499854188, numSharedTasksExecuted=72811, numSteals=3527515, numExceptions=0, numParks=2288121, numFalseAlarmUnparks=693187, numSharedQueueSwitches=1, numLocalSubmits=499815490, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2147955586, numSharedTasksExecuted=209803, numSteals=2098593, numExceptions=0, numParks=1245592, numFalseAlarmUnparks=313696, numSharedQueueSwitches=1, numLocalSubmits=2147735318, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2140789596, numSharedTasksExecuted=208826, numSteals=1991751, numExceptions=0, numParks=1130183, numFalseAlarmUnparks=279486, numSharedQueueSwitches=1, numLocalSubmits=2140574218, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=553353487, numSharedTasksExecuted=71405, numSteals=2620878, numExceptions=0, numParks=1562891, numFalseAlarmUnparks=439592, numSharedQueueSwitches=1, numLocalSubmits=553322088, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=717439474, numSharedTasksExecuted=70091, numSteals=2334316, numExceptions=0, numParks=1225830, numFalseAlarmUnparks=305514, numSharedQueueSwitches=1, numLocalSubmits=717397621, approximateLocalQueueSize=0}
--------------------------------
676,854 ops/s


Result "testPingPong16":
  686,153 Â±(99.9%) 15,776 ops/s [Average]
  (min, avg, max) = (672,959, 686,153, 699,388), stdev = 10,435
  CI (99.9%): [670,378, 701,929] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong16
# Parameters: (strategy = a-lock-block)

# Run progress: 63,43% complete, ETA 04:29:40
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
688,239 ops/s
# Warmup Iteration   2: 716,254 ops/s
# Warmup Iteration   3: 703,316 ops/s
Iteration   1: 688,970 ops/s
Iteration   2: 681,666 ops/s
Iteration   3: 684,401 ops/s
Iteration   4: 686,347 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=916824622, numSharedTasksExecuted=85720, numSteals=3674240, numExceptions=0, numParks=2360169, numFalseAlarmUnparks=596787, numSharedQueueSwitches=0, numLocalSubmits=916724499, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2143746858, numSharedTasksExecuted=216572, numSteals=2616166, numExceptions=0, numParks=1974034, numFalseAlarmUnparks=514443, numSharedQueueSwitches=1, numLocalSubmits=2143510772, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2133546583, numSharedTasksExecuted=210543, numSteals=2899778, numExceptions=0, numParks=1869799, numFalseAlarmUnparks=465160, numSharedQueueSwitches=1, numLocalSubmits=2133307027, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=562973931, numSharedTasksExecuted=73138, numSteals=3131285, numExceptions=0, numParks=2034898, numFalseAlarmUnparks=534871, numSharedQueueSwitches=1, numLocalSubmits=562930705, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2026953087, numSharedTasksExecuted=198218, numSteals=2648585, numExceptions=0, numParks=1601706, numFalseAlarmUnparks=413944, numSharedQueueSwitches=1, numLocalSubmits=2026750028, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2062276767, numSharedTasksExecuted=197240, numSteals=2109970, numExceptions=0, numParks=1204673, numFalseAlarmUnparks=311744, numSharedQueueSwitches=1, numLocalSubmits=2062066821, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=925421945, numSharedTasksExecuted=93791, numSteals=2208040, numExceptions=0, numParks=1174366, numFalseAlarmUnparks=297399, numSharedQueueSwitches=1, numLocalSubmits=925350695, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=865696215, numSharedTasksExecuted=88530, numSteals=1941365, numExceptions=0, numParks=1007928, numFalseAlarmUnparks=248485, numSharedQueueSwitches=1, numLocalSubmits=865635709, approximateLocalQueueSize=0}
--------------------------------
684,327 ops/s

# Run progress: 63,66% complete, ETA 04:28:00
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
751,702 ops/s
# Warmup Iteration   2: 744,890 ops/s
# Warmup Iteration   3: 743,891 ops/s
Iteration   1: 729,759 ops/s
Iteration   2: 724,493 ops/s
Iteration   3: 730,067 ops/s
Iteration   4: 726,877 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2285231917, numSharedTasksExecuted=226610, numSteals=2626421, numExceptions=0, numParks=2123187, numFalseAlarmUnparks=565214, numSharedQueueSwitches=0, numLocalSubmits=2284981454, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2339477968, numSharedTasksExecuted=224343, numSteals=2209633, numExceptions=0, numParks=1774976, numFalseAlarmUnparks=443596, numSharedQueueSwitches=1, numLocalSubmits=2339204116, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2257903622, numSharedTasksExecuted=218742, numSteals=2260366, numExceptions=0, numParks=1821940, numFalseAlarmUnparks=464479, numSharedQueueSwitches=1, numLocalSubmits=2257655420, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=827826338, numSharedTasksExecuted=90634, numSteals=2390091, numExceptions=0, numParks=1883098, numFalseAlarmUnparks=546475, numSharedQueueSwitches=1, numLocalSubmits=827759819, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2263368505, numSharedTasksExecuted=209709, numSteals=1741044, numExceptions=0, numParks=1297903, numFalseAlarmUnparks=349008, numSharedQueueSwitches=1, numLocalSubmits=2263130763, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=529862102, numSharedTasksExecuted=77384, numSteals=1860204, numExceptions=0, numParks=1426730, numFalseAlarmUnparks=443852, numSharedQueueSwitches=1, numLocalSubmits=529831328, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=945853582, numSharedTasksExecuted=98526, numSteals=1621040, numExceptions=0, numParks=1171544, numFalseAlarmUnparks=349989, numSharedQueueSwitches=1, numLocalSubmits=945785757, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=910955974, numSharedTasksExecuted=90108, numSteals=1384434, numExceptions=0, numParks=982470, numFalseAlarmUnparks=289958, numSharedQueueSwitches=1, numLocalSubmits=910895295, approximateLocalQueueSize=0}
--------------------------------
727,223 ops/s


Result "testPingPong16":
  706,413 Â±(99.9%) 34,086 ops/s [Average]
  (min, avg, max) = (681,666, 706,413, 730,067), stdev = 22,546
  CI (99.9%): [672,327, 740,499] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong16
# Parameters: (strategy = a-nonblocking)

# Run progress: 63,89% complete, ETA 04:26:20
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
736,716 ops/s
# Warmup Iteration   2: 680,848 ops/s
# Warmup Iteration   3: 704,731 ops/s
Iteration   1: 674,427 ops/s
Iteration   2: 674,121 ops/s
Iteration   3: 672,585 ops/s
Iteration   4: 675,822 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2049966557, numSharedTasksExecuted=213803, numSteals=3107906, numExceptions=0, numParks=2400913, numFalseAlarmUnparks=634065, numSharedQueueSwitches=0, numLocalSubmits=2049740657, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2137340854, numSharedTasksExecuted=212138, numSteals=2529485, numExceptions=0, numParks=1892581, numFalseAlarmUnparks=456253, numSharedQueueSwitches=1, numLocalSubmits=2137096890, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=918900049, numSharedTasksExecuted=89626, numSteals=2644227, numExceptions=0, numParks=1915836, numFalseAlarmUnparks=470888, numSharedQueueSwitches=1, numLocalSubmits=918805025, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2086615355, numSharedTasksExecuted=206950, numSteals=2118999, numExceptions=0, numParks=1524456, numFalseAlarmUnparks=377772, numSharedQueueSwitches=1, numLocalSubmits=2086388219, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=814552333, numSharedTasksExecuted=78852, numSteals=2445717, numExceptions=0, numParks=1898332, numFalseAlarmUnparks=558230, numSharedQueueSwitches=1, numLocalSubmits=814492070, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=790963693, numSharedTasksExecuted=79871, numSteals=2211939, numExceptions=0, numParks=1720668, numFalseAlarmUnparks=530085, numSharedQueueSwitches=1, numLocalSubmits=790911775, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1971304361, numSharedTasksExecuted=188067, numSteals=1680509, numExceptions=0, numParks=1138388, numFalseAlarmUnparks=298037, numSharedQueueSwitches=1, numLocalSubmits=1971104189, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=704276806, numSharedTasksExecuted=78093, numSteals=2255526, numExceptions=0, numParks=1741728, numFalseAlarmUnparks=583627, numSharedQueueSwitches=1, numLocalSubmits=704233783, approximateLocalQueueSize=0}
--------------------------------
676,202 ops/s

# Run progress: 64,12% complete, ETA 04:24:40
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
592,026 ops/s
# Warmup Iteration   2: 554,167 ops/s
# Warmup Iteration   3: 526,560 ops/s
Iteration   1: 537,054 ops/s
Iteration   2: 530,856 ops/s
Iteration   3: 533,826 ops/s
Iteration   4: 536,726 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1478605183, numSharedTasksExecuted=147427, numSteals=4484049, numExceptions=0, numParks=2974103, numFalseAlarmUnparks=638876, numSharedQueueSwitches=0, numLocalSubmits=1478432434, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1450685618, numSharedTasksExecuted=142988, numSteals=3711167, numExceptions=0, numParks=2842880, numFalseAlarmUnparks=676365, numSharedQueueSwitches=1, numLocalSubmits=1450522040, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1480475380, numSharedTasksExecuted=140243, numSteals=3592564, numExceptions=0, numParks=2498279, numFalseAlarmUnparks=517829, numSharedQueueSwitches=1, numLocalSubmits=1480304221, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1038861936, numSharedTasksExecuted=112471, numSteals=3203377, numExceptions=0, numParks=2145367, numFalseAlarmUnparks=460795, numSharedQueueSwitches=1, numLocalSubmits=1038760942, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1452854745, numSharedTasksExecuted=134748, numSteals=2992988, numExceptions=0, numParks=1962939, numFalseAlarmUnparks=437464, numSharedQueueSwitches=1, numLocalSubmits=1452708366, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=778794993, numSharedTasksExecuted=91459, numSteals=2870951, numExceptions=0, numParks=1883592, numFalseAlarmUnparks=479975, numSharedQueueSwitches=1, numLocalSubmits=778721562, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=721379141, numSharedTasksExecuted=71617, numSteals=2620129, numExceptions=0, numParks=1725383, numFalseAlarmUnparks=476975, numSharedQueueSwitches=1, numLocalSubmits=721336016, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=672903012, numSharedTasksExecuted=66511, numSteals=2311251, numExceptions=0, numParks=1485399, numFalseAlarmUnparks=413977, numSharedQueueSwitches=1, numLocalSubmits=672866963, approximateLocalQueueSize=0}
--------------------------------
529,762 ops/s


Result "testPingPong16":
  604,138 Â±(99.9%) 112,400 ops/s [Average]
  (min, avg, max) = (529,762, 604,138, 676,202), stdev = 74,346
  CI (99.9%): [491,738, 716,538] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong16
# Parameters: (strategy = no-conc)

# Run progress: 64,35% complete, ETA 04:23:00
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
<failure>

java.lang.StackOverflowError
	at benchmark.PoolBenchmark$PingPongActor$$Lambda$2/1789253429.<init>(Unknown Source)
	at benchmark.PoolBenchmark$PingPongActor$$Lambda$2/1789253429.get$Lambda(Unknown Source)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)



# Run progress: 64,58% complete, ETA 04:20:23
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
<failure>

java.lang.StackOverflowError
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)




# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong16
# Parameters: (strategy = ForkJoinLifo)

# Run progress: 64,81% complete, ETA 04:17:46
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
342,904 ops/s
# Warmup Iteration   2: 367,157 ops/s
# Warmup Iteration   3: 360,748 ops/s
Iteration   1: 335,107 ops/s
Iteration   2: 328,544 ops/s
Iteration   3: 328,122 ops/s
Iteration   4: 327,331 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
328,024 ops/s

# Run progress: 65,05% complete, ETA 04:16:07
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
411,215 ops/s
# Warmup Iteration   2: 412,158 ops/s
# Warmup Iteration   3: 407,640 ops/s
Iteration   1: 395,963 ops/s
Iteration   2: 395,221 ops/s
Iteration   3: 396,185 ops/s
Iteration   4: 392,242 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
398,082 ops/s


Result "testPingPong16":
  362,482 Â±(99.9%) 52,823 ops/s [Average]
  (min, avg, max) = (327,331, 362,482, 398,082), stdev = 34,939
  CI (99.9%): [309,660, 415,305] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong16
# Parameters: (strategy = J9FjSharedQueues)

# Run progress: 65,28% complete, ETA 04:14:28
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
107,347 ops/s
# Warmup Iteration   2: 115,757 ops/s
# Warmup Iteration   3: 111,950 ops/s
Iteration   1: 107,008 ops/s
Iteration   2: 105,336 ops/s
Iteration   3: 105,057 ops/s
Iteration   4: 105,137 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
105,627 ops/s

# Run progress: 65,51% complete, ETA 04:12:49
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
110,059 ops/s
# Warmup Iteration   2: 117,310 ops/s
# Warmup Iteration   3: 113,301 ops/s
Iteration   1: 108,912 ops/s
Iteration   2: 107,574 ops/s
Iteration   3: 107,524 ops/s
Iteration   4: 107,755 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
107,428 ops/s


Result "testPingPong16":
  106,736 Â±(99.9%) 2,029 ops/s [Average]
  (min, avg, max) = (105,057, 106,736, 108,912), stdev = 1,342
  CI (99.9%): [104,707, 108,765] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong16
# Parameters: (strategy = J9FjLifo)

# Run progress: 65,74% complete, ETA 04:11:10
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
373,630 ops/s
# Warmup Iteration   2: 409,420 ops/s
# Warmup Iteration   3: 407,844 ops/s
Iteration   1: 403,086 ops/s
Iteration   2: 400,839 ops/s
Iteration   3: 402,242 ops/s
Iteration   4: 398,322 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
402,999 ops/s

# Run progress: 65,97% complete, ETA 04:09:30
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
388,799 ops/s
# Warmup Iteration   2: 398,563 ops/s
# Warmup Iteration   3: 387,321 ops/s
Iteration   1: 381,774 ops/s
Iteration   2: 381,411 ops/s
Iteration   3: 380,728 ops/s
Iteration   4: 382,070 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
380,596 ops/s


Result "testPingPong16":
  391,407 Â±(99.9%) 16,219 ops/s [Average]
  (min, avg, max) = (380,596, 391,407, 403,086), stdev = 10,728
  CI (99.9%): [375,188, 407,625] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong16
# Parameters: (strategy = J9FjFifo)

# Run progress: 66,20% complete, ETA 04:07:51
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
350,893 ops/s
# Warmup Iteration   2: 388,075 ops/s
# Warmup Iteration   3: 387,143 ops/s
Iteration   1: 379,896 ops/s
Iteration   2: 380,742 ops/s
Iteration   3: 381,064 ops/s
Iteration   4: 379,233 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
382,570 ops/s

# Run progress: 66,44% complete, ETA 04:06:12
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
404,989 ops/s
# Warmup Iteration   2: 489,142 ops/s
# Warmup Iteration   3: 497,347 ops/s
Iteration   1: 497,598 ops/s
Iteration   2: 495,994 ops/s
Iteration   3: 494,420 ops/s
Iteration   4: 502,871 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
505,982 ops/s


Result "testPingPong16":
  440,037 Â±(99.9%) 94,696 ops/s [Average]
  (min, avg, max) = (379,233, 440,037, 505,982), stdev = 62,636
  CI (99.9%): [345,341, 534,733] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong32
# Parameters: (strategy = a-sync-block)

# Run progress: 66,67% complete, ETA 04:04:32
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
355,898 ops/s
# Warmup Iteration   2: 348,205 ops/s
# Warmup Iteration   3: 317,154 ops/s
Iteration   1: 315,241 ops/s
Iteration   2: 310,905 ops/s
Iteration   3: 310,820 ops/s
Iteration   4: 310,137 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1566934368, numSharedTasksExecuted=155347, numSteals=2620902, numExceptions=0, numParks=1610186, numFalseAlarmUnparks=351025, numSharedQueueSwitches=0, numLocalSubmits=1566768840, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1598103405, numSharedTasksExecuted=154746, numSteals=2380945, numExceptions=0, numParks=1486925, numFalseAlarmUnparks=317522, numSharedQueueSwitches=1, numLocalSubmits=1597934946, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1590223624, numSharedTasksExecuted=156276, numSteals=1737953, numExceptions=0, numParks=1390172, numFalseAlarmUnparks=377582, numSharedQueueSwitches=1, numLocalSubmits=1590060460, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=839198702, numSharedTasksExecuted=77905, numSteals=2175865, numExceptions=0, numParks=1448443, numFalseAlarmUnparks=326031, numSharedQueueSwitches=1, numLocalSubmits=839120552, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1172980821, numSharedTasksExecuted=125349, numSteals=1878311, numExceptions=0, numParks=1186812, numFalseAlarmUnparks=260491, numSharedQueueSwitches=1, numLocalSubmits=1172863113, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=915679389, numSharedTasksExecuted=102328, numSteals=1645437, numExceptions=0, numParks=1100502, numFalseAlarmUnparks=286800, numSharedQueueSwitches=1, numLocalSubmits=915587946, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1484216455, numSharedTasksExecuted=146662, numSteals=1470383, numExceptions=0, numParks=917895, numFalseAlarmUnparks=225924, numSharedQueueSwitches=1, numLocalSubmits=1484076095, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1440343244, numSharedTasksExecuted=142163, numSteals=1286128, numExceptions=0, numParks=792183, numFalseAlarmUnparks=197670, numSharedQueueSwitches=1, numLocalSubmits=1440207280, approximateLocalQueueSize=0}
--------------------------------
308,005 ops/s

# Run progress: 66,90% complete, ETA 04:02:53
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
271,044 ops/s
# Warmup Iteration   2: 288,617 ops/s
# Warmup Iteration   3: 272,729 ops/s
Iteration   1: 275,263 ops/s
Iteration   2: 274,275 ops/s
Iteration   3: 273,356 ops/s
Iteration   4: 272,986 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2542540840, numSharedTasksExecuted=247134, numSteals=1620753, numExceptions=0, numParks=924375, numFalseAlarmUnparks=195814, numSharedQueueSwitches=0, numLocalSubmits=2542274603, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=777518887, numSharedTasksExecuted=78666, numSteals=1863196, numExceptions=0, numParks=1052339, numFalseAlarmUnparks=231621, numSharedQueueSwitches=1, numLocalSubmits=777435171, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=567704585, numSharedTasksExecuted=59426, numSteals=2011475, numExceptions=0, numParks=1116394, numFalseAlarmUnparks=247426, numSharedQueueSwitches=1, numLocalSubmits=567649801, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2567906260, numSharedTasksExecuted=246446, numSteals=1309871, numExceptions=0, numParks=711914, numFalseAlarmUnparks=156069, numSharedQueueSwitches=1, numLocalSubmits=2567640867, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=819126883, numSharedTasksExecuted=84743, numSteals=1605799, numExceptions=0, numParks=819688, numFalseAlarmUnparks=189669, numSharedQueueSwitches=1, numLocalSubmits=819046463, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=852344686, numSharedTasksExecuted=90108, numSteals=1492477, numExceptions=0, numParks=739269, numFalseAlarmUnparks=171700, numSharedQueueSwitches=1, numLocalSubmits=852259713, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=544390363, numSharedTasksExecuted=59070, numSteals=1499453, numExceptions=0, numParks=733551, numFalseAlarmUnparks=172042, numSharedQueueSwitches=1, numLocalSubmits=544345668, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=630547504, numSharedTasksExecuted=64623, numSteals=1360230, numExceptions=0, numParks=646018, numFalseAlarmUnparks=148020, numSharedQueueSwitches=1, numLocalSubmits=630497506, approximateLocalQueueSize=0}
--------------------------------
274,050 ops/s


Result "testPingPong32":
  292,504 Â±(99.9%) 29,643 ops/s [Average]
  (min, avg, max) = (272,986, 292,504, 315,241), stdev = 19,607
  CI (99.9%): [262,861, 322,147] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong32
# Parameters: (strategy = a-sync-nocheck)

# Run progress: 67,13% complete, ETA 04:01:13
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
199,623 ops/s
# Warmup Iteration   2: 209,099 ops/s
# Warmup Iteration   3: 200,936 ops/s
Iteration   1: 195,482 ops/s
Iteration   2: 192,464 ops/s
Iteration   3: 192,423 ops/s
Iteration   4: 193,594 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1146153680, numSharedTasksExecuted=110867, numSteals=2118523, numExceptions=0, numParks=907895, numFalseAlarmUnparks=181661, numSharedQueueSwitches=0, numLocalSubmits=1146033961, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=675063323, numSharedTasksExecuted=66104, numSteals=2236187, numExceptions=0, numParks=973206, numFalseAlarmUnparks=192966, numSharedQueueSwitches=1, numLocalSubmits=674994247, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=791689250, numSharedTasksExecuted=78564, numSteals=2042459, numExceptions=0, numParks=850704, numFalseAlarmUnparks=165751, numSharedQueueSwitches=1, numLocalSubmits=791605709, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=544325193, numSharedTasksExecuted=60080, numSteals=2034064, numExceptions=0, numParks=859627, numFalseAlarmUnparks=180626, numSharedQueueSwitches=1, numLocalSubmits=544271568, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=497052355, numSharedTasksExecuted=54420, numSteals=1714936, numExceptions=0, numParks=710261, numFalseAlarmUnparks=153743, numSharedQueueSwitches=1, numLocalSubmits=497002228, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1078856459, numSharedTasksExecuted=105595, numSteals=1357537, numExceptions=0, numParks=515798, numFalseAlarmUnparks=109221, numSharedQueueSwitches=1, numLocalSubmits=1078750203, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=839147398, numSharedTasksExecuted=83778, numSteals=1328822, numExceptions=0, numParks=505802, numFalseAlarmUnparks=111014, numSharedQueueSwitches=1, numLocalSubmits=839068313, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1004032350, numSharedTasksExecuted=98232, numSteals=883044, numExceptions=0, numParks=418709, numFalseAlarmUnparks=98255, numSharedQueueSwitches=1, numLocalSubmits=1003936139, approximateLocalQueueSize=0}
--------------------------------
192,422 ops/s

# Run progress: 67,36% complete, ETA 03:59:34
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
409,226 ops/s
# Warmup Iteration   2: 427,693 ops/s
# Warmup Iteration   3: 437,422 ops/s
Iteration   1: 421,405 ops/s
Iteration   2: 418,329 ops/s
Iteration   3: 425,812 ops/s
Iteration   4: 421,625 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2377953606, numSharedTasksExecuted=232052, numSteals=2312279, numExceptions=0, numParks=1397623, numFalseAlarmUnparks=295103, numSharedQueueSwitches=0, numLocalSubmits=2377698521, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2391067746, numSharedTasksExecuted=231743, numSteals=2110487, numExceptions=0, numParks=1328947, numFalseAlarmUnparks=282574, numSharedQueueSwitches=1, numLocalSubmits=2390810719, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2347499042, numSharedTasksExecuted=226392, numSteals=1923411, numExceptions=0, numParks=1235468, numFalseAlarmUnparks=259112, numSharedQueueSwitches=1, numLocalSubmits=2347248433, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1150225374, numSharedTasksExecuted=116674, numSteals=1837286, numExceptions=0, numParks=1118317, numFalseAlarmUnparks=258972, numSharedQueueSwitches=1, numLocalSubmits=1150114487, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2231467144, numSharedTasksExecuted=221107, numSteals=1389270, numExceptions=0, numParks=947055, numFalseAlarmUnparks=244319, numSharedQueueSwitches=1, numLocalSubmits=2231249731, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1962165242, numSharedTasksExecuted=200584, numSteals=1569642, numExceptions=0, numParks=859840, numFalseAlarmUnparks=204248, numSharedQueueSwitches=1, numLocalSubmits=1961979442, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1014461071, numSharedTasksExecuted=109470, numSteals=1322393, numExceptions=0, numParks=743547, numFalseAlarmUnparks=183533, numSharedQueueSwitches=1, numLocalSubmits=1014371743, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=825640783, numSharedTasksExecuted=92034, numSteals=1411057, numExceptions=0, numParks=751041, numFalseAlarmUnparks=189593, numSharedQueueSwitches=1, numLocalSubmits=825576876, approximateLocalQueueSize=0}
--------------------------------
419,632 ops/s


Result "testPingPong32":
  307,319 Â±(99.9%) 181,768 ops/s [Average]
  (min, avg, max) = (192,422, 307,319, 425,812), stdev = 120,229
  CI (99.9%): [125,550, 489,087] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong32
# Parameters: (strategy = a-lock-block)

# Run progress: 67,59% complete, ETA 03:57:54
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
254,490 ops/s
# Warmup Iteration   2: 250,447 ops/s
# Warmup Iteration   3: 233,849 ops/s
Iteration   1: 236,669 ops/s
Iteration   2: 234,191 ops/s
Iteration   3: 232,927 ops/s
Iteration   4: 232,889 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2047416771, numSharedTasksExecuted=194888, numSteals=2751779, numExceptions=0, numParks=1131045, numFalseAlarmUnparks=210704, numSharedQueueSwitches=0, numLocalSubmits=2047200838, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=660908101, numSharedTasksExecuted=72727, numSteals=2834107, numExceptions=0, numParks=1220189, numFalseAlarmUnparks=230253, numSharedQueueSwitches=1, numLocalSubmits=660837104, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=504393352, numSharedTasksExecuted=51315, numSteals=2278252, numExceptions=0, numParks=1144299, numFalseAlarmUnparks=254701, numSharedQueueSwitches=1, numLocalSubmits=504344199, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2017481414, numSharedTasksExecuted=192847, numSteals=2185699, numExceptions=0, numParks=933305, numFalseAlarmUnparks=188099, numSharedQueueSwitches=1, numLocalSubmits=2017276413, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=748631548, numSharedTasksExecuted=75621, numSteals=2231559, numExceptions=0, numParks=886483, numFalseAlarmUnparks=180401, numSharedQueueSwitches=1, numLocalSubmits=748559268, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=787255174, numSharedTasksExecuted=79818, numSteals=1991824, numExceptions=0, numParks=816733, numFalseAlarmUnparks=171257, numSharedQueueSwitches=1, numLocalSubmits=787181106, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=558911087, numSharedTasksExecuted=57160, numSteals=2055394, numExceptions=0, numParks=779946, numFalseAlarmUnparks=152827, numSharedQueueSwitches=1, numLocalSubmits=558863770, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=635002561, numSharedTasksExecuted=71632, numSteals=1700205, numExceptions=0, numParks=626120, numFalseAlarmUnparks=120649, numSharedQueueSwitches=1, numLocalSubmits=634941302, approximateLocalQueueSize=0}
--------------------------------
232,952 ops/s

# Run progress: 67,82% complete, ETA 03:56:14
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
218,299 ops/s
# Warmup Iteration   2: 192,146 ops/s
# Warmup Iteration   3: 177,056 ops/s
Iteration   1: 178,626 ops/s
Iteration   2: 173,302 ops/s
Iteration   3: 173,125 ops/s
Iteration   4: 173,558 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1092828785, numSharedTasksExecuted=107490, numSteals=1166829, numExceptions=0, numParks=745721, numFalseAlarmUnparks=179022, numSharedQueueSwitches=0, numLocalSubmits=1092714558, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=979289117, numSharedTasksExecuted=94647, numSteals=1523406, numExceptions=0, numParks=755609, numFalseAlarmUnparks=176337, numSharedQueueSwitches=1, numLocalSubmits=979185474, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=836560914, numSharedTasksExecuted=83384, numSteals=1638151, numExceptions=0, numParks=794770, numFalseAlarmUnparks=179352, numSharedQueueSwitches=1, numLocalSubmits=836473358, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=640689600, numSharedTasksExecuted=62315, numSteals=1585328, numExceptions=0, numParks=746519, numFalseAlarmUnparks=176302, numSharedQueueSwitches=1, numLocalSubmits=640627198, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=508716927, numSharedTasksExecuted=55598, numSteals=1430325, numExceptions=0, numParks=684037, numFalseAlarmUnparks=166506, numSharedQueueSwitches=1, numLocalSubmits=508667392, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=659374755, numSharedTasksExecuted=66353, numSteals=1333381, numExceptions=0, numParks=584989, numFalseAlarmUnparks=137959, numSharedQueueSwitches=1, numLocalSubmits=659311563, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=649908973, numSharedTasksExecuted=65598, numSteals=1164114, numExceptions=0, numParks=519418, numFalseAlarmUnparks=128893, numSharedQueueSwitches=1, numLocalSubmits=649846113, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=582390937, numSharedTasksExecuted=59599, numSteals=1214198, numExceptions=0, numParks=520625, numFalseAlarmUnparks=120945, numSharedQueueSwitches=1, numLocalSubmits=582339368, approximateLocalQueueSize=0}
--------------------------------
172,006 ops/s


Result "testPingPong32":
  204,024 Â±(99.9%) 47,751 ops/s [Average]
  (min, avg, max) = (172,006, 204,024, 236,669), stdev = 31,584
  CI (99.9%): [156,273, 251,775] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong32
# Parameters: (strategy = a-nonblocking)

# Run progress: 68,06% complete, ETA 03:54:35
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
442,925 ops/s
# Warmup Iteration   2: 456,506 ops/s
# Warmup Iteration   3: 450,118 ops/s
Iteration   1: 438,168 ops/s
Iteration   2: 439,145 ops/s
Iteration   3: 438,589 ops/s
Iteration   4: 438,125 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2429337896, numSharedTasksExecuted=235795, numSteals=1751324, numExceptions=0, numParks=1450797, numFalseAlarmUnparks=343841, numSharedQueueSwitches=0, numLocalSubmits=2429087562, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1679287976, numSharedTasksExecuted=156924, numSteals=1660911, numExceptions=0, numParks=1391808, numFalseAlarmUnparks=324779, numSharedQueueSwitches=1, numLocalSubmits=1679105392, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2415741742, numSharedTasksExecuted=234234, numSteals=1555758, numExceptions=0, numParks=1292377, numFalseAlarmUnparks=291407, numSharedQueueSwitches=1, numLocalSubmits=2415492527, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2372700332, numSharedTasksExecuted=233345, numSteals=1238624, numExceptions=0, numParks=965285, numFalseAlarmUnparks=262022, numSharedQueueSwitches=1, numLocalSubmits=2372464617, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=661285202, numSharedTasksExecuted=87632, numSteals=1594092, numExceptions=0, numParks=1663033, numFalseAlarmUnparks=713281, numSharedQueueSwitches=1, numLocalSubmits=661218234, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2301434223, numSharedTasksExecuted=228078, numSteals=992234, numExceptions=0, numParks=717319, numFalseAlarmUnparks=200753, numSharedQueueSwitches=1, numLocalSubmits=2301211254, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=907474434, numSharedTasksExecuted=102660, numSteals=1085627, numExceptions=0, numParks=897586, numFalseAlarmUnparks=316612, numSharedQueueSwitches=1, numLocalSubmits=907396390, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2130338203, numSharedTasksExecuted=211100, numSteals=754918, numExceptions=0, numParks=515270, numFalseAlarmUnparks=143959, numSharedQueueSwitches=1, numLocalSubmits=2130134264, approximateLocalQueueSize=0}
--------------------------------
438,578 ops/s

# Run progress: 68,29% complete, ETA 03:52:55
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
378,667 ops/s
# Warmup Iteration   2: 352,046 ops/s
# Warmup Iteration   3: 351,438 ops/s
Iteration   1: 356,770 ops/s
Iteration   2: 355,546 ops/s
Iteration   3: 355,498 ops/s
Iteration   4: 355,421 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2264185227, numSharedTasksExecuted=223568, numSteals=1548483, numExceptions=0, numParks=1165380, numFalseAlarmUnparks=275215, numSharedQueueSwitches=0, numLocalSubmits=2263948242, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2185942870, numSharedTasksExecuted=214719, numSteals=1543746, numExceptions=0, numParks=1157703, numFalseAlarmUnparks=273875, numSharedQueueSwitches=1, numLocalSubmits=2185713798, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=991423538, numSharedTasksExecuted=93798, numSteals=1706056, numExceptions=0, numParks=1320138, numFalseAlarmUnparks=341134, numSharedQueueSwitches=1, numLocalSubmits=991322989, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2175312677, numSharedTasksExecuted=214828, numSteals=1268404, numExceptions=0, numParks=917555, numFalseAlarmUnparks=229120, numSharedQueueSwitches=1, numLocalSubmits=2175092471, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2183572899, numSharedTasksExecuted=215702, numSteals=1207576, numExceptions=0, numParks=854681, numFalseAlarmUnparks=219390, numSharedQueueSwitches=1, numLocalSubmits=2183354627, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=900877110, numSharedTasksExecuted=87736, numSteals=1292332, numExceptions=0, numParks=976586, numFalseAlarmUnparks=292852, numSharedQueueSwitches=1, numLocalSubmits=900800968, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=505314450, numSharedTasksExecuted=72024, numSteals=1491752, numExceptions=0, numParks=1244574, numFalseAlarmUnparks=453801, numSharedQueueSwitches=1, numLocalSubmits=505266778, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=869211237, numSharedTasksExecuted=85217, numSteals=1073238, numExceptions=0, numParks=706766, numFalseAlarmUnparks=199291, numSharedQueueSwitches=1, numLocalSubmits=869132543, approximateLocalQueueSize=0}
--------------------------------
355,223 ops/s


Result "testPingPong32":
  397,106 Â±(99.9%) 66,004 ops/s [Average]
  (min, avg, max) = (355,223, 397,106, 439,145), stdev = 43,658
  CI (99.9%): [331,102, 463,111] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong32
# Parameters: (strategy = no-conc)

# Run progress: 68,52% complete, ETA 03:51:15
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
<failure>

java.lang.StackOverflowError
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)



# Run progress: 68,75% complete, ETA 03:48:47
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
<failure>

java.lang.StackOverflowError
	at benchmark.PoolBenchmark$PingPongActor$$Lambda$2/1789253429.<init>(Unknown Source)
	at benchmark.PoolBenchmark$PingPongActor$$Lambda$2/1789253429.get$Lambda(Unknown Source)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)
	at com.ajjpj.concurrent.pool.api.AThreadPool$2.submit(AThreadPool.java:19)
	at com.ajjpj.concurrent.pool.api.AThreadPoolWithAdmin$1.submit(AThreadPoolWithAdmin.java:39)
	at benchmark.AThreadPoolAdapter.submit(AThreadPoolAdapter.java:17)
	at benchmark.PoolBenchmark$PingPongActor.receive(PoolBenchmark.java:356)
	at benchmark.PoolBenchmark$PingPongActor.lambda$receive$13(PoolBenchmark.java:356)




# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong32
# Parameters: (strategy = ForkJoinLifo)

# Run progress: 68,98% complete, ETA 03:46:21
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
248,664 ops/s
# Warmup Iteration   2: 271,826 ops/s
# Warmup Iteration   3: 258,976 ops/s
Iteration   1: 252,098 ops/s
Iteration   2: 248,308 ops/s
Iteration   3: 248,042 ops/s
Iteration   4: 248,168 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
247,691 ops/s

# Run progress: 69,21% complete, ETA 03:44:42
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
244,933 ops/s
# Warmup Iteration   2: 245,291 ops/s
# Warmup Iteration   3: 240,346 ops/s
Iteration   1: 240,029 ops/s
Iteration   2: 239,365 ops/s
Iteration   3: 239,862 ops/s
Iteration   4: 239,849 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
239,723 ops/s


Result "testPingPong32":
  244,313 Â±(99.9%) 7,481 ops/s [Average]
  (min, avg, max) = (239,365, 244,313, 252,098), stdev = 4,948
  CI (99.9%): [236,832, 251,795] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong32
# Parameters: (strategy = J9FjSharedQueues)

# Run progress: 69,44% complete, ETA 03:43:03
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
56,403 ops/s
# Warmup Iteration   2: 60,746 ops/s
# Warmup Iteration   3: 58,514 ops/s
Iteration   1: 55,820 ops/s
Iteration   2: 54,861 ops/s
Iteration   3: 54,975 ops/s
Iteration   4: 54,816 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
54,509 ops/s

# Run progress: 69,68% complete, ETA 03:41:24
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
55,882 ops/s
# Warmup Iteration   2: 58,174 ops/s
# Warmup Iteration   3: 56,438 ops/s
Iteration   1: 53,801 ops/s
Iteration   2: 52,730 ops/s
Iteration   3: 52,979 ops/s
Iteration   4: 52,774 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
52,839 ops/s


Result "testPingPong32":
  54,011 Â±(99.9%) 1,707 ops/s [Average]
  (min, avg, max) = (52,730, 54,011, 55,820), stdev = 1,129
  CI (99.9%): [52,304, 55,718] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong32
# Parameters: (strategy = J9FjLifo)

# Run progress: 69,91% complete, ETA 03:39:45
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
215,620 ops/s
# Warmup Iteration   2: 223,636 ops/s
# Warmup Iteration   3: 217,976 ops/s
Iteration   1: 216,987 ops/s
Iteration   2: 217,348 ops/s
Iteration   3: 218,676 ops/s
Iteration   4: 216,929 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
218,183 ops/s

# Run progress: 70,14% complete, ETA 03:38:06
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
193,094 ops/s
# Warmup Iteration   2: 198,787 ops/s
# Warmup Iteration   3: 193,268 ops/s
Iteration   1: 190,164 ops/s
Iteration   2: 191,243 ops/s
Iteration   3: 191,560 ops/s
Iteration   4: 191,832 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
191,589 ops/s


Result "testPingPong32":
  204,451 Â±(99.9%) 21,019 ops/s [Average]
  (min, avg, max) = (190,164, 204,451, 218,676), stdev = 13,902
  CI (99.9%): [183,432, 225,469] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testPingPong32
# Parameters: (strategy = J9FjFifo)

# Run progress: 70,37% complete, ETA 03:36:26
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
213,223 ops/s
# Warmup Iteration   2: 208,667 ops/s
# Warmup Iteration   3: 205,435 ops/s
Iteration   1: 206,132 ops/s
Iteration   2: 206,186 ops/s
Iteration   3: 206,298 ops/s
Iteration   4: 206,694 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
205,882 ops/s

# Run progress: 70,60% complete, ETA 03:34:47
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
201,428 ops/s
# Warmup Iteration   2: 202,488 ops/s
# Warmup Iteration   3: 197,124 ops/s
Iteration   1: 194,009 ops/s
Iteration   2: 193,878 ops/s
Iteration   3: 194,208 ops/s
Iteration   4: 193,983 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
194,146 ops/s


Result "testPingPong32":
  200,142 Â±(99.9%) 9,722 ops/s [Average]
  (min, avg, max) = (193,878, 200,142, 206,694), stdev = 6,430
  CI (99.9%): [190,420, 209,863] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testRecursiveFibo
# Parameters: (strategy = a-sync-block)

# Run progress: 70,83% complete, ETA 03:33:08
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
2210,086 ops/s
# Warmup Iteration   2: 2267,078 ops/s
# Warmup Iteration   3: 2274,915 ops/s
Iteration   1: 2301,003 ops/s
Iteration   2: 2290,621 ops/s
Iteration   3: 2286,049 ops/s
Iteration   4: 2295,696 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=485587, numSharedTasksExecuted=485559, numSteals=28, numExceptions=0, numParks=485545, numFalseAlarmUnparks=0, numSharedQueueSwitches=0, numLocalSubmits=971170, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=971162, numSharedTasksExecuted=5, numSteals=971157, numExceptions=0, numParks=971138, numFalseAlarmUnparks=28, numSharedQueueSwitches=1, numLocalSubmits=1942320, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1942350, numSharedTasksExecuted=2, numSteals=1942348, numExceptions=0, numParks=1942278, numFalseAlarmUnparks=33, numSharedQueueSwitches=1, numLocalSubmits=3884546, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=3884438, numSharedTasksExecuted=1, numSteals=3884437, numExceptions=0, numParks=3884523, numFalseAlarmUnparks=276, numSharedQueueSwitches=1, numLocalSubmits=5341094, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=5339835, numSharedTasksExecuted=8, numSteals=5339827, numExceptions=0, numParks=6554826, numFalseAlarmUnparks=1215219, numSharedQueueSwitches=1, numLocalSubmits=2913366, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2913196, numSharedTasksExecuted=1, numSteals=2913195, numExceptions=0, numParks=6796292, numFalseAlarmUnparks=3883216, numSharedQueueSwitches=1, numLocalSubmits=485678, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=462060, numSharedTasksExecuted=1, numSteals=462059, numExceptions=0, numParks=3154487, numFalseAlarmUnparks=2692456, numSharedQueueSwitches=1, numLocalSubmits=66, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=25190, numSharedTasksExecuted=1, numSteals=25189, numExceptions=0, numParks=460530, numFalseAlarmUnparks=435341, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
--------------------------------
2290,321 ops/s

# Run progress: 71,06% complete, ETA 03:31:28
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
2191,212 ops/s
# Warmup Iteration   2: 2224,007 ops/s
# Warmup Iteration   3: 2275,029 ops/s
Iteration   1: 2287,503 ops/s
Iteration   2: 2275,789 ops/s
Iteration   3: 2264,447 ops/s
Iteration   4: 2279,381 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=481995, numSharedTasksExecuted=481971, numSteals=24, numExceptions=0, numParks=481952, numFalseAlarmUnparks=0, numSharedQueueSwitches=0, numLocalSubmits=963982, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=963983, numSharedTasksExecuted=5, numSteals=963978, numExceptions=0, numParks=963952, numFalseAlarmUnparks=13, numSharedQueueSwitches=1, numLocalSubmits=1927962, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1927990, numSharedTasksExecuted=1, numSteals=1927989, numExceptions=0, numParks=1927914, numFalseAlarmUnparks=29, numSharedQueueSwitches=1, numLocalSubmits=3855824, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=3855738, numSharedTasksExecuted=1, numSteals=3855737, numExceptions=0, numParks=3855837, numFalseAlarmUnparks=281, numSharedQueueSwitches=1, numLocalSubmits=5301620, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=5300666, numSharedTasksExecuted=7, numSteals=5300659, numExceptions=0, numParks=6506342, numFalseAlarmUnparks=1205915, numSharedQueueSwitches=1, numLocalSubmits=2891806, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2891183, numSharedTasksExecuted=1, numSteals=2891182, numExceptions=0, numParks=6746368, numFalseAlarmUnparks=3855306, numSharedQueueSwitches=1, numLocalSubmits=482090, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=451619, numSharedTasksExecuted=1, numSteals=451618, numExceptions=0, numParks=3130981, numFalseAlarmUnparks=2679385, numSharedQueueSwitches=1, numLocalSubmits=74, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=32174, numSharedTasksExecuted=1, numSteals=32173, numExceptions=0, numParks=449971, numFalseAlarmUnparks=417797, numSharedQueueSwitches=1, numLocalSubmits=2, approximateLocalQueueSize=0}
--------------------------------
2273,092 ops/s


Result "testRecursiveFibo":
  2284,390 Â±(99.9%) 16,825 ops/s [Average]
  (min, avg, max) = (2264,447, 2284,390, 2301,003), stdev = 11,129
  CI (99.9%): [2267,565, 2301,216] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testRecursiveFibo
# Parameters: (strategy = a-sync-nocheck)

# Run progress: 71,30% complete, ETA 03:29:49
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
2224,970 ops/s
# Warmup Iteration   2: 2270,779 ops/s
# Warmup Iteration   3: 2247,400 ops/s
Iteration   1: 2284,923 ops/s
Iteration   2: 2276,607 ops/s
Iteration   3: 2265,954 ops/s
Iteration   4: 2279,148 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=482018, numSharedTasksExecuted=481983, numSteals=35, numExceptions=0, numParks=481983, numFalseAlarmUnparks=1, numSharedQueueSwitches=0, numLocalSubmits=964032, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=964026, numSharedTasksExecuted=7, numSteals=964019, numExceptions=0, numParks=963990, numFalseAlarmUnparks=15, numSharedQueueSwitches=1, numLocalSubmits=1928040, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1928071, numSharedTasksExecuted=2, numSteals=1928069, numExceptions=0, numParks=1927996, numFalseAlarmUnparks=25, numSharedQueueSwitches=1, numLocalSubmits=3855980, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=3855855, numSharedTasksExecuted=2, numSteals=3855853, numExceptions=0, numParks=3856010, numFalseAlarmUnparks=356, numSharedQueueSwitches=1, numLocalSubmits=5301772, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=5300521, numSharedTasksExecuted=9, numSteals=5300512, numExceptions=0, numParks=6506546, numFalseAlarmUnparks=1206228, numSharedQueueSwitches=1, numLocalSubmits=2891896, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2891474, numSharedTasksExecuted=1, numSteals=2891473, numExceptions=0, numParks=6746276, numFalseAlarmUnparks=3854897, numSharedQueueSwitches=1, numLocalSubmits=482128, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=458735, numSharedTasksExecuted=1, numSteals=458734, numExceptions=0, numParks=3130957, numFalseAlarmUnparks=2672239, numSharedQueueSwitches=1, numLocalSubmits=88, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=25242, numSharedTasksExecuted=1, numSteals=25241, numExceptions=0, numParks=456895, numFalseAlarmUnparks=431655, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
--------------------------------
2268,707 ops/s

# Run progress: 71,53% complete, ETA 03:28:10
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
2246,095 ops/s
# Warmup Iteration   2: 2280,746 ops/s
# Warmup Iteration   3: 2292,557 ops/s
Iteration   1: 2280,958 ops/s
Iteration   2: 2288,650 ops/s
Iteration   3: 2288,638 ops/s
Iteration   4: 2286,264 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=484020, numSharedTasksExecuted=484003, numSteals=17, numExceptions=0, numParks=483974, numFalseAlarmUnparks=0, numSharedQueueSwitches=0, numLocalSubmits=968038, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=968044, numSharedTasksExecuted=4, numSteals=968040, numExceptions=0, numParks=968000, numFalseAlarmUnparks=16, numSharedQueueSwitches=1, numLocalSubmits=1936084, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1936087, numSharedTasksExecuted=1, numSteals=1936086, numExceptions=0, numParks=1936014, numFalseAlarmUnparks=23, numSharedQueueSwitches=1, numLocalSubmits=3872068, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=3871961, numSharedTasksExecuted=2, numSteals=3871959, numExceptions=0, numParks=3872042, numFalseAlarmUnparks=273, numSharedQueueSwitches=1, numLocalSubmits=5323940, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=5323113, numSharedTasksExecuted=5, numSteals=5323108, numExceptions=0, numParks=6533789, numFalseAlarmUnparks=1210905, numSharedQueueSwitches=1, numLocalSubmits=2903956, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2903101, numSharedTasksExecuted=1, numSteals=2903100, numExceptions=0, numParks=6774834, numFalseAlarmUnparks=3871838, numSharedQueueSwitches=1, numLocalSubmits=484122, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=451645, numSharedTasksExecuted=1, numSteals=451644, numExceptions=0, numParks=3143923, numFalseAlarmUnparks=2692307, numSharedQueueSwitches=1, numLocalSubmits=112, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=34367, numSharedTasksExecuted=1, numSteals=34366, numExceptions=0, numParks=449801, numFalseAlarmUnparks=415437, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
--------------------------------
2273,466 ops/s


Result "testRecursiveFibo":
  2279,331 Â±(99.9%) 12,232 ops/s [Average]
  (min, avg, max) = (2265,954, 2279,331, 2288,650), stdev = 8,091
  CI (99.9%): [2267,100, 2291,563] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testRecursiveFibo
# Parameters: (strategy = a-lock-block)

# Run progress: 71,76% complete, ETA 03:26:30
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
2237,613 ops/s
# Warmup Iteration   2: 2325,192 ops/s
# Warmup Iteration   3: 2294,110 ops/s
Iteration   1: 2300,817 ops/s
Iteration   2: 2298,404 ops/s
Iteration   3: 2297,765 ops/s
Iteration   4: 2283,271 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=485999, numSharedTasksExecuted=485974, numSteals=25, numExceptions=0, numParks=485957, numFalseAlarmUnparks=0, numSharedQueueSwitches=0, numLocalSubmits=971992, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=971993, numSharedTasksExecuted=6, numSteals=971987, numExceptions=0, numParks=971967, numFalseAlarmUnparks=30, numSharedQueueSwitches=1, numLocalSubmits=1943968, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1943982, numSharedTasksExecuted=1, numSteals=1943981, numExceptions=0, numParks=1943931, numFalseAlarmUnparks=44, numSharedQueueSwitches=1, numLocalSubmits=3887834, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=3887721, numSharedTasksExecuted=1, numSteals=3887720, numExceptions=0, numParks=3887793, numFalseAlarmUnparks=311, numSharedQueueSwitches=1, numLocalSubmits=5345608, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=5344639, numSharedTasksExecuted=5, numSteals=5344634, numExceptions=0, numParks=6560390, numFalseAlarmUnparks=1215993, numSharedQueueSwitches=1, numLocalSubmits=2915808, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2915353, numSharedTasksExecuted=1, numSteals=2915352, numExceptions=0, numParks=6802229, numFalseAlarmUnparks=3886986, numSharedQueueSwitches=1, numLocalSubmits=486116, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=457164, numSharedTasksExecuted=1, numSteals=457163, numExceptions=0, numParks=3156782, numFalseAlarmUnparks=2699644, numSharedQueueSwitches=1, numLocalSubmits=98, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=30563, numSharedTasksExecuted=1, numSteals=30562, numExceptions=0, numParks=455626, numFalseAlarmUnparks=425064, numSharedQueueSwitches=1, numLocalSubmits=0, approximateLocalQueueSize=0}
--------------------------------
2283,308 ops/s

# Run progress: 71,99% complete, ETA 03:24:51
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
2188,828 ops/s
# Warmup Iteration   2: 2233,072 ops/s
# Warmup Iteration   3: 2249,614 ops/s
Iteration   1: 2229,315 ops/s
Iteration   2: 2224,363 ops/s
Iteration   3: 2237,388 ops/s
Iteration   4: 2235,881 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=473229, numSharedTasksExecuted=473206, numSteals=23, numExceptions=0, numParks=473193, numFalseAlarmUnparks=0, numSharedQueueSwitches=0, numLocalSubmits=946456, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=946458, numSharedTasksExecuted=3, numSteals=946455, numExceptions=0, numParks=946407, numFalseAlarmUnparks=11, numSharedQueueSwitches=1, numLocalSubmits=1892914, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1892935, numSharedTasksExecuted=2, numSteals=1892933, numExceptions=0, numParks=1892871, numFalseAlarmUnparks=39, numSharedQueueSwitches=1, numLocalSubmits=3785698, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=3785636, numSharedTasksExecuted=1, numSteals=3785635, numExceptions=0, numParks=3785728, numFalseAlarmUnparks=279, numSharedQueueSwitches=1, numLocalSubmits=5205192, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=5204829, numSharedTasksExecuted=9, numSteals=5204820, numExceptions=0, numParks=6388212, numFalseAlarmUnparks=1183592, numSharedQueueSwitches=1, numLocalSubmits=2838880, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2837976, numSharedTasksExecuted=1, numSteals=2837975, numExceptions=0, numParks=6624058, numFalseAlarmUnparks=3786181, numSharedQueueSwitches=1, numLocalSubmits=473336, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=458595, numSharedTasksExecuted=1, numSteals=458594, numExceptions=0, numParks=3073842, numFalseAlarmUnparks=2615295, numSharedQueueSwitches=1, numLocalSubmits=432, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=16478, numSharedTasksExecuted=1, numSteals=16477, numExceptions=0, numParks=456897, numFalseAlarmUnparks=440419, numSharedQueueSwitches=1, numLocalSubmits=4, approximateLocalQueueSize=0}
--------------------------------
2235,952 ops/s


Result "testRecursiveFibo":
  2262,646 Â±(99.9%) 49,028 ops/s [Average]
  (min, avg, max) = (2224,363, 2262,646, 2300,817), stdev = 32,429
  CI (99.9%): [2213,618, 2311,675] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testRecursiveFibo
# Parameters: (strategy = a-nonblocking)

# Run progress: 72,22% complete, ETA 03:23:11
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
2248,525 ops/s
# Warmup Iteration   2: 2291,235 ops/s
# Warmup Iteration   3: 2253,906 ops/s
Iteration   1: 2294,841 ops/s
Iteration   2: 2283,292 ops/s
Iteration   3: 2270,253 ops/s
Iteration   4: 2271,655 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=483190, numSharedTasksExecuted=483174, numSteals=16, numExceptions=0, numParks=483151, numFalseAlarmUnparks=1, numSharedQueueSwitches=0, numLocalSubmits=966378, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=966378, numSharedTasksExecuted=4, numSteals=966374, numExceptions=0, numParks=966350, numFalseAlarmUnparks=27, numSharedQueueSwitches=1, numLocalSubmits=1932748, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1932767, numSharedTasksExecuted=1, numSteals=1932766, numExceptions=0, numParks=1932693, numFalseAlarmUnparks=33, numSharedQueueSwitches=1, numLocalSubmits=3865426, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=3865283, numSharedTasksExecuted=2, numSteals=3865281, numExceptions=0, numParks=3865378, numFalseAlarmUnparks=280, numSharedQueueSwitches=1, numLocalSubmits=5314842, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=5313757, numSharedTasksExecuted=3, numSteals=5313754, numExceptions=0, numParks=6522589, numFalseAlarmUnparks=1209093, numSharedQueueSwitches=1, numLocalSubmits=2899004, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2897891, numSharedTasksExecuted=2, numSteals=2897889, numExceptions=0, numParks=6762943, numFalseAlarmUnparks=3865170, numSharedQueueSwitches=1, numLocalSubmits=483276, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=450404, numSharedTasksExecuted=1, numSteals=450403, numExceptions=0, numParks=3137945, numFalseAlarmUnparks=2687564, numSharedQueueSwitches=1, numLocalSubmits=84, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=35278, numSharedTasksExecuted=1, numSteals=35277, numExceptions=0, numParks=448064, numFalseAlarmUnparks=412786, numSharedQueueSwitches=1, numLocalSubmits=2, approximateLocalQueueSize=0}
--------------------------------
2279,768 ops/s

# Run progress: 72,45% complete, ETA 03:21:31
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
2256,829 ops/s
# Warmup Iteration   2: 2296,535 ops/s
# Warmup Iteration   3: 2291,847 ops/s
Iteration   1: 2285,631 ops/s
Iteration   2: 2289,607 ops/s
Iteration   3: 2268,913 ops/s
Iteration   4: 2290,847 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=483688, numSharedTasksExecuted=483674, numSteals=14, numExceptions=0, numParks=483658, numFalseAlarmUnparks=0, numSharedQueueSwitches=0, numLocalSubmits=967374, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=967366, numSharedTasksExecuted=5, numSteals=967361, numExceptions=0, numParks=967333, numFalseAlarmUnparks=23, numSharedQueueSwitches=1, numLocalSubmits=1934730, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=1934766, numSharedTasksExecuted=1, numSteals=1934765, numExceptions=0, numParks=1934712, numFalseAlarmUnparks=37, numSharedQueueSwitches=1, numLocalSubmits=3869400, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=3869310, numSharedTasksExecuted=1, numSteals=3869309, numExceptions=0, numParks=3869395, numFalseAlarmUnparks=288, numSharedQueueSwitches=1, numLocalSubmits=5320314, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=5319201, numSharedTasksExecuted=2, numSteals=5319199, numExceptions=0, numParks=6529305, numFalseAlarmUnparks=1210343, numSharedQueueSwitches=1, numLocalSubmits=2902004, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=2900524, numSharedTasksExecuted=1, numSteals=2900523, numExceptions=0, numParks=6769938, numFalseAlarmUnparks=3869523, numSharedQueueSwitches=1, numLocalSubmits=483790, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=447940, numSharedTasksExecuted=1, numSteals=447939, numExceptions=0, numParks=3140924, numFalseAlarmUnparks=2693000, numSharedQueueSwitches=1, numLocalSubmits=82, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=38587, numSharedTasksExecuted=1, numSteals=38586, numExceptions=0, numParks=445254, numFalseAlarmUnparks=406669, numSharedQueueSwitches=1, numLocalSubmits=2, approximateLocalQueueSize=0}
--------------------------------
2272,092 ops/s


Result "testRecursiveFibo":
  2280,690 Â±(99.9%) 14,415 ops/s [Average]
  (min, avg, max) = (2268,913, 2280,690, 2294,841), stdev = 9,534
  CI (99.9%): [2266,275, 2295,104] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testRecursiveFibo
# Parameters: (strategy = no-conc)

# Run progress: 72,69% complete, ETA 03:19:52
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
543691,906 ops/s
# Warmup Iteration   2: 585427,995 ops/s
# Warmup Iteration   3: 579828,892 ops/s
Iteration   1: 581878,984 ops/s
Iteration   2: 581117,072 ops/s
Iteration   3: 582855,775 ops/s
Iteration   4: 581001,855 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
583215,675 ops/s

# Run progress: 72,92% complete, ETA 03:18:12
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
536040,800 ops/s
# Warmup Iteration   2: 579157,808 ops/s
# Warmup Iteration   3: 574854,886 ops/s
Iteration   1: 577877,743 ops/s
Iteration   2: 577513,854 ops/s
Iteration   3: 576146,651 ops/s
Iteration   4: 578600,807 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
580560,050 ops/s


Result "testRecursiveFibo":
  580076,847 Â±(99.9%) 3634,881 ops/s [Average]
  (min, avg, max) = (576146,651, 580076,847, 583215,675), stdev = 2404,248
  CI (99.9%): [576441,966, 583711,727] (assumes normal distribution)


# JMH 1.11.2 (released 135 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testRecursiveFibo
# Parameters: (strategy = ForkJoinLifo)

# Run progress: 73,15% complete, ETA 03:16:32
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
8491,592 ops/s
# Warmup Iteration   2: 8865,970 ops/s
# Warmup Iteration   3: 8963,110 ops/s
Iteration   1: 8923,867 ops/s
Iteration   2: 8903,237 ops/s
Iteration   3: 8894,439 ops/s
Iteration   4: 8894,593 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
8894,801 ops/s

# Run progress: 73,38% complete, ETA 03:14:52
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
8715,049 ops/s
# Warmup Iteration   2: 8954,454 ops/s
# Warmup Iteration   3: 9061,281 ops/s
Iteration   1: 9026,628 ops/s
Iteration   2: 9015,956 ops/s
Iteration   3: 9002,617 ops/s
Iteration   4: 9007,381 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
9007,540 ops/s


Result "testRecursiveFibo":
  8957,106 Â±(99.9%) 88,963 ops/s [Average]
  (min, avg, max) = (8894,439, 8957,106, 9026,628), stdev = 58,843
  CI (99.9%): [8868,143, 9046,069] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testRecursiveFibo
# Parameters: (strategy = J9FjSharedQueues)

# Run progress: 73,61% complete, ETA 03:13:12
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
3606,842 ops/s
# Warmup Iteration   2: 3773,151 ops/s
# Warmup Iteration   3: 3860,817 ops/s
Iteration   1: 3877,823 ops/s
Iteration   2: 3865,136 ops/s
Iteration   3: 3876,210 ops/s
Iteration   4: 3872,715 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
3871,117 ops/s

# Run progress: 73,84% complete, ETA 03:11:32
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
3634,128 ops/s
# Warmup Iteration   2: 3772,286 ops/s
# Warmup Iteration   3: 3868,086 ops/s
Iteration   1: 3864,512 ops/s
Iteration   2: 3853,678 ops/s
Iteration   3: 3864,727 ops/s
Iteration   4: 3859,529 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
3858,658 ops/s


Result "testRecursiveFibo":
  3866,411 Â±(99.9%) 11,988 ops/s [Average]
  (min, avg, max) = (3853,678, 3866,411, 3877,823), stdev = 7,929
  CI (99.9%): [3854,423, 3878,398] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testRecursiveFibo
# Parameters: (strategy = J9FjLifo)

# Run progress: 74,07% complete, ETA 03:09:52
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
7382,784 ops/s
# Warmup Iteration   2: 7853,771 ops/s
# Warmup Iteration   3: 7955,647 ops/s
Iteration   1: 7968,875 ops/s
Iteration   2: 7960,092 ops/s
Iteration   3: 7964,723 ops/s
Iteration   4: 7958,328 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
7960,182 ops/s

# Run progress: 74,31% complete, ETA 03:08:12
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
6895,284 ops/s
# Warmup Iteration   2: 7948,657 ops/s
# Warmup Iteration   3: 8025,260 ops/s
Iteration   1: 8048,285 ops/s
Iteration   2: 8052,478 ops/s
Iteration   3: 8047,163 ops/s
Iteration   4: 8043,551 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
8040,150 ops/s


Result "testRecursiveFibo":
  8004,383 Â±(99.9%) 67,149 ops/s [Average]
  (min, avg, max) = (7958,328, 8004,383, 8052,478), stdev = 44,415
  CI (99.9%): [7937,234, 8071,532] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testRecursiveFibo
# Parameters: (strategy = J9FjFifo)

# Run progress: 74,54% complete, ETA 03:06:32
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
8123,371 ops/s
# Warmup Iteration   2: 7981,819 ops/s
# Warmup Iteration   3: 8070,019 ops/s
Iteration   1: 8061,874 ops/s
Iteration   2: 8060,757 ops/s
Iteration   3: 8055,303 ops/s
Iteration   4: 8049,915 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
8042,989 ops/s

# Run progress: 74,77% complete, ETA 03:04:52
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
7696,991 ops/s
# Warmup Iteration   2: 7996,039 ops/s
# Warmup Iteration   3: 8091,937 ops/s
Iteration   1: 8082,372 ops/s
Iteration   2: 8087,717 ops/s
Iteration   3: 8076,366 ops/s
Iteration   4: 8073,515 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
8072,944 ops/s


Result "testRecursiveFibo":
  8066,375 Â±(99.9%) 21,953 ops/s [Average]
  (min, avg, max) = (8042,989, 8066,375, 8087,717), stdev = 14,520
  CI (99.9%): [8044,422, 8088,328] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 7 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testSimpleScheduling07
# Parameters: (strategy = a-sync-block)

# Run progress: 75,00% complete, ETA 03:03:12
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
30721,371 ops/s
# Warmup Iteration   2: 29355,021 ops/s
# Warmup Iteration   3: 29243,881 ops/s
Iteration   1: 28917,971 ops/s
Iteration   2: 28470,204 ops/s
Iteration   3: 28469,077 ops/s
Iteration   4: 28368,464 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=421220043, numSharedTasksExecuted=421220043, numSteals=0, numExceptions=0, numParks=38, numFalseAlarmUnparks=4, numSharedQueueSwitches=621038, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=392561927, numSharedTasksExecuted=392561927, numSteals=0, numExceptions=0, numParks=12, numFalseAlarmUnparks=2, numSharedQueueSwitches=600435, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=390030377, numSharedTasksExecuted=390030377, numSteals=0, numExceptions=0, numParks=71, numFalseAlarmUnparks=1, numSharedQueueSwitches=593673, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=348932742, numSharedTasksExecuted=348932742, numSteals=0, numExceptions=0, numParks=42, numFalseAlarmUnparks=3, numSharedQueueSwitches=522988, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=381012963, numSharedTasksExecuted=381012963, numSteals=0, numExceptions=0, numParks=10, numFalseAlarmUnparks=0, numSharedQueueSwitches=585652, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=393048049, numSharedTasksExecuted=393048049, numSteals=0, numExceptions=0, numParks=87, numFalseAlarmUnparks=4, numSharedQueueSwitches=595197, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=308762640, numSharedTasksExecuted=308762640, numSteals=0, numExceptions=0, numParks=10, numFalseAlarmUnparks=0, numSharedQueueSwitches=480338, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=393504267, numSharedTasksExecuted=393504267, numSteals=0, numExceptions=0, numParks=18, numFalseAlarmUnparks=1, numSharedQueueSwitches=603153, numLocalSubmits=0, approximateLocalQueueSize=0}
--------------------------------
28286,797 ops/s

# Run progress: 75,23% complete, ETA 03:01:32
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
29410,473 ops/s
# Warmup Iteration   2: 26110,616 ops/s
# Warmup Iteration   3: 26164,461 ops/s
Iteration   1: 25619,131 ops/s
Iteration   2: 25349,217 ops/s
Iteration   3: 25368,604 ops/s
Iteration   4: 25298,679 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=389062860, numSharedTasksExecuted=389062860, numSteals=0, numExceptions=0, numParks=13, numFalseAlarmUnparks=1, numSharedQueueSwitches=607835, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=374524959, numSharedTasksExecuted=374524959, numSteals=0, numExceptions=0, numParks=11, numFalseAlarmUnparks=0, numSharedQueueSwitches=609593, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=335909155, numSharedTasksExecuted=335909155, numSteals=0, numExceptions=0, numParks=10, numFalseAlarmUnparks=1, numSharedQueueSwitches=545803, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=333871670, numSharedTasksExecuted=333871670, numSteals=0, numExceptions=0, numParks=12, numFalseAlarmUnparks=1, numSharedQueueSwitches=535698, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=367754970, numSharedTasksExecuted=367754970, numSteals=0, numExceptions=0, numParks=11, numFalseAlarmUnparks=2, numSharedQueueSwitches=602342, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=339349479, numSharedTasksExecuted=339349479, numSteals=0, numExceptions=0, numParks=10, numFalseAlarmUnparks=1, numSharedQueueSwitches=549942, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=288413722, numSharedTasksExecuted=288413722, numSteals=0, numExceptions=0, numParks=11, numFalseAlarmUnparks=0, numSharedQueueSwitches=478518, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=273005193, numSharedTasksExecuted=273005193, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=477438, numLocalSubmits=0, approximateLocalQueueSize=0}
--------------------------------
25287,511 ops/s


Result "testSimpleScheduling07":
  26943,565 Â±(99.9%) 2500,307 ops/s [Average]
  (min, avg, max) = (25287,511, 26943,565, 28917,971), stdev = 1653,798
  CI (99.9%): [24443,259, 29443,872] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 7 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testSimpleScheduling07
# Parameters: (strategy = a-sync-nocheck)

# Run progress: 75,46% complete, ETA 02:59:52
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
29715,664 ops/s
# Warmup Iteration   2: 24577,096 ops/s
# Warmup Iteration   3: 24785,591 ops/s
Iteration   1: 24308,674 ops/s
Iteration   2: 24012,074 ops/s
Iteration   3: 23761,796 ops/s
Iteration   4: 23830,163 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=342360993, numSharedTasksExecuted=342360993, numSteals=0, numExceptions=0, numParks=11, numFalseAlarmUnparks=0, numSharedQueueSwitches=496905, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=316196840, numSharedTasksExecuted=316196840, numSteals=0, numExceptions=0, numParks=12, numFalseAlarmUnparks=0, numSharedQueueSwitches=470342, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=330327817, numSharedTasksExecuted=330327817, numSteals=0, numExceptions=0, numParks=13, numFalseAlarmUnparks=0, numSharedQueueSwitches=480684, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=310489042, numSharedTasksExecuted=310489042, numSteals=0, numExceptions=0, numParks=11, numFalseAlarmUnparks=0, numSharedQueueSwitches=453829, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=328359997, numSharedTasksExecuted=328359997, numSteals=0, numExceptions=0, numParks=12, numFalseAlarmUnparks=1, numSharedQueueSwitches=488868, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=335388222, numSharedTasksExecuted=335388222, numSteals=0, numExceptions=0, numParks=13, numFalseAlarmUnparks=0, numSharedQueueSwitches=492985, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=259928748, numSharedTasksExecuted=259928748, numSteals=0, numExceptions=0, numParks=15, numFalseAlarmUnparks=2, numSharedQueueSwitches=394209, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=330054349, numSharedTasksExecuted=330054349, numSteals=0, numExceptions=0, numParks=12, numFalseAlarmUnparks=1, numSharedQueueSwitches=493112, numLocalSubmits=0, approximateLocalQueueSize=0}
--------------------------------
23841,073 ops/s

# Run progress: 75,69% complete, ETA 02:58:12
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
32963,967 ops/s
# Warmup Iteration   2: 35073,969 ops/s
# Warmup Iteration   3: 35373,637 ops/s
Iteration   1: 34665,516 ops/s
Iteration   2: 33986,242 ops/s
Iteration   3: 33977,905 ops/s
Iteration   4: 33921,813 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=503145262, numSharedTasksExecuted=503145262, numSteals=0, numExceptions=0, numParks=199, numFalseAlarmUnparks=13, numSharedQueueSwitches=716520, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=490242653, numSharedTasksExecuted=490242653, numSteals=0, numExceptions=0, numParks=47, numFalseAlarmUnparks=1, numSharedQueueSwitches=720225, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=479970873, numSharedTasksExecuted=479970873, numSteals=0, numExceptions=0, numParks=133, numFalseAlarmUnparks=11, numSharedQueueSwitches=688767, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=467529471, numSharedTasksExecuted=467529471, numSteals=0, numExceptions=0, numParks=135, numFalseAlarmUnparks=11, numSharedQueueSwitches=668061, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=484166022, numSharedTasksExecuted=484166022, numSteals=0, numExceptions=0, numParks=47, numFalseAlarmUnparks=1, numSharedQueueSwitches=696605, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=504639173, numSharedTasksExecuted=504639173, numSteals=0, numExceptions=0, numParks=105, numFalseAlarmUnparks=10, numSharedQueueSwitches=714676, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=360136372, numSharedTasksExecuted=360136372, numSteals=0, numExceptions=0, numParks=114, numFalseAlarmUnparks=10, numSharedQueueSwitches=538373, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=327833182, numSharedTasksExecuted=327833182, numSteals=0, numExceptions=0, numParks=13, numFalseAlarmUnparks=0, numSharedQueueSwitches=518342, numLocalSubmits=0, approximateLocalQueueSize=0}
--------------------------------
33988,211 ops/s


Result "testSimpleScheduling07":
  29029,346 Â±(99.9%) 8102,618 ops/s [Average]
  (min, avg, max) = (23761,796, 29029,346, 34665,516), stdev = 5359,380
  CI (99.9%): [20926,729, 37131,964] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 7 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testSimpleScheduling07
# Parameters: (strategy = a-lock-block)

# Run progress: 75,93% complete, ETA 02:56:32
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
39773,525 ops/s
# Warmup Iteration   2: 39876,466 ops/s
# Warmup Iteration   3: 41019,939 ops/s
Iteration   1: 39931,158 ops/s
Iteration   2: 39311,495 ops/s
Iteration   3: 39302,978 ops/s
Iteration   4: 39290,840 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=575066180, numSharedTasksExecuted=575066180, numSteals=0, numExceptions=0, numParks=12, numFalseAlarmUnparks=0, numSharedQueueSwitches=763689, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=514063983, numSharedTasksExecuted=514063983, numSteals=0, numExceptions=0, numParks=17, numFalseAlarmUnparks=3, numSharedQueueSwitches=703424, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=545597722, numSharedTasksExecuted=545597722, numSteals=0, numExceptions=0, numParks=20, numFalseAlarmUnparks=0, numSharedQueueSwitches=735451, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=502468626, numSharedTasksExecuted=502468626, numSteals=0, numExceptions=0, numParks=10, numFalseAlarmUnparks=0, numSharedQueueSwitches=693182, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=572193004, numSharedTasksExecuted=572193004, numSteals=0, numExceptions=0, numParks=19, numFalseAlarmUnparks=1, numSharedQueueSwitches=771158, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=549432478, numSharedTasksExecuted=549432478, numSteals=0, numExceptions=0, numParks=10, numFalseAlarmUnparks=0, numSharedQueueSwitches=739016, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=581975893, numSharedTasksExecuted=581975893, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=770336, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=338730122, numSharedTasksExecuted=338730122, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=519808, numLocalSubmits=0, approximateLocalQueueSize=0}
--------------------------------
39080,611 ops/s

# Run progress: 76,16% complete, ETA 02:54:52
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
41660,246 ops/s
# Warmup Iteration   2: 43730,506 ops/s
# Warmup Iteration   3: 44545,864 ops/s
Iteration   1: 42269,549 ops/s
Iteration   2: 42128,578 ops/s
Iteration   3: 42046,618 ops/s
Iteration   4: 41678,367 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=523117577, numSharedTasksExecuted=523117577, numSteals=0, numExceptions=0, numParks=21, numFalseAlarmUnparks=1, numSharedQueueSwitches=729520, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=639049067, numSharedTasksExecuted=639049067, numSteals=0, numExceptions=0, numParks=13, numFalseAlarmUnparks=0, numSharedQueueSwitches=854620, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=577332687, numSharedTasksExecuted=577332687, numSteals=0, numExceptions=0, numParks=11, numFalseAlarmUnparks=0, numSharedQueueSwitches=781069, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=517185972, numSharedTasksExecuted=517185972, numSteals=0, numExceptions=0, numParks=14, numFalseAlarmUnparks=2, numSharedQueueSwitches=725944, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=647668506, numSharedTasksExecuted=647668506, numSteals=0, numExceptions=0, numParks=33, numFalseAlarmUnparks=2, numSharedQueueSwitches=863028, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=571867838, numSharedTasksExecuted=571867838, numSteals=0, numExceptions=0, numParks=18, numFalseAlarmUnparks=2, numSharedQueueSwitches=773242, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=339510715, numSharedTasksExecuted=339510715, numSteals=0, numExceptions=0, numParks=16, numFalseAlarmUnparks=0, numSharedQueueSwitches=516953, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=645129646, numSharedTasksExecuted=645129646, numSteals=0, numExceptions=0, numParks=14, numFalseAlarmUnparks=1, numSharedQueueSwitches=857378, numLocalSubmits=0, approximateLocalQueueSize=0}
--------------------------------
41925,566 ops/s


Result "testSimpleScheduling07":
  40696,576 Â±(99.9%) 2129,501 ops/s [Average]
  (min, avg, max) = (39080,611, 40696,576, 42269,549), stdev = 1408,533
  CI (99.9%): [38567,075, 42826,076] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 7 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testSimpleScheduling07
# Parameters: (strategy = a-nonblocking)

# Run progress: 76,39% complete, ETA 02:53:12
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
40732,238 ops/s
# Warmup Iteration   2: 29951,995 ops/s
# Warmup Iteration   3: 29271,230 ops/s
Iteration   1: 29054,350 ops/s
Iteration   2: 28682,193 ops/s
Iteration   3: 28619,186 ops/s
Iteration   4: 28624,009 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=394720858, numSharedTasksExecuted=394720858, numSteals=0, numExceptions=0, numParks=11, numFalseAlarmUnparks=1, numSharedQueueSwitches=557424, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=383600090, numSharedTasksExecuted=383600090, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=550045, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=382502734, numSharedTasksExecuted=382502734, numSteals=0, numExceptions=0, numParks=12, numFalseAlarmUnparks=0, numSharedQueueSwitches=542744, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=358338941, numSharedTasksExecuted=358338941, numSteals=0, numExceptions=0, numParks=10, numFalseAlarmUnparks=1, numSharedQueueSwitches=520409, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=377814871, numSharedTasksExecuted=377814871, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=548376, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=390832656, numSharedTasksExecuted=390832656, numSteals=0, numExceptions=0, numParks=10, numFalseAlarmUnparks=0, numSharedQueueSwitches=557211, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=393192688, numSharedTasksExecuted=393192688, numSteals=0, numExceptions=0, numParks=11, numFalseAlarmUnparks=1, numSharedQueueSwitches=555924, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=388055170, numSharedTasksExecuted=388055170, numSteals=0, numExceptions=0, numParks=10, numFalseAlarmUnparks=1, numSharedQueueSwitches=557932, numLocalSubmits=0, approximateLocalQueueSize=0}
--------------------------------
28492,014 ops/s

# Run progress: 76,62% complete, ETA 02:51:31
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
34646,740 ops/s
# Warmup Iteration   2: 30203,057 ops/s
# Warmup Iteration   3: 30290,086 ops/s
Iteration   1: 29879,066 ops/s
Iteration   2: 28972,232 ops/s
Iteration   3: 28980,163 ops/s
Iteration   4: 29069,594 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=414028106, numSharedTasksExecuted=414028106, numSteals=0, numExceptions=0, numParks=24, numFalseAlarmUnparks=1, numSharedQueueSwitches=573201, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=409243060, numSharedTasksExecuted=409243060, numSteals=0, numExceptions=0, numParks=20, numFalseAlarmUnparks=1, numSharedQueueSwitches=576021, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=400469406, numSharedTasksExecuted=400469406, numSteals=0, numExceptions=0, numParks=25, numFalseAlarmUnparks=4, numSharedQueueSwitches=567344, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=378742699, numSharedTasksExecuted=378742699, numSteals=0, numExceptions=0, numParks=21, numFalseAlarmUnparks=0, numSharedQueueSwitches=536950, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=395517996, numSharedTasksExecuted=395517996, numSteals=0, numExceptions=0, numParks=18, numFalseAlarmUnparks=0, numSharedQueueSwitches=554022, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=410181072, numSharedTasksExecuted=410181072, numSteals=0, numExceptions=0, numParks=16, numFalseAlarmUnparks=1, numSharedQueueSwitches=585717, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=415976625, numSharedTasksExecuted=415976625, numSteals=0, numExceptions=0, numParks=13, numFalseAlarmUnparks=1, numSharedQueueSwitches=583187, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=283320044, numSharedTasksExecuted=283320044, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=437568, numLocalSubmits=0, approximateLocalQueueSize=0}
--------------------------------
28966,268 ops/s


Result "testSimpleScheduling07":
  28933,908 Â±(99.9%) 592,999 ops/s [Average]
  (min, avg, max) = (28492,014, 28933,908, 29879,066), stdev = 392,232
  CI (99.9%): [28340,909, 29526,906] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 7 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testSimpleScheduling07
# Parameters: (strategy = no-conc)

# Run progress: 76,85% complete, ETA 02:49:51
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
538246,152 ops/s
# Warmup Iteration   2: 544570,437 ops/s
# Warmup Iteration   3: 580551,346 ops/s
Iteration   1: 569542,397 ops/s
Iteration   2: 566448,038 ops/s
Iteration   3: 565960,964 ops/s
Iteration   4: 566329,506 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
565972,053 ops/s

# Run progress: 77,08% complete, ETA 02:48:11
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
538609,849 ops/s
# Warmup Iteration   2: 546049,898 ops/s
# Warmup Iteration   3: 578904,441 ops/s
Iteration   1: 569626,316 ops/s
Iteration   2: 566444,895 ops/s
Iteration   3: 566284,876 ops/s
Iteration   4: 566203,859 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
566103,957 ops/s


Result "testSimpleScheduling07":
  566891,686 Â±(99.9%) 2161,173 ops/s [Average]
  (min, avg, max) = (565960,964, 566891,686, 569626,316), stdev = 1429,482
  CI (99.9%): [564730,513, 569052,859] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 7 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testSimpleScheduling07
# Parameters: (strategy = ForkJoinLifo)

# Run progress: 77,31% complete, ETA 02:46:30
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
22746,178 ops/s
# Warmup Iteration   2: 22595,567 ops/s
# Warmup Iteration   3: 23510,900 ops/s
Iteration   1: 21779,771 ops/s
Iteration   2: 20913,931 ops/s
Iteration   3: 20796,983 ops/s
Iteration   4: 20781,896 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
20906,582 ops/s

# Run progress: 77,55% complete, ETA 02:44:50
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
22491,399 ops/s
# Warmup Iteration   2: 23383,785 ops/s
# Warmup Iteration   3: 22180,804 ops/s
Iteration   1: 21950,234 ops/s
Iteration   2: 21268,609 ops/s
Iteration   3: 21190,415 ops/s
Iteration   4: 20938,608 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
21164,850 ops/s


Result "testSimpleScheduling07":
  21169,188 Â±(99.9%) 610,805 ops/s [Average]
  (min, avg, max) = (20781,896, 21169,188, 21950,234), stdev = 404,010
  CI (99.9%): [20558,383, 21779,993] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 7 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testSimpleScheduling07
# Parameters: (strategy = J9FjSharedQueues)

# Run progress: 77,78% complete, ETA 02:43:09
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
21947,711 ops/s
# Warmup Iteration   2: 22715,577 ops/s
# Warmup Iteration   3: 22514,225 ops/s
Iteration   1: 21122,443 ops/s
Iteration   2: 19749,221 ops/s
Iteration   3: 19242,076 ops/s
Iteration   4: 19571,643 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
19589,655 ops/s

# Run progress: 78,01% complete, ETA 02:41:29
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
22553,323 ops/s
# Warmup Iteration   2: 23393,872 ops/s
# Warmup Iteration   3: 23595,695 ops/s
Iteration   1: 21400,076 ops/s
Iteration   2: 20351,972 ops/s
Iteration   3: 20054,101 ops/s
Iteration   4: 20351,436 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
20113,144 ops/s


Result "testSimpleScheduling07":
  20154,577 Â±(99.9%) 1036,904 ops/s [Average]
  (min, avg, max) = (19242,076, 20154,577, 21400,076), stdev = 685,848
  CI (99.9%): [19117,673, 21191,480] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 7 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testSimpleScheduling07
# Parameters: (strategy = J9FjLifo)

# Run progress: 78,24% complete, ETA 02:39:48
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
22051,922 ops/s
# Warmup Iteration   2: 22103,659 ops/s
# Warmup Iteration   3: 22455,165 ops/s
Iteration   1: 20855,063 ops/s
Iteration   2: 19205,898 ops/s
Iteration   3: 19187,619 ops/s
Iteration   4: 19348,590 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
19457,407 ops/s

# Run progress: 78,47% complete, ETA 02:38:08
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
20905,817 ops/s
# Warmup Iteration   2: 21680,396 ops/s
# Warmup Iteration   3: 18651,045 ops/s
Iteration   1: 20331,217 ops/s
Iteration   2: 19001,416 ops/s
Iteration   3: 19047,469 ops/s
Iteration   4: 18705,991 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
18703,724 ops/s


Result "testSimpleScheduling07":
  19384,440 Â±(99.9%) 1047,478 ops/s [Average]
  (min, avg, max) = (18703,724, 19384,440, 20855,063), stdev = 692,842
  CI (99.9%): [18336,962, 20431,917] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 7 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testSimpleScheduling07
# Parameters: (strategy = J9FjFifo)

# Run progress: 78,70% complete, ETA 02:36:27
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
21191,688 ops/s
# Warmup Iteration   2: 21130,424 ops/s
# Warmup Iteration   3: 22077,572 ops/s
Iteration   1: 19858,388 ops/s
Iteration   2: 18510,932 ops/s
Iteration   3: 18862,522 ops/s
Iteration   4: 18651,984 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
18733,279 ops/s

# Run progress: 78,94% complete, ETA 02:34:47
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
22112,563 ops/s
# Warmup Iteration   2: 22566,866 ops/s
# Warmup Iteration   3: 23423,070 ops/s
Iteration   1: 21641,367 ops/s
Iteration   2: 20323,059 ops/s
Iteration   3: 20268,426 ops/s
Iteration   4: 20084,087 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
20152,187 ops/s


Result "testSimpleScheduling07":
  19708,623 Â±(99.9%) 1512,251 ops/s [Average]
  (min, avg, max) = (18510,932, 19708,623, 21641,367), stdev = 1000,261
  CI (99.9%): [18196,372, 21220,875] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testSimpleScheduling08
# Parameters: (strategy = a-sync-block)

# Run progress: 79,17% complete, ETA 02:33:06
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
31647,963 ops/s
# Warmup Iteration   2: 34401,161 ops/s
# Warmup Iteration   3: 34557,652 ops/s
Iteration   1: 34140,805 ops/s
Iteration   2: 33386,843 ops/s
Iteration   3: 33355,536 ops/s
Iteration   4: 33376,098 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=428937583, numSharedTasksExecuted=428937583, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=620640, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=455954070, numSharedTasksExecuted=455954070, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=663265, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=465761664, numSharedTasksExecuted=465761664, numSteals=0, numExceptions=0, numParks=10, numFalseAlarmUnparks=1, numSharedQueueSwitches=665385, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=460577058, numSharedTasksExecuted=460577058, numSteals=0, numExceptions=0, numParks=10, numFalseAlarmUnparks=1, numSharedQueueSwitches=661151, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=456642339, numSharedTasksExecuted=456642339, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=665300, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=474612397, numSharedTasksExecuted=474612397, numSteals=0, numExceptions=0, numParks=10, numFalseAlarmUnparks=1, numSharedQueueSwitches=678705, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=355538048, numSharedTasksExecuted=355538048, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=533610, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=456881849, numSharedTasksExecuted=456881849, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=666488, numLocalSubmits=0, approximateLocalQueueSize=0}
--------------------------------
33417,962 ops/s

# Run progress: 79,40% complete, ETA 02:31:25
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
29738,729 ops/s
# Warmup Iteration   2: 29740,225 ops/s
# Warmup Iteration   3: 29727,780 ops/s
Iteration   1: 28885,575 ops/s
Iteration   2: 28576,102 ops/s
Iteration   3: 28538,151 ops/s
Iteration   4: 28696,109 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=344725682, numSharedTasksExecuted=344725682, numSteals=0, numExceptions=0, numParks=16, numFalseAlarmUnparks=0, numSharedQueueSwitches=491176, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=439377707, numSharedTasksExecuted=439377707, numSteals=0, numExceptions=0, numParks=12, numFalseAlarmUnparks=1, numSharedQueueSwitches=615888, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=442179903, numSharedTasksExecuted=442179903, numSteals=0, numExceptions=0, numParks=10, numFalseAlarmUnparks=0, numSharedQueueSwitches=623364, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=372608385, numSharedTasksExecuted=372608385, numSteals=0, numExceptions=0, numParks=10, numFalseAlarmUnparks=0, numSharedQueueSwitches=534557, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=354211607, numSharedTasksExecuted=354211607, numSteals=0, numExceptions=0, numParks=19, numFalseAlarmUnparks=0, numSharedQueueSwitches=534013, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=322213844, numSharedTasksExecuted=322213844, numSteals=0, numExceptions=0, numParks=15, numFalseAlarmUnparks=0, numSharedQueueSwitches=478029, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=335057248, numSharedTasksExecuted=335057248, numSteals=0, numExceptions=0, numParks=20, numFalseAlarmUnparks=3, numSharedQueueSwitches=497400, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=434637632, numSharedTasksExecuted=434637632, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=610667, numLocalSubmits=0, approximateLocalQueueSize=0}
--------------------------------
28636,277 ops/s


Result "testSimpleScheduling08":
  31100,946 Â±(99.9%) 3897,171 ops/s [Average]
  (min, avg, max) = (28538,151, 31100,946, 34140,805), stdev = 2577,738
  CI (99.9%): [27203,775, 34998,117] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testSimpleScheduling08
# Parameters: (strategy = a-sync-nocheck)

# Run progress: 79,63% complete, ETA 02:29:44
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
30219,594 ops/s
# Warmup Iteration   2: 34184,050 ops/s
# Warmup Iteration   3: 34082,687 ops/s
Iteration   1: 33432,184 ops/s
Iteration   2: 33002,618 ops/s
Iteration   3: 33023,846 ops/s
Iteration   4: 33045,062 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=450322686, numSharedTasksExecuted=450322686, numSteals=0, numExceptions=0, numParks=23, numFalseAlarmUnparks=3, numSharedQueueSwitches=632545, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=461273711, numSharedTasksExecuted=461273711, numSteals=0, numExceptions=0, numParks=17, numFalseAlarmUnparks=2, numSharedQueueSwitches=640808, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=445590872, numSharedTasksExecuted=445590872, numSteals=0, numExceptions=0, numParks=17, numFalseAlarmUnparks=1, numSharedQueueSwitches=617047, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=435713568, numSharedTasksExecuted=435713568, numSteals=0, numExceptions=0, numParks=18, numFalseAlarmUnparks=3, numSharedQueueSwitches=615247, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=368371624, numSharedTasksExecuted=368371624, numSteals=0, numExceptions=0, numParks=55, numFalseAlarmUnparks=0, numSharedQueueSwitches=543378, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=442853266, numSharedTasksExecuted=442853266, numSteals=0, numExceptions=0, numParks=16, numFalseAlarmUnparks=0, numSharedQueueSwitches=612195, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=447374422, numSharedTasksExecuted=447374422, numSteals=0, numExceptions=0, numParks=65, numFalseAlarmUnparks=0, numSharedQueueSwitches=616594, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=455349859, numSharedTasksExecuted=455349859, numSteals=0, numExceptions=0, numParks=13, numFalseAlarmUnparks=0, numSharedQueueSwitches=631863, numLocalSubmits=0, approximateLocalQueueSize=0}
--------------------------------
32998,263 ops/s

# Run progress: 79,86% complete, ETA 02:28:04
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
29695,867 ops/s
# Warmup Iteration   2: 33109,417 ops/s
# Warmup Iteration   3: 33218,650 ops/s
Iteration   1: 32154,685 ops/s
Iteration   2: 31397,583 ops/s
Iteration   3: 31460,800 ops/s
Iteration   4: 31451,441 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=447087983, numSharedTasksExecuted=447087983, numSteals=0, numExceptions=0, numParks=11, numFalseAlarmUnparks=1, numSharedQueueSwitches=666869, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=437701144, numSharedTasksExecuted=437701144, numSteals=0, numExceptions=0, numParks=10, numFalseAlarmUnparks=0, numSharedQueueSwitches=650527, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=466748062, numSharedTasksExecuted=466748062, numSteals=0, numExceptions=0, numParks=10, numFalseAlarmUnparks=0, numSharedQueueSwitches=678134, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=452121565, numSharedTasksExecuted=452121565, numSteals=0, numExceptions=0, numParks=10, numFalseAlarmUnparks=0, numSharedQueueSwitches=661140, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=324511728, numSharedTasksExecuted=324511728, numSteals=0, numExceptions=0, numParks=11, numFalseAlarmUnparks=0, numSharedQueueSwitches=521162, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=461832654, numSharedTasksExecuted=461832654, numSteals=0, numExceptions=0, numParks=11, numFalseAlarmUnparks=1, numSharedQueueSwitches=674000, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=323172941, numSharedTasksExecuted=323172941, numSteals=0, numExceptions=0, numParks=10, numFalseAlarmUnparks=0, numSharedQueueSwitches=510970, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=438902931, numSharedTasksExecuted=438902931, numSteals=0, numExceptions=0, numParks=11, numFalseAlarmUnparks=1, numSharedQueueSwitches=653796, numLocalSubmits=0, approximateLocalQueueSize=0}
--------------------------------
31533,633 ops/s


Result "testSimpleScheduling08":
  32350,011 Â±(99.9%) 1251,208 ops/s [Average]
  (min, avg, max) = (31397,583, 32350,011, 33432,184), stdev = 827,596
  CI (99.9%): [31098,804, 33601,219] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testSimpleScheduling08
# Parameters: (strategy = a-lock-block)

# Run progress: 80,09% complete, ETA 02:26:23
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
39911,781 ops/s
# Warmup Iteration   2: 43807,911 ops/s
# Warmup Iteration   3: 44466,822 ops/s
Iteration   1: 42317,244 ops/s
Iteration   2: 41956,882 ops/s
Iteration   3: 41849,585 ops/s
Iteration   4: 41774,831 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=569455645, numSharedTasksExecuted=569455645, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=772334, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=611483644, numSharedTasksExecuted=611483644, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=817608, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=616567937, numSharedTasksExecuted=616567937, numSteals=0, numExceptions=0, numParks=10, numFalseAlarmUnparks=0, numSharedQueueSwitches=819390, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=537883885, numSharedTasksExecuted=537883885, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=730712, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=459570420, numSharedTasksExecuted=459570420, numSteals=0, numExceptions=0, numParks=10, numFalseAlarmUnparks=0, numSharedQueueSwitches=668211, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=626397494, numSharedTasksExecuted=626397494, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=827746, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=386537998, numSharedTasksExecuted=386537998, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=567907, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=644672985, numSharedTasksExecuted=644672985, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=857400, numLocalSubmits=0, approximateLocalQueueSize=0}
--------------------------------
41931,671 ops/s

# Run progress: 80,32% complete, ETA 02:24:42
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
39022,020 ops/s
# Warmup Iteration   2: 41085,347 ops/s
# Warmup Iteration   3: 40080,502 ops/s
Iteration   1: 38384,937 ops/s
Iteration   2: 38072,409 ops/s
Iteration   3: 38007,765 ops/s
Iteration   4: 37811,816 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=517662707, numSharedTasksExecuted=517662707, numSteals=0, numExceptions=0, numParks=353, numFalseAlarmUnparks=5, numSharedQueueSwitches=708495, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=540932936, numSharedTasksExecuted=540932936, numSteals=0, numExceptions=0, numParks=43, numFalseAlarmUnparks=3, numSharedQueueSwitches=739494, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=503254386, numSharedTasksExecuted=503254386, numSteals=0, numExceptions=0, numParks=134, numFalseAlarmUnparks=5, numSharedQueueSwitches=693878, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=353384498, numSharedTasksExecuted=353384498, numSteals=0, numExceptions=0, numParks=382, numFalseAlarmUnparks=13, numSharedQueueSwitches=527348, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=557929720, numSharedTasksExecuted=557929720, numSteals=0, numExceptions=0, numParks=165, numFalseAlarmUnparks=7, numSharedQueueSwitches=763902, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=509113478, numSharedTasksExecuted=509113478, numSteals=0, numExceptions=0, numParks=115, numFalseAlarmUnparks=3, numSharedQueueSwitches=693118, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=513934405, numSharedTasksExecuted=513934405, numSteals=0, numExceptions=0, numParks=142, numFalseAlarmUnparks=3, numSharedQueueSwitches=699667, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=549515878, numSharedTasksExecuted=549515878, numSteals=0, numExceptions=0, numParks=26, numFalseAlarmUnparks=0, numSharedQueueSwitches=740780, numLocalSubmits=0, approximateLocalQueueSize=0}
--------------------------------
37988,086 ops/s


Result "testSimpleScheduling08":
  40009,523 Â±(99.9%) 3132,194 ops/s [Average]
  (min, avg, max) = (37811,816, 40009,523, 42317,244), stdev = 2071,752
  CI (99.9%): [36877,329, 43141,717] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testSimpleScheduling08
# Parameters: (strategy = a-nonblocking)

# Run progress: 80,56% complete, ETA 02:23:01
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
35769,352 ops/s
# Warmup Iteration   2: 33510,012 ops/s
# Warmup Iteration   3: 33320,228 ops/s
Iteration   1: 32852,578 ops/s
Iteration   2: 31887,983 ops/s
Iteration   3: 31862,296 ops/s
Iteration   4: 31896,183 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=459360095, numSharedTasksExecuted=459360095, numSteals=0, numExceptions=0, numParks=10, numFalseAlarmUnparks=1, numSharedQueueSwitches=620806, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=459154030, numSharedTasksExecuted=459154030, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=627979, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=465202526, numSharedTasksExecuted=465202526, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=1, numSharedQueueSwitches=634738, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=437355609, numSharedTasksExecuted=437355609, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=1, numSharedQueueSwitches=597189, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=465846348, numSharedTasksExecuted=465846348, numSteals=0, numExceptions=0, numParks=10, numFalseAlarmUnparks=1, numSharedQueueSwitches=630096, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=470523540, numSharedTasksExecuted=470523540, numSteals=0, numExceptions=0, numParks=10, numFalseAlarmUnparks=1, numSharedQueueSwitches=631786, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=378259058, numSharedTasksExecuted=378259058, numSteals=0, numExceptions=0, numParks=10, numFalseAlarmUnparks=0, numSharedQueueSwitches=533639, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=278344802, numSharedTasksExecuted=278344802, numSteals=0, numExceptions=0, numParks=11, numFalseAlarmUnparks=1, numSharedQueueSwitches=445120, numLocalSubmits=0, approximateLocalQueueSize=0}
--------------------------------
31930,918 ops/s

# Run progress: 80,79% complete, ETA 02:21:20
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
35201,618 ops/s
# Warmup Iteration   2: 33279,119 ops/s
# Warmup Iteration   3: 33827,541 ops/s
Iteration   1: 32923,887 ops/s
Iteration   2: 31976,150 ops/s
Iteration   3: 31806,752 ops/s
Iteration   4: 32000,832 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=457517032, numSharedTasksExecuted=457517032, numSteals=0, numExceptions=0, numParks=10, numFalseAlarmUnparks=1, numSharedQueueSwitches=620841, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=461855216, numSharedTasksExecuted=461855216, numSteals=0, numExceptions=0, numParks=10, numFalseAlarmUnparks=1, numSharedQueueSwitches=633674, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=457003762, numSharedTasksExecuted=457003762, numSteals=0, numExceptions=0, numParks=11, numFalseAlarmUnparks=1, numSharedQueueSwitches=628368, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=431229850, numSharedTasksExecuted=431229850, numSteals=0, numExceptions=0, numParks=11, numFalseAlarmUnparks=1, numSharedQueueSwitches=601482, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=457774845, numSharedTasksExecuted=457774845, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=626135, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=453458790, numSharedTasksExecuted=453458790, numSteals=0, numExceptions=0, numParks=10, numFalseAlarmUnparks=0, numSharedQueueSwitches=621976, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=370659624, numSharedTasksExecuted=370659624, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=521732, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=326429889, numSharedTasksExecuted=326429889, numSteals=0, numExceptions=0, numParks=10, numFalseAlarmUnparks=1, numSharedQueueSwitches=499775, numLocalSubmits=0, approximateLocalQueueSize=0}
--------------------------------
31871,254 ops/s


Result "testSimpleScheduling08":
  32100,883 Â±(99.9%) 633,505 ops/s [Average]
  (min, avg, max) = (31806,752, 32100,883, 32923,887), stdev = 419,024
  CI (99.9%): [31467,378, 32734,389] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testSimpleScheduling08
# Parameters: (strategy = no-conc)

# Run progress: 81,02% complete, ETA 02:19:39
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
618356,997 ops/s
# Warmup Iteration   2: 607805,162 ops/s
# Warmup Iteration   3: 627884,965 ops/s
Iteration   1: 604431,533 ops/s
Iteration   2: 604861,537 ops/s
Iteration   3: 605003,026 ops/s
Iteration   4: 604692,775 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
604269,293 ops/s

# Run progress: 81,25% complete, ETA 02:17:58
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
595986,753 ops/s
# Warmup Iteration   2: 607738,466 ops/s
# Warmup Iteration   3: 574959,664 ops/s
Iteration   1: 592034,216 ops/s
Iteration   2: 603932,322 ops/s
Iteration   3: 603841,925 ops/s
Iteration   4: 603478,929 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
603468,458 ops/s


Result "testSimpleScheduling08":
  603001,402 Â±(99.9%) 5883,061 ops/s [Average]
  (min, avg, max) = (592034,216, 603001,402, 605003,026), stdev = 3891,281
  CI (99.9%): [597118,340, 608884,463] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testSimpleScheduling08
# Parameters: (strategy = ForkJoinLifo)

# Run progress: 81,48% complete, ETA 02:16:17
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
24439,891 ops/s
# Warmup Iteration   2: 24539,632 ops/s
# Warmup Iteration   3: 25080,350 ops/s
Iteration   1: 23841,184 ops/s
Iteration   2: 23085,842 ops/s
Iteration   3: 23188,212 ops/s
Iteration   4: 22759,886 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
23058,562 ops/s

# Run progress: 81,71% complete, ETA 02:14:36
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
23998,543 ops/s
# Warmup Iteration   2: 24506,715 ops/s
# Warmup Iteration   3: 24922,170 ops/s
Iteration   1: 23339,145 ops/s
Iteration   2: 22446,294 ops/s
Iteration   3: 22647,173 ops/s
Iteration   4: 22380,221 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
22684,855 ops/s


Result "testSimpleScheduling08":
  22943,137 Â±(99.9%) 677,750 ops/s [Average]
  (min, avg, max) = (22380,221, 22943,137, 23841,184), stdev = 448,290
  CI (99.9%): [22265,387, 23620,887] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testSimpleScheduling08
# Parameters: (strategy = J9FjSharedQueues)

# Run progress: 81,94% complete, ETA 02:12:55
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
23589,478 ops/s
# Warmup Iteration   2: 24199,326 ops/s
# Warmup Iteration   3: 24317,518 ops/s
Iteration   1: 22818,096 ops/s
Iteration   2: 21432,972 ops/s
Iteration   3: 21615,737 ops/s
Iteration   4: 21633,345 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
21577,873 ops/s

# Run progress: 82,18% complete, ETA 02:11:14
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
21843,918 ops/s
# Warmup Iteration   2: 22598,380 ops/s
# Warmup Iteration   3: 23031,672 ops/s
Iteration   1: 21885,394 ops/s
Iteration   2: 20851,012 ops/s
Iteration   3: 20709,357 ops/s
Iteration   4: 20759,048 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
20572,837 ops/s


Result "testSimpleScheduling08":
  21385,567 Â±(99.9%) 1039,124 ops/s [Average]
  (min, avg, max) = (20572,837, 21385,567, 22818,096), stdev = 687,316
  CI (99.9%): [20346,443, 22424,691] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testSimpleScheduling08
# Parameters: (strategy = J9FjLifo)

# Run progress: 82,41% complete, ETA 02:09:32
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
23126,821 ops/s
# Warmup Iteration   2: 23289,677 ops/s
# Warmup Iteration   3: 24619,612 ops/s
Iteration   1: 22706,589 ops/s
Iteration   2: 21405,390 ops/s
Iteration   3: 21590,997 ops/s
Iteration   4: 21326,283 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
21297,028 ops/s

# Run progress: 82,64% complete, ETA 02:07:51
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
22467,566 ops/s
# Warmup Iteration   2: 23995,319 ops/s
# Warmup Iteration   3: 23230,254 ops/s
Iteration   1: 22176,824 ops/s
Iteration   2: 21114,240 ops/s
Iteration   3: 20934,498 ops/s
Iteration   4: 20538,069 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
20992,397 ops/s


Result "testSimpleScheduling08":
  21408,232 Â±(99.9%) 952,179 ops/s [Average]
  (min, avg, max) = (20538,069, 21408,232, 22706,589), stdev = 629,807
  CI (99.9%): [20456,053, 22360,411] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testSimpleScheduling08
# Parameters: (strategy = J9FjFifo)

# Run progress: 82,87% complete, ETA 02:06:10
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
22450,574 ops/s
# Warmup Iteration   2: 23500,557 ops/s
# Warmup Iteration   3: 24549,932 ops/s
Iteration   1: 22355,555 ops/s
Iteration   2: 20959,528 ops/s
Iteration   3: 21242,083 ops/s
Iteration   4: 21227,924 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
21318,732 ops/s

# Run progress: 83,10% complete, ETA 02:04:29
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
19653,512 ops/s
# Warmup Iteration   2: 22910,995 ops/s
# Warmup Iteration   3: 23711,815 ops/s
Iteration   1: 22154,680 ops/s
Iteration   2: 20787,650 ops/s
Iteration   3: 20790,050 ops/s
Iteration   4: 21039,277 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
20968,632 ops/s


Result "testSimpleScheduling08":
  21284,411 Â±(99.9%) 823,064 ops/s [Average]
  (min, avg, max) = (20787,650, 21284,411, 22355,555), stdev = 544,406
  CI (99.9%): [20461,348, 22107,475] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 15 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testSimpleScheduling15
# Parameters: (strategy = a-sync-block)

# Run progress: 83,33% complete, ETA 02:02:47
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
16522,529 ops/s
# Warmup Iteration   2: 16897,092 ops/s
# Warmup Iteration   3: 14028,377 ops/s
Iteration   1: 12302,839 ops/s
Iteration   2: 12816,080 ops/s
Iteration   3: 12499,239 ops/s
Iteration   4: 12840,624 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=169019910, numSharedTasksExecuted=169019910, numSteals=0, numExceptions=0, numParks=8, numFalseAlarmUnparks=0, numSharedQueueSwitches=20439, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=167624007, numSharedTasksExecuted=167624007, numSteals=0, numExceptions=0, numParks=8, numFalseAlarmUnparks=0, numSharedQueueSwitches=19754, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=170241584, numSharedTasksExecuted=170241584, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=19650, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=170690000, numSharedTasksExecuted=170690000, numSteals=0, numExceptions=0, numParks=8, numFalseAlarmUnparks=0, numSharedQueueSwitches=19862, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=165578763, numSharedTasksExecuted=165578763, numSteals=0, numExceptions=0, numParks=8, numFalseAlarmUnparks=0, numSharedQueueSwitches=18482, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=172785633, numSharedTasksExecuted=172785633, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=20513, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=170320776, numSharedTasksExecuted=170320776, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=19609, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=168292335, numSharedTasksExecuted=168292335, numSteals=0, numExceptions=0, numParks=8, numFalseAlarmUnparks=0, numSharedQueueSwitches=19505, numLocalSubmits=0, approximateLocalQueueSize=0}
--------------------------------
12333,126 ops/s

# Run progress: 83,56% complete, ETA 02:01:06
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
15401,724 ops/s
# Warmup Iteration   2: 13367,749 ops/s
# Warmup Iteration   3: 10247,147 ops/s
Iteration   1: 13018,191 ops/s
Iteration   2: 12490,635 ops/s
Iteration   3: 10943,676 ops/s
Iteration   4: 11233,271 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=167101394, numSharedTasksExecuted=167101394, numSteals=0, numExceptions=0, numParks=143, numFalseAlarmUnparks=8, numSharedQueueSwitches=35525, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=158930010, numSharedTasksExecuted=158930010, numSteals=0, numExceptions=0, numParks=200, numFalseAlarmUnparks=6, numSharedQueueSwitches=27512, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=166203913, numSharedTasksExecuted=166203913, numSteals=0, numExceptions=0, numParks=203, numFalseAlarmUnparks=4, numSharedQueueSwitches=36548, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=168066026, numSharedTasksExecuted=168066026, numSteals=0, numExceptions=0, numParks=77, numFalseAlarmUnparks=2, numSharedQueueSwitches=34869, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=164086143, numSharedTasksExecuted=164086143, numSteals=0, numExceptions=0, numParks=10, numFalseAlarmUnparks=1, numSharedQueueSwitches=39325, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=167718003, numSharedTasksExecuted=167718003, numSteals=0, numExceptions=0, numParks=115, numFalseAlarmUnparks=1, numSharedQueueSwitches=46624, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=154497119, numSharedTasksExecuted=154497119, numSteals=0, numExceptions=0, numParks=64, numFalseAlarmUnparks=4, numSharedQueueSwitches=37321, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=163271400, numSharedTasksExecuted=163271400, numSteals=0, numExceptions=0, numParks=38, numFalseAlarmUnparks=1, numSharedQueueSwitches=32922, numLocalSubmits=0, approximateLocalQueueSize=0}
--------------------------------
10687,651 ops/s


Result "testSimpleScheduling15":
  12116,533 Â±(99.9%) 1274,128 ops/s [Average]
  (min, avg, max) = (10687,651, 12116,533, 13018,191), stdev = 842,757
  CI (99.9%): [10842,405, 13390,661] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 15 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testSimpleScheduling15
# Parameters: (strategy = a-sync-nocheck)

# Run progress: 83,80% complete, ETA 01:59:25
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
15912,415 ops/s
# Warmup Iteration   2: 14092,375 ops/s
# Warmup Iteration   3: 10491,057 ops/s
Iteration   1: 12868,085 ops/s
Iteration   2: 12750,751 ops/s
Iteration   3: 13011,137 ops/s
Iteration   4: 12582,450 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=180124858, numSharedTasksExecuted=180124858, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=29262, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=175903164, numSharedTasksExecuted=175903164, numSteals=0, numExceptions=0, numParks=12, numFalseAlarmUnparks=0, numSharedQueueSwitches=27857, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=177443506, numSharedTasksExecuted=177443506, numSteals=0, numExceptions=0, numParks=8, numFalseAlarmUnparks=0, numSharedQueueSwitches=28265, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=179455701, numSharedTasksExecuted=179455701, numSteals=0, numExceptions=0, numParks=8, numFalseAlarmUnparks=0, numSharedQueueSwitches=38212, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=176691811, numSharedTasksExecuted=176691811, numSteals=0, numExceptions=0, numParks=11, numFalseAlarmUnparks=1, numSharedQueueSwitches=26095, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=169721069, numSharedTasksExecuted=169721069, numSteals=0, numExceptions=0, numParks=10, numFalseAlarmUnparks=0, numSharedQueueSwitches=26991, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=177267011, numSharedTasksExecuted=177267011, numSteals=0, numExceptions=0, numParks=13, numFalseAlarmUnparks=0, numSharedQueueSwitches=43451, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=156420888, numSharedTasksExecuted=156420888, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=22091, numLocalSubmits=0, approximateLocalQueueSize=0}
--------------------------------
13215,669 ops/s

# Run progress: 84,03% complete, ETA 01:57:44
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
17679,659 ops/s
# Warmup Iteration   2: 15840,620 ops/s
# Warmup Iteration   3: 14529,186 ops/s
Iteration   1: 15846,848 ops/s
Iteration   2: 16248,952 ops/s
Iteration   3: 15627,525 ops/s
Iteration   4: 14748,503 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=205424174, numSharedTasksExecuted=205424174, numSteals=0, numExceptions=0, numParks=11, numFalseAlarmUnparks=0, numSharedQueueSwitches=100788, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=199482192, numSharedTasksExecuted=199482192, numSteals=0, numExceptions=0, numParks=12, numFalseAlarmUnparks=1, numSharedQueueSwitches=55634, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=209142033, numSharedTasksExecuted=209142033, numSteals=0, numExceptions=0, numParks=12, numFalseAlarmUnparks=0, numSharedQueueSwitches=40876, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=208798720, numSharedTasksExecuted=208798720, numSteals=0, numExceptions=0, numParks=18, numFalseAlarmUnparks=0, numSharedQueueSwitches=53043, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=203024594, numSharedTasksExecuted=203024594, numSteals=0, numExceptions=0, numParks=11, numFalseAlarmUnparks=0, numSharedQueueSwitches=52330, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=209283169, numSharedTasksExecuted=209283169, numSteals=0, numExceptions=0, numParks=12, numFalseAlarmUnparks=0, numSharedQueueSwitches=46548, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=206669027, numSharedTasksExecuted=206669027, numSteals=0, numExceptions=0, numParks=13, numFalseAlarmUnparks=0, numSharedQueueSwitches=49568, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=203470099, numSharedTasksExecuted=203470099, numSteals=0, numExceptions=0, numParks=17, numFalseAlarmUnparks=0, numSharedQueueSwitches=44634, numLocalSubmits=0, approximateLocalQueueSize=0}
--------------------------------
14697,499 ops/s


Result "testSimpleScheduling15":
  14159,742 Â±(99.9%) 2158,975 ops/s [Average]
  (min, avg, max) = (12582,450, 14159,742, 16248,952), stdev = 1428,028
  CI (99.9%): [12000,767, 16318,717] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 15 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testSimpleScheduling15
# Parameters: (strategy = a-lock-block)

# Run progress: 84,26% complete, ETA 01:56:03
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
13322,883 ops/s
# Warmup Iteration   2: 12556,937 ops/s
# Warmup Iteration   3: 8456,425 ops/s
Iteration   1: 13330,525 ops/s
Iteration   2: 11818,622 ops/s
Iteration   3: 12534,900 ops/s
Iteration   4: 13025,774 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=176289350, numSharedTasksExecuted=176289350, numSteals=0, numExceptions=0, numParks=11, numFalseAlarmUnparks=0, numSharedQueueSwitches=7945, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=171071144, numSharedTasksExecuted=171071144, numSteals=0, numExceptions=0, numParks=11, numFalseAlarmUnparks=0, numSharedQueueSwitches=7890, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=163180732, numSharedTasksExecuted=163180732, numSteals=0, numExceptions=0, numParks=11, numFalseAlarmUnparks=0, numSharedQueueSwitches=6760, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=177422723, numSharedTasksExecuted=177422723, numSteals=0, numExceptions=0, numParks=12, numFalseAlarmUnparks=1, numSharedQueueSwitches=8118, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=174118194, numSharedTasksExecuted=174118194, numSteals=0, numExceptions=0, numParks=11, numFalseAlarmUnparks=0, numSharedQueueSwitches=7778, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=177151734, numSharedTasksExecuted=177151734, numSteals=0, numExceptions=0, numParks=11, numFalseAlarmUnparks=0, numSharedQueueSwitches=8177, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=174238687, numSharedTasksExecuted=174238687, numSteals=0, numExceptions=0, numParks=11, numFalseAlarmUnparks=0, numSharedQueueSwitches=7876, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=164293444, numSharedTasksExecuted=164293444, numSteals=0, numExceptions=0, numParks=11, numFalseAlarmUnparks=0, numSharedQueueSwitches=6945, numLocalSubmits=0, approximateLocalQueueSize=0}
--------------------------------
12461,904 ops/s

# Run progress: 84,49% complete, ETA 01:54:22
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
14709,470 ops/s
# Warmup Iteration   2: 14965,687 ops/s
# Warmup Iteration   3: 9044,743 ops/s
Iteration   1: 9660,809 ops/s
Iteration   2: 10318,584 ops/s
Iteration   3: 10004,732 ops/s
Iteration   4: 10705,550 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=161425689, numSharedTasksExecuted=161425689, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=5504, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=165100772, numSharedTasksExecuted=165100772, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=5662, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=164689670, numSharedTasksExecuted=164689670, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=5581, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=166487352, numSharedTasksExecuted=166487352, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=5995, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=164070156, numSharedTasksExecuted=164070156, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=5534, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=162287191, numSharedTasksExecuted=162287191, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=5692, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=158509272, numSharedTasksExecuted=158509272, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=5000, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=164887906, numSharedTasksExecuted=164887906, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=5591, numLocalSubmits=0, approximateLocalQueueSize=0}
--------------------------------
10171,820 ops/s


Result "testSimpleScheduling15":
  11403,322 Â±(99.9%) 2083,497 ops/s [Average]
  (min, avg, max) = (9660,809, 11403,322, 13330,525), stdev = 1378,104
  CI (99.9%): [9319,825, 13486,819] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 15 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testSimpleScheduling15
# Parameters: (strategy = a-nonblocking)

# Run progress: 84,72% complete, ETA 01:52:43
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
14767,869 ops/s
# Warmup Iteration   2: 10734,306 ops/s
# Warmup Iteration   3: 17125,959 ops/s
Iteration   1: 13431,895 ops/s
Iteration   2: 12793,761 ops/s
Iteration   3: 10819,589 ops/s
Iteration   4: 12989,093 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=179513331, numSharedTasksExecuted=179513331, numSteals=0, numExceptions=0, numParks=13, numFalseAlarmUnparks=0, numSharedQueueSwitches=15349, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=183527845, numSharedTasksExecuted=183527845, numSteals=0, numExceptions=0, numParks=26, numFalseAlarmUnparks=1, numSharedQueueSwitches=12483, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=185239564, numSharedTasksExecuted=185239564, numSteals=0, numExceptions=0, numParks=20, numFalseAlarmUnparks=1, numSharedQueueSwitches=10109, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=185331052, numSharedTasksExecuted=185331052, numSteals=0, numExceptions=0, numParks=14, numFalseAlarmUnparks=0, numSharedQueueSwitches=11874, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=165169170, numSharedTasksExecuted=165169170, numSteals=0, numExceptions=0, numParks=12, numFalseAlarmUnparks=0, numSharedQueueSwitches=4869, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=182988599, numSharedTasksExecuted=182988599, numSteals=0, numExceptions=0, numParks=12, numFalseAlarmUnparks=0, numSharedQueueSwitches=6759, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=187916109, numSharedTasksExecuted=187916109, numSteals=0, numExceptions=0, numParks=11, numFalseAlarmUnparks=0, numSharedQueueSwitches=14075, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=172155338, numSharedTasksExecuted=172155338, numSteals=0, numExceptions=0, numParks=11, numFalseAlarmUnparks=0, numSharedQueueSwitches=7439, numLocalSubmits=0, approximateLocalQueueSize=0}
--------------------------------
14967,486 ops/s

# Run progress: 84,95% complete, ETA 01:51:02
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
14281,274 ops/s
# Warmup Iteration   2: 9273,951 ops/s
# Warmup Iteration   3: 49799,746 ops/s
Iteration   1: 13901,480 ops/s
Iteration   2: 13127,853 ops/s
Iteration   3: 13274,593 ops/s
Iteration   4: 15006,060 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=199091939, numSharedTasksExecuted=199091939, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=4744, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=200301639, numSharedTasksExecuted=200301639, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=4907, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=207064378, numSharedTasksExecuted=207064378, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=4673, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=213872556, numSharedTasksExecuted=213872556, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=6301, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=201101889, numSharedTasksExecuted=201101889, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=4678, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=208062131, numSharedTasksExecuted=208062131, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=4536, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=207746336, numSharedTasksExecuted=207746336, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=6235, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=202049140, numSharedTasksExecuted=202049140, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=4815, numLocalSubmits=0, approximateLocalQueueSize=0}
--------------------------------
13403,524 ops/s


Result "testSimpleScheduling15":
  13371,533 Â±(99.9%) 1786,405 ops/s [Average]
  (min, avg, max) = (10819,589, 13371,533, 15006,060), stdev = 1181,596
  CI (99.9%): [11585,128, 15157,939] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 15 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testSimpleScheduling15
# Parameters: (strategy = no-conc)

# Run progress: 85,19% complete, ETA 01:49:22
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
619533,227 ops/s
# Warmup Iteration   2: 606895,490 ops/s
# Warmup Iteration   3: 627076,783 ops/s
Iteration   1: 607787,793 ops/s
Iteration   2: 603068,922 ops/s
Iteration   3: 602327,480 ops/s
Iteration   4: 602475,552 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
602405,942 ops/s

# Run progress: 85,42% complete, ETA 01:47:40
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
593364,505 ops/s
# Warmup Iteration   2: 606647,833 ops/s
# Warmup Iteration   3: 591057,327 ops/s
Iteration   1: 590653,370 ops/s
Iteration   2: 603670,704 ops/s
Iteration   3: 602896,906 ops/s
Iteration   4: 602504,158 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
602851,755 ops/s


Result "testSimpleScheduling15":
  602064,258 Â±(99.9%) 6540,118 ops/s [Average]
  (min, avg, max) = (590653,370, 602064,258, 607787,793), stdev = 4325,883
  CI (99.9%): [595524,140, 608604,376] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 15 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testSimpleScheduling15
# Parameters: (strategy = ForkJoinLifo)

# Run progress: 85,65% complete, ETA 01:45:59
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
25139,620 ops/s
# Warmup Iteration   2: 25456,493 ops/s
# Warmup Iteration   3: 25761,099 ops/s
Iteration   1: 24679,768 ops/s
Iteration   2: 24124,020 ops/s
Iteration   3: 24061,230 ops/s
Iteration   4: 24038,030 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
24124,175 ops/s

# Run progress: 85,88% complete, ETA 01:44:17
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
22895,359 ops/s
# Warmup Iteration   2: 25281,954 ops/s
# Warmup Iteration   3: 25734,585 ops/s
Iteration   1: 24696,416 ops/s
Iteration   2: 24386,907 ops/s
Iteration   3: 24377,196 ops/s
Iteration   4: 24392,919 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
24377,845 ops/s


Result "testSimpleScheduling15":
  24325,851 Â±(99.9%) 360,040 ops/s [Average]
  (min, avg, max) = (24038,030, 24325,851, 24696,416), stdev = 238,144
  CI (99.9%): [23965,810, 24685,891] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 15 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testSimpleScheduling15
# Parameters: (strategy = J9FjSharedQueues)

# Run progress: 86,11% complete, ETA 01:42:35
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
23819,006 ops/s
# Warmup Iteration   2: 24932,534 ops/s
# Warmup Iteration   3: 24978,949 ops/s
Iteration   1: 23388,863 ops/s
Iteration   2: 23002,837 ops/s
Iteration   3: 23054,259 ops/s
Iteration   4: 22981,508 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
23063,180 ops/s

# Run progress: 86,34% complete, ETA 01:40:53
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
23744,652 ops/s
# Warmup Iteration   2: 24438,897 ops/s
# Warmup Iteration   3: 24673,619 ops/s
Iteration   1: 23425,074 ops/s
Iteration   2: 22917,574 ops/s
Iteration   3: 22844,001 ops/s
Iteration   4: 22891,558 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
22894,942 ops/s


Result "testSimpleScheduling15":
  23046,379 Â±(99.9%) 307,206 ops/s [Average]
  (min, avg, max) = (22844,001, 23046,379, 23425,074), stdev = 203,198
  CI (99.9%): [22739,174, 23353,585] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 15 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testSimpleScheduling15
# Parameters: (strategy = J9FjLifo)

# Run progress: 86,57% complete, ETA 01:39:11
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
23379,409 ops/s
# Warmup Iteration   2: 24632,556 ops/s
# Warmup Iteration   3: 24412,714 ops/s
Iteration   1: 23484,592 ops/s
Iteration   2: 23169,963 ops/s
Iteration   3: 23166,115 ops/s
Iteration   4: 23241,717 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
23152,527 ops/s

# Run progress: 86,81% complete, ETA 01:37:29
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
23386,548 ops/s
# Warmup Iteration   2: 24053,862 ops/s
# Warmup Iteration   3: 23946,288 ops/s
Iteration   1: 22820,533 ops/s
Iteration   2: 22513,195 ops/s
Iteration   3: 22423,770 ops/s
Iteration   4: 22598,238 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
22431,572 ops/s


Result "testSimpleScheduling15":
  22900,222 Â±(99.9%) 587,531 ops/s [Average]
  (min, avg, max) = (22423,770, 22900,222, 23484,592), stdev = 388,616
  CI (99.9%): [22312,691, 23487,754] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 15 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testSimpleScheduling15
# Parameters: (strategy = J9FjFifo)

# Run progress: 87,04% complete, ETA 01:35:47
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
22888,635 ops/s
# Warmup Iteration   2: 21720,864 ops/s
# Warmup Iteration   3: 21784,056 ops/s
Iteration   1: 20934,002 ops/s
Iteration   2: 20641,178 ops/s
Iteration   3: 20589,372 ops/s
Iteration   4: 20624,757 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
20584,252 ops/s

# Run progress: 87,27% complete, ETA 01:34:05
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
24239,165 ops/s
# Warmup Iteration   2: 24085,709 ops/s
# Warmup Iteration   3: 24429,118 ops/s
Iteration   1: 23173,733 ops/s
Iteration   2: 22530,499 ops/s
Iteration   3: 22565,959 ops/s
Iteration   4: 22608,391 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
22608,143 ops/s


Result "testSimpleScheduling15":
  21686,029 Â±(99.9%) 1640,893 ops/s [Average]
  (min, avg, max) = (20584,252, 21686,029, 23173,733), stdev = 1085,349
  CI (99.9%): [20045,136, 23326,922] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testSimpleScheduling16
# Parameters: (strategy = a-sync-block)

# Run progress: 87,50% complete, ETA 01:32:23
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
20570,683 ops/s
# Warmup Iteration   2: 18714,648 ops/s
# Warmup Iteration   3: 16328,909 ops/s
Iteration   1: 16956,611 ops/s
Iteration   2: 17514,713 ops/s
Iteration   3: 17000,696 ops/s
Iteration   4: 16048,381 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=229365446, numSharedTasksExecuted=229365446, numSteals=0, numExceptions=0, numParks=13, numFalseAlarmUnparks=2, numSharedQueueSwitches=59893, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=224404277, numSharedTasksExecuted=224404277, numSteals=0, numExceptions=0, numParks=14, numFalseAlarmUnparks=1, numSharedQueueSwitches=44265, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=230110936, numSharedTasksExecuted=230110936, numSteals=0, numExceptions=0, numParks=11, numFalseAlarmUnparks=0, numSharedQueueSwitches=51108, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=232410140, numSharedTasksExecuted=232410140, numSteals=0, numExceptions=0, numParks=18, numFalseAlarmUnparks=0, numSharedQueueSwitches=46618, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=226821711, numSharedTasksExecuted=226821711, numSteals=0, numExceptions=0, numParks=12, numFalseAlarmUnparks=1, numSharedQueueSwitches=42497, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=214023324, numSharedTasksExecuted=214023324, numSteals=0, numExceptions=0, numParks=28, numFalseAlarmUnparks=2, numSharedQueueSwitches=51906, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=234071769, numSharedTasksExecuted=234071769, numSteals=0, numExceptions=0, numParks=18, numFalseAlarmUnparks=0, numSharedQueueSwitches=43794, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=232269405, numSharedTasksExecuted=232269405, numSteals=0, numExceptions=0, numParks=13, numFalseAlarmUnparks=0, numSharedQueueSwitches=45925, numLocalSubmits=0, approximateLocalQueueSize=0}
--------------------------------
17750,523 ops/s

# Run progress: 87,73% complete, ETA 01:30:41
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
14219,238 ops/s
# Warmup Iteration   2: 19042,278 ops/s
# Warmup Iteration   3: 12875,311 ops/s
Iteration   1: 15019,288 ops/s
Iteration   2: 13050,535 ops/s
Iteration   3: 13828,358 ops/s
Iteration   4: 12730,876 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=189248507, numSharedTasksExecuted=189248507, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=22920, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=182491144, numSharedTasksExecuted=182491144, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=20719, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=187535637, numSharedTasksExecuted=187535637, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=22357, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=189058521, numSharedTasksExecuted=189058521, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=21665, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=188964715, numSharedTasksExecuted=188964715, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=22693, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=169527082, numSharedTasksExecuted=169527082, numSteals=0, numExceptions=0, numParks=8, numFalseAlarmUnparks=0, numSharedQueueSwitches=17057, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=186550754, numSharedTasksExecuted=186550754, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=31724, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=186892648, numSharedTasksExecuted=186892648, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=21984, numLocalSubmits=0, approximateLocalQueueSize=0}
--------------------------------
14166,261 ops/s


Result "testSimpleScheduling16":
  15406,624 Â±(99.9%) 2858,948 ops/s [Average]
  (min, avg, max) = (12730,876, 15406,624, 17750,523), stdev = 1891,017
  CI (99.9%): [12547,676, 18265,572] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testSimpleScheduling16
# Parameters: (strategy = a-sync-nocheck)

# Run progress: 87,96% complete, ETA 01:28:59
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
15849,776 ops/s
# Warmup Iteration   2: 16857,627 ops/s
# Warmup Iteration   3: 18253,988 ops/s
Iteration   1: 13227,198 ops/s
Iteration   2: 13844,142 ops/s
Iteration   3: 14581,730 ops/s
Iteration   4: 14170,481 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=191648625, numSharedTasksExecuted=191648625, numSteals=0, numExceptions=0, numParks=10, numFalseAlarmUnparks=0, numSharedQueueSwitches=28910, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=188902918, numSharedTasksExecuted=188902918, numSteals=0, numExceptions=0, numParks=10, numFalseAlarmUnparks=0, numSharedQueueSwitches=25229, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=190019793, numSharedTasksExecuted=190019793, numSteals=0, numExceptions=0, numParks=10, numFalseAlarmUnparks=0, numSharedQueueSwitches=24808, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=185840291, numSharedTasksExecuted=185840291, numSteals=0, numExceptions=0, numParks=10, numFalseAlarmUnparks=0, numSharedQueueSwitches=26370, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=184526865, numSharedTasksExecuted=184526865, numSteals=0, numExceptions=0, numParks=10, numFalseAlarmUnparks=0, numSharedQueueSwitches=22058, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=193288417, numSharedTasksExecuted=193288417, numSteals=0, numExceptions=0, numParks=11, numFalseAlarmUnparks=0, numSharedQueueSwitches=25859, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=184496002, numSharedTasksExecuted=184496002, numSteals=0, numExceptions=0, numParks=11, numFalseAlarmUnparks=0, numSharedQueueSwitches=26329, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=193115097, numSharedTasksExecuted=193115097, numSteals=0, numExceptions=0, numParks=11, numFalseAlarmUnparks=0, numSharedQueueSwitches=28675, numLocalSubmits=0, approximateLocalQueueSize=0}
--------------------------------
13414,863 ops/s

# Run progress: 88,19% complete, ETA 01:27:18
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
14343,508 ops/s
# Warmup Iteration   2: 20014,825 ops/s
# Warmup Iteration   3: 12586,181 ops/s
Iteration   1: 13447,356 ops/s
Iteration   2: 13336,092 ops/s
Iteration   3: 14067,138 ops/s
Iteration   4: 13542,717 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=188950551, numSharedTasksExecuted=188950551, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=24639, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=189567176, numSharedTasksExecuted=189567176, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=25060, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=188005744, numSharedTasksExecuted=188005744, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=25215, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=187460158, numSharedTasksExecuted=187460158, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=23558, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=191461304, numSharedTasksExecuted=191461304, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=25121, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=190482028, numSharedTasksExecuted=190482028, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=24606, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=171179180, numSharedTasksExecuted=171179180, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=19868, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=192330867, numSharedTasksExecuted=192330867, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=24843, numLocalSubmits=0, approximateLocalQueueSize=0}
--------------------------------
14568,086 ops/s


Result "testSimpleScheduling16":
  13819,980 Â±(99.9%) 762,590 ops/s [Average]
  (min, avg, max) = (13227,198, 13819,980, 14581,730), stdev = 504,406
  CI (99.9%): [13057,390, 14582,570] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testSimpleScheduling16
# Parameters: (strategy = a-lock-block)

# Run progress: 88,43% complete, ETA 01:25:36
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
11098,733 ops/s
# Warmup Iteration   2: 15777,915 ops/s
# Warmup Iteration   3: 14818,187 ops/s
Iteration   1: 13008,948 ops/s
Iteration   2: 12497,640 ops/s
Iteration   3: 14918,205 ops/s
Iteration   4: 11936,139 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=172609223, numSharedTasksExecuted=172609223, numSteals=0, numExceptions=0, numParks=27, numFalseAlarmUnparks=0, numSharedQueueSwitches=12606, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=175874355, numSharedTasksExecuted=175874355, numSteals=0, numExceptions=0, numParks=19, numFalseAlarmUnparks=1, numSharedQueueSwitches=45161, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=177660877, numSharedTasksExecuted=177660877, numSteals=0, numExceptions=0, numParks=32, numFalseAlarmUnparks=1, numSharedQueueSwitches=25103, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=177497325, numSharedTasksExecuted=177497325, numSteals=0, numExceptions=0, numParks=18, numFalseAlarmUnparks=0, numSharedQueueSwitches=21990, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=172344205, numSharedTasksExecuted=172344205, numSteals=0, numExceptions=0, numParks=16, numFalseAlarmUnparks=2, numSharedQueueSwitches=27226, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=177891475, numSharedTasksExecuted=177891475, numSteals=0, numExceptions=0, numParks=14, numFalseAlarmUnparks=2, numSharedQueueSwitches=17884, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=174315923, numSharedTasksExecuted=174315923, numSteals=0, numExceptions=0, numParks=14, numFalseAlarmUnparks=2, numSharedQueueSwitches=17423, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=177116625, numSharedTasksExecuted=177116625, numSteals=0, numExceptions=0, numParks=11, numFalseAlarmUnparks=1, numSharedQueueSwitches=7640, numLocalSubmits=0, approximateLocalQueueSize=0}
--------------------------------
12547,763 ops/s

# Run progress: 88,66% complete, ETA 01:23:54
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
18879,926 ops/s
# Warmup Iteration   2: 16531,253 ops/s
# Warmup Iteration   3: 13107,146 ops/s
Iteration   1: 14221,524 ops/s
Iteration   2: 12014,470 ops/s
Iteration   3: 11376,192 ops/s
Iteration   4: 11827,096 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=181873964, numSharedTasksExecuted=181873964, numSteals=0, numExceptions=0, numParks=93, numFalseAlarmUnparks=1, numSharedQueueSwitches=19056, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=182852598, numSharedTasksExecuted=182852598, numSteals=0, numExceptions=0, numParks=52, numFalseAlarmUnparks=1, numSharedQueueSwitches=20171, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=185738146, numSharedTasksExecuted=185738146, numSteals=0, numExceptions=0, numParks=155, numFalseAlarmUnparks=2, numSharedQueueSwitches=9058, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=193430303, numSharedTasksExecuted=193430303, numSteals=0, numExceptions=0, numParks=161, numFalseAlarmUnparks=2, numSharedQueueSwitches=30549, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=177192716, numSharedTasksExecuted=177192716, numSteals=0, numExceptions=0, numParks=97, numFalseAlarmUnparks=1, numSharedQueueSwitches=11666, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=173653175, numSharedTasksExecuted=173653175, numSteals=0, numExceptions=0, numParks=96, numFalseAlarmUnparks=1, numSharedQueueSwitches=13431, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=188870920, numSharedTasksExecuted=188870920, numSteals=0, numExceptions=0, numParks=41, numFalseAlarmUnparks=0, numSharedQueueSwitches=14594, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=184066186, numSharedTasksExecuted=184066186, numSteals=0, numExceptions=0, numParks=16, numFalseAlarmUnparks=0, numSharedQueueSwitches=19036, numLocalSubmits=0, approximateLocalQueueSize=0}
--------------------------------
13957,745 ops/s


Result "testSimpleScheduling16":
  12830,572 Â±(99.9%) 1772,763 ops/s [Average]
  (min, avg, max) = (11376,192, 12830,572, 14918,205), stdev = 1172,573
  CI (99.9%): [11057,810, 14603,335] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testSimpleScheduling16
# Parameters: (strategy = a-nonblocking)

# Run progress: 88,89% complete, ETA 01:22:12
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
19452,095 ops/s
# Warmup Iteration   2: 13471,288 ops/s
# Warmup Iteration   3: 18466,818 ops/s
Iteration   1: 17247,630 ops/s
Iteration   2: 14472,845 ops/s
Iteration   3: 12870,267 ops/s
Iteration   4: 15102,070 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=216061546, numSharedTasksExecuted=216061546, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=6985, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=213037662, numSharedTasksExecuted=213037662, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=6953, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=216888978, numSharedTasksExecuted=216888978, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=6890, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=222886372, numSharedTasksExecuted=222886372, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=7218, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=210257456, numSharedTasksExecuted=210257456, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=6850, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=215822064, numSharedTasksExecuted=215822064, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=7004, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=196357722, numSharedTasksExecuted=196357722, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=5690, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=210496208, numSharedTasksExecuted=210496208, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=6887, numLocalSubmits=0, approximateLocalQueueSize=0}
--------------------------------
14624,938 ops/s

# Run progress: 89,12% complete, ETA 01:20:31
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
17023,785 ops/s
# Warmup Iteration   2: 14589,166 ops/s
# Warmup Iteration   3: 9251,214 ops/s
Iteration   1: 17812,004 ops/s
Iteration   2: 14493,539 ops/s
Iteration   3: 16902,694 ops/s
Iteration   4: 13891,682 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=225985664, numSharedTasksExecuted=225985664, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=8457, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=218208838, numSharedTasksExecuted=218208838, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=12847, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=222936871, numSharedTasksExecuted=222936871, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=11485, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=234046840, numSharedTasksExecuted=234046840, numSteals=0, numExceptions=0, numParks=10, numFalseAlarmUnparks=1, numSharedQueueSwitches=9012, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=221013331, numSharedTasksExecuted=221013331, numSteals=0, numExceptions=0, numParks=10, numFalseAlarmUnparks=0, numSharedQueueSwitches=8492, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=228616454, numSharedTasksExecuted=228616454, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=7647, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=208205403, numSharedTasksExecuted=208205403, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=7518, numLocalSubmits=0, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=217241607, numSharedTasksExecuted=217241607, numSteals=0, numExceptions=0, numParks=9, numFalseAlarmUnparks=0, numSharedQueueSwitches=8796, numLocalSubmits=0, approximateLocalQueueSize=0}
--------------------------------
15644,216 ops/s


Result "testSimpleScheduling16":
  15306,189 Â±(99.9%) 2390,805 ops/s [Average]
  (min, avg, max) = (12870,267, 15306,189, 17812,004), stdev = 1581,369
  CI (99.9%): [12915,384, 17696,994] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testSimpleScheduling16
# Parameters: (strategy = no-conc)

# Run progress: 89,35% complete, ETA 01:18:49
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
601097,047 ops/s
# Warmup Iteration   2: 605928,934 ops/s
# Warmup Iteration   3: 627501,482 ops/s
Iteration   1: 606497,147 ops/s
Iteration   2: 605678,914 ops/s
Iteration   3: 605351,100 ops/s
Iteration   4: 605450,111 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
604804,524 ops/s

# Run progress: 89,58% complete, ETA 01:17:07
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
604378,578 ops/s
# Warmup Iteration   2: 627105,209 ops/s
# Warmup Iteration   3: 627752,597 ops/s
Iteration   1: 603781,247 ops/s
Iteration   2: 602292,640 ops/s
Iteration   3: 602026,961 ops/s
Iteration   4: 601727,937 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
601780,543 ops/s


Result "testSimpleScheduling16":
  603939,112 Â±(99.9%) 2784,858 ops/s [Average]
  (min, avg, max) = (601727,937, 603939,112, 606497,147), stdev = 1842,011
  CI (99.9%): [601154,254, 606723,970] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testSimpleScheduling16
# Parameters: (strategy = ForkJoinLifo)

# Run progress: 89,81% complete, ETA 01:15:25
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
23829,928 ops/s
# Warmup Iteration   2: 24872,558 ops/s
# Warmup Iteration   3: 24923,174 ops/s
Iteration   1: 23953,651 ops/s
Iteration   2: 23459,410 ops/s
Iteration   3: 23518,643 ops/s
Iteration   4: 23506,671 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
23473,231 ops/s

# Run progress: 90,05% complete, ETA 01:13:42
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
25329,400 ops/s
# Warmup Iteration   2: 25607,084 ops/s
# Warmup Iteration   3: 25760,672 ops/s
Iteration   1: 24739,614 ops/s
Iteration   2: 24327,180 ops/s
Iteration   3: 24272,715 ops/s
Iteration   4: 24299,305 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
24408,738 ops/s


Result "testSimpleScheduling16":
  23995,916 Â±(99.9%) 718,354 ops/s [Average]
  (min, avg, max) = (23459,410, 23995,916, 24739,614), stdev = 475,147
  CI (99.9%): [23277,561, 24714,270] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testSimpleScheduling16
# Parameters: (strategy = J9FjSharedQueues)

# Run progress: 90,28% complete, ETA 01:12:00
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
24791,917 ops/s
# Warmup Iteration   2: 24877,576 ops/s
# Warmup Iteration   3: 25381,242 ops/s
Iteration   1: 23942,819 ops/s
Iteration   2: 23471,998 ops/s
Iteration   3: 23529,297 ops/s
Iteration   4: 23534,778 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
23543,746 ops/s

# Run progress: 90,51% complete, ETA 01:10:18
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
24622,177 ops/s
# Warmup Iteration   2: 26365,762 ops/s
# Warmup Iteration   3: 26490,478 ops/s
Iteration   1: 25350,559 ops/s
Iteration   2: 24717,535 ops/s
Iteration   3: 24678,212 ops/s
Iteration   4: 24659,840 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
24804,146 ops/s


Result "testSimpleScheduling16":
  24223,293 Â±(99.9%) 1046,293 ops/s [Average]
  (min, avg, max) = (23471,998, 24223,293, 25350,559), stdev = 692,058
  CI (99.9%): [23177,000, 25269,586] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testSimpleScheduling16
# Parameters: (strategy = J9FjLifo)

# Run progress: 90,74% complete, ETA 01:08:35
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
24345,825 ops/s
# Warmup Iteration   2: 25162,092 ops/s
# Warmup Iteration   3: 25196,418 ops/s
Iteration   1: 24356,037 ops/s
Iteration   2: 23740,282 ops/s
Iteration   3: 23781,464 ops/s
Iteration   4: 23909,952 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
23949,220 ops/s

# Run progress: 90,97% complete, ETA 01:06:53
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
23023,596 ops/s
# Warmup Iteration   2: 23775,786 ops/s
# Warmup Iteration   3: 25172,752 ops/s
Iteration   1: 23695,812 ops/s
Iteration   2: 23071,701 ops/s
Iteration   3: 23291,773 ops/s
Iteration   4: 23314,335 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
23324,161 ops/s


Result "testSimpleScheduling16":
  23643,474 Â±(99.9%) 588,633 ops/s [Average]
  (min, avg, max) = (23071,701, 23643,474, 24356,037), stdev = 389,344
  CI (99.9%): [23054,841, 24232,107] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 16 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testSimpleScheduling16
# Parameters: (strategy = J9FjFifo)

# Run progress: 91,20% complete, ETA 01:05:10
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
22725,286 ops/s
# Warmup Iteration   2: 22832,622 ops/s
# Warmup Iteration   3: 23119,571 ops/s
Iteration   1: 21801,277 ops/s
Iteration   2: 21577,726 ops/s
Iteration   3: 21589,478 ops/s
Iteration   4: 21552,220 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
21533,773 ops/s

# Run progress: 91,44% complete, ETA 01:03:28
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
23955,445 ops/s
# Warmup Iteration   2: 23908,817 ops/s
# Warmup Iteration   3: 24290,113 ops/s
Iteration   1: 22818,321 ops/s
Iteration   2: 22252,501 ops/s
Iteration   3: 22285,626 ops/s
Iteration   4: 22256,669 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
22252,417 ops/s


Result "testSimpleScheduling16":
  21992,001 Â±(99.9%) 666,314 ops/s [Average]
  (min, avg, max) = (21533,773, 21992,001, 22818,321), stdev = 440,726
  CI (99.9%): [21325,687, 22658,315] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testStealExpensive
# Parameters: (strategy = a-sync-block)

# Run progress: 91,67% complete, ETA 01:01:45
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
800,910 ops/s
# Warmup Iteration   2: 813,472 ops/s
# Warmup Iteration   3: 775,678 ops/s
Iteration   1: 721,318 ops/s
Iteration   2: 721,329 ops/s
Iteration   3: 722,088 ops/s
Iteration   4: 727,514 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=252233825, numSharedTasksExecuted=74048, numSteals=3410488, numExceptions=0, numParks=77225, numFalseAlarmUnparks=211, numSharedQueueSwitches=0, numLocalSubmits=740470000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=79749082, numSharedTasksExecuted=281, numSteals=78859339, numExceptions=0, numParks=77217, numFalseAlarmUnparks=56, numSharedQueueSwitches=1, numLocalSubmits=2800000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=79194322, numSharedTasksExecuted=81, numSteals=78999605, numExceptions=0, numParks=77169, numFalseAlarmUnparks=20, numSharedQueueSwitches=1, numLocalSubmits=800000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=73427805, numSharedTasksExecuted=88, numSteals=73142787, numExceptions=0, numParks=77137, numFalseAlarmUnparks=11, numSharedQueueSwitches=1, numLocalSubmits=870000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=76054975, numSharedTasksExecuted=91, numSteals=75772542, numExceptions=0, numParks=77131, numFalseAlarmUnparks=41, numSharedQueueSwitches=1, numLocalSubmits=900000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=73857707, numSharedTasksExecuted=337, numSteals=72707486, numExceptions=0, numParks=76827, numFalseAlarmUnparks=396, numSharedQueueSwitches=1, numLocalSubmits=3360000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=66965586, numSharedTasksExecuted=881, numSteals=64276595, numExceptions=0, numParks=75793, numFalseAlarmUnparks=1740, numSharedQueueSwitches=1, numLocalSubmits=8800000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=69313778, numSharedTasksExecuted=1273, numSteals=65351546, numExceptions=0, numParks=73328, numFalseAlarmUnparks=3767, numSharedQueueSwitches=1, numLocalSubmits=12720000, approximateLocalQueueSize=0}
--------------------------------
722,070 ops/s

# Run progress: 91,90% complete, ETA 01:00:03
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
812,883 ops/s
# Warmup Iteration   2: 807,032 ops/s
# Warmup Iteration   3: 789,741 ops/s
Iteration   1: 786,569 ops/s
Iteration   2: 782,787 ops/s
Iteration   3: 786,987 ops/s
Iteration   4: 786,175 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=255021351, numSharedTasksExecuted=79810, numSteals=3968083, numExceptions=0, numParks=83550, numFalseAlarmUnparks=156, numSharedQueueSwitches=0, numLocalSubmits=798090000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=91112458, numSharedTasksExecuted=133, numSteals=90668914, numExceptions=0, numParks=83741, numFalseAlarmUnparks=46, numSharedQueueSwitches=1, numLocalSubmits=1320000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=85638873, numSharedTasksExecuted=77, numSteals=85384232, numExceptions=0, numParks=83701, numFalseAlarmUnparks=14, numSharedQueueSwitches=1, numLocalSubmits=760000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=81646960, numSharedTasksExecuted=84, numSteals=81376797, numExceptions=0, numParks=83687, numFalseAlarmUnparks=16, numSharedQueueSwitches=1, numLocalSubmits=830000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=87747144, numSharedTasksExecuted=114, numSteals=87378048, numExceptions=0, numParks=83627, numFalseAlarmUnparks=55, numSharedQueueSwitches=1, numLocalSubmits=1130000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=82186264, numSharedTasksExecuted=486, numSteals=80497948, numExceptions=0, numParks=83202, numFalseAlarmUnparks=734, numSharedQueueSwitches=1, numLocalSubmits=4850000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=73871522, numSharedTasksExecuted=1131, numSteals=70008304, numExceptions=0, numParks=81586, numFalseAlarmUnparks=2586, numSharedQueueSwitches=1, numLocalSubmits=11300000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=77238874, numSharedTasksExecuted=1611, numSteals=71716779, numExceptions=0, numParks=78180, numFalseAlarmUnparks=5221, numSharedQueueSwitches=1, numLocalSubmits=16100000, approximateLocalQueueSize=0}
--------------------------------
788,238 ops/s


Result "testStealExpensive":
  754,507 Â±(99.9%) 50,540 ops/s [Average]
  (min, avg, max) = (721,318, 754,507, 788,238), stdev = 33,429
  CI (99.9%): [703,968, 805,047] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testStealExpensive
# Parameters: (strategy = a-sync-nocheck)

# Run progress: 92,13% complete, ETA 00:58:20
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
787,112 ops/s
# Warmup Iteration   2: 799,217 ops/s
# Warmup Iteration   3: 759,864 ops/s
Iteration   1: 757,182 ops/s
Iteration   2: 757,608 ops/s
Iteration   3: 757,237 ops/s
Iteration   4: 759,581 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=230715830, numSharedTasksExecuted=76918, numSteals=3913313, numExceptions=0, numParks=80538, numFalseAlarmUnparks=112, numSharedQueueSwitches=0, numLocalSubmits=769170000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=90191438, numSharedTasksExecuted=124, numSteals=89797420, numExceptions=0, numParks=80733, numFalseAlarmUnparks=41, numSharedQueueSwitches=1, numLocalSubmits=1230000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=84632362, numSharedTasksExecuted=76, numSteals=84393339, numExceptions=0, numParks=80695, numFalseAlarmUnparks=18, numSharedQueueSwitches=1, numLocalSubmits=750000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=80947046, numSharedTasksExecuted=65, numSteals=80734812, numExceptions=0, numParks=80700, numFalseAlarmUnparks=12, numSharedQueueSwitches=1, numLocalSubmits=640000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=87683739, numSharedTasksExecuted=102, numSteals=87343007, numExceptions=0, numParks=80636, numFalseAlarmUnparks=57, numSharedQueueSwitches=1, numLocalSubmits=1010000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=80897160, numSharedTasksExecuted=351, numSteals=79687325, numExceptions=0, numParks=80327, numFalseAlarmUnparks=512, numSharedQueueSwitches=1, numLocalSubmits=3500000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=73119813, numSharedTasksExecuted=1141, numSteals=69234850, numExceptions=0, numParks=78940, numFalseAlarmUnparks=2410, numSharedQueueSwitches=1, numLocalSubmits=11400000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=76993130, numSharedTasksExecuted=1741, numSteals=71325007, numExceptions=0, numParks=75516, numFalseAlarmUnparks=4645, numSharedQueueSwitches=1, numLocalSubmits=17400000, approximateLocalQueueSize=0}
--------------------------------
759,083 ops/s

# Run progress: 92,36% complete, ETA 00:56:37
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
773,788 ops/s
# Warmup Iteration   2: 748,010 ops/s
# Warmup Iteration   3: 714,936 ops/s
Iteration   1: 729,860 ops/s
Iteration   2: 729,828 ops/s
Iteration   3: 735,332 ops/s
Iteration   4: 732,065 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=250660512, numSharedTasksExecuted=74294, numSteals=3654474, numExceptions=0, numParks=77773, numFalseAlarmUnparks=128, numSharedQueueSwitches=0, numLocalSubmits=742930000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=84114921, numSharedTasksExecuted=103, numSteals=83805917, numExceptions=0, numParks=77763, numFalseAlarmUnparks=34, numSharedQueueSwitches=1, numLocalSubmits=1020000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=76214691, numSharedTasksExecuted=63, numSteals=75994593, numExceptions=0, numParks=77729, numFalseAlarmUnparks=9, numSharedQueueSwitches=1, numLocalSubmits=620000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=73404971, numSharedTasksExecuted=54, numSteals=73216607, numExceptions=0, numParks=77736, numFalseAlarmUnparks=9, numSharedQueueSwitches=1, numLocalSubmits=530000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=78540958, numSharedTasksExecuted=93, numSteals=78226354, numExceptions=0, numParks=77670, numFalseAlarmUnparks=51, numSharedQueueSwitches=1, numLocalSubmits=920000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=74733913, numSharedTasksExecuted=357, numSteals=73405136, numExceptions=0, numParks=77365, numFalseAlarmUnparks=422, numSharedQueueSwitches=1, numLocalSubmits=3560000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=68343083, numSharedTasksExecuted=1064, numSteals=64730502, numExceptions=0, numParks=76091, numFalseAlarmUnparks=2142, numSharedQueueSwitches=1, numLocalSubmits=10630000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=71004653, numSharedTasksExecuted=1674, numSteals=65182951, numExceptions=0, numParks=72985, numFalseAlarmUnparks=4221, numSharedQueueSwitches=1, numLocalSubmits=16730000, approximateLocalQueueSize=0}
--------------------------------
733,724 ops/s


Result "testStealExpensive":
  745,150 Â±(99.9%) 20,871 ops/s [Average]
  (min, avg, max) = (729,828, 745,150, 759,581), stdev = 13,805
  CI (99.9%): [724,279, 766,021] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testStealExpensive
# Parameters: (strategy = a-lock-block)

# Run progress: 92,59% complete, ETA 00:54:55
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
797,226 ops/s
# Warmup Iteration   2: 816,414 ops/s
# Warmup Iteration   3: 767,095 ops/s
Iteration   1: 773,600 ops/s
Iteration   2: 771,502 ops/s
Iteration   3: 774,578 ops/s
Iteration   4: 773,989 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=249304311, numSharedTasksExecuted=79078, numSteals=3285580, numExceptions=0, numParks=82108, numFalseAlarmUnparks=94, numSharedQueueSwitches=0, numLocalSubmits=790770000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=89148312, numSharedTasksExecuted=93, numSteals=88846668, numExceptions=0, numParks=82402, numFalseAlarmUnparks=39, numSharedQueueSwitches=1, numLocalSubmits=920000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=84554430, numSharedTasksExecuted=56, numSteals=84369075, numExceptions=0, numParks=82382, numFalseAlarmUnparks=11, numSharedQueueSwitches=1, numLocalSubmits=550000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=78859864, numSharedTasksExecuted=46, numSteals=78703513, numExceptions=0, numParks=82377, numFalseAlarmUnparks=7, numSharedQueueSwitches=1, numLocalSubmits=450000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=86904897, numSharedTasksExecuted=76, numSteals=86645168, numExceptions=0, numParks=82361, numFalseAlarmUnparks=33, numSharedQueueSwitches=1, numLocalSubmits=750000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=81388616, numSharedTasksExecuted=317, numSteals=80304676, numExceptions=0, numParks=82044, numFalseAlarmUnparks=466, numSharedQueueSwitches=1, numLocalSubmits=3160000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=76813074, numSharedTasksExecuted=925, numSteals=73944540, numExceptions=0, numParks=80868, numFalseAlarmUnparks=2846, numSharedQueueSwitches=1, numLocalSubmits=9240000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=74098603, numSharedTasksExecuted=1516, numSteals=69148963, numExceptions=0, numParks=77172, numFalseAlarmUnparks=5976, numSharedQueueSwitches=1, numLocalSubmits=15150000, approximateLocalQueueSize=0}
--------------------------------
772,951 ops/s

# Run progress: 92,82% complete, ETA 00:53:12
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
776,795 ops/s
# Warmup Iteration   2: 792,522 ops/s
# Warmup Iteration   3: 778,281 ops/s
Iteration   1: 768,209 ops/s
Iteration   2: 764,523 ops/s
Iteration   3: 766,178 ops/s
Iteration   4: 766,586 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=242432180, numSharedTasksExecuted=77987, numSteals=3609337, numExceptions=0, numParks=81359, numFalseAlarmUnparks=105, numSharedQueueSwitches=0, numLocalSubmits=779860000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=89657195, numSharedTasksExecuted=131, numSteals=89236787, numExceptions=0, numParks=81608, numFalseAlarmUnparks=46, numSharedQueueSwitches=1, numLocalSubmits=1300000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=83105528, numSharedTasksExecuted=70, numSteals=82879132, numExceptions=0, numParks=81545, numFalseAlarmUnparks=21, numSharedQueueSwitches=1, numLocalSubmits=690000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=80427586, numSharedTasksExecuted=75, numSteals=80175601, numExceptions=0, numParks=81528, numFalseAlarmUnparks=11, numSharedQueueSwitches=1, numLocalSubmits=740000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=86947907, numSharedTasksExecuted=87, numSteals=86659326, numExceptions=0, numParks=81509, numFalseAlarmUnparks=53, numSharedQueueSwitches=1, numLocalSubmits=860000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=81239138, numSharedTasksExecuted=333, numSteals=80073517, numExceptions=0, numParks=81212, numFalseAlarmUnparks=423, numSharedQueueSwitches=1, numLocalSubmits=3320000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=72506076, numSharedTasksExecuted=1012, numSteals=69092771, numExceptions=0, numParks=79995, numFalseAlarmUnparks=2341, numSharedQueueSwitches=1, numLocalSubmits=10110000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=76975719, numSharedTasksExecuted=1634, numSteals=71456084, numExceptions=0, numParks=76654, numFalseAlarmUnparks=4816, numSharedQueueSwitches=1, numLocalSubmits=16330000, approximateLocalQueueSize=0}
--------------------------------
765,595 ops/s


Result "testStealExpensive":
  769,771 Â±(99.9%) 5,945 ops/s [Average]
  (min, avg, max) = (764,523, 769,771, 774,578), stdev = 3,932
  CI (99.9%): [763,827, 775,716] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testStealExpensive
# Parameters: (strategy = a-nonblocking)

# Run progress: 93,06% complete, ETA 00:51:29
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
794,372 ops/s
# Warmup Iteration   2: 805,048 ops/s
# Warmup Iteration   3: 789,396 ops/s
Iteration   1: 790,317 ops/s
Iteration   2: 791,897 ops/s
Iteration   3: 788,394 ops/s
Iteration   4: 795,241 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=259623178, numSharedTasksExecuted=80374, numSteals=3937185, numExceptions=0, numParks=83914, numFalseAlarmUnparks=110, numSharedQueueSwitches=0, numLocalSubmits=803730000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=90937085, numSharedTasksExecuted=111, numSteals=90596247, numExceptions=0, numParks=84288, numFalseAlarmUnparks=34, numSharedQueueSwitches=1, numLocalSubmits=1100000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=85392781, numSharedTasksExecuted=82, numSteals=85132884, numExceptions=0, numParks=84277, numFalseAlarmUnparks=22, numSharedQueueSwitches=1, numLocalSubmits=810000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=80456678, numSharedTasksExecuted=80, numSteals=80215090, numExceptions=0, numParks=84253, numFalseAlarmUnparks=11, numSharedQueueSwitches=1, numLocalSubmits=790000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=88801902, numSharedTasksExecuted=105, numSteals=88464824, numExceptions=0, numParks=84233, numFalseAlarmUnparks=55, numSharedQueueSwitches=1, numLocalSubmits=1040000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=81190718, numSharedTasksExecuted=461, numSteals=79768163, numExceptions=0, numParks=83814, numFalseAlarmUnparks=678, numSharedQueueSwitches=1, numLocalSubmits=4600000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=74847587, numSharedTasksExecuted=1078, numSteals=71347841, numExceptions=0, numParks=82349, numFalseAlarmUnparks=2557, numSharedQueueSwitches=1, numLocalSubmits=10770000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=77633959, numSharedTasksExecuted=1597, numSteals=72614950, numExceptions=0, numParks=78854, numFalseAlarmUnparks=5167, numSharedQueueSwitches=1, numLocalSubmits=15960000, approximateLocalQueueSize=0}
--------------------------------
789,138 ops/s

# Run progress: 93,29% complete, ETA 00:49:47
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
811,310 ops/s
# Warmup Iteration   2: 789,196 ops/s
# Warmup Iteration   3: 768,866 ops/s
Iteration   1: 769,369 ops/s
Iteration   2: 768,419 ops/s
Iteration   3: 768,916 ops/s
Iteration   4: 769,171 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=248221081, numSharedTasksExecuted=78465, numSteals=3516587, numExceptions=0, numParks=81731, numFalseAlarmUnparks=95, numSharedQueueSwitches=0, numLocalSubmits=784640000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=88869334, numSharedTasksExecuted=99, numSteals=88545916, numExceptions=0, numParks=82009, numFalseAlarmUnparks=37, numSharedQueueSwitches=1, numLocalSubmits=980000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=84396845, numSharedTasksExecuted=71, numSteals=84163035, numExceptions=0, numParks=81949, numFalseAlarmUnparks=21, numSharedQueueSwitches=1, numLocalSubmits=700000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=80903221, numSharedTasksExecuted=69, numSteals=80685591, numExceptions=0, numParks=81932, numFalseAlarmUnparks=12, numSharedQueueSwitches=1, numLocalSubmits=680000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=86696344, numSharedTasksExecuted=94, numSteals=86377015, numExceptions=0, numParks=81894, numFalseAlarmUnparks=50, numSharedQueueSwitches=1, numLocalSubmits=930000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=79834246, numSharedTasksExecuted=387, numSteals=78556304, numExceptions=0, numParks=81525, numFalseAlarmUnparks=597, numSharedQueueSwitches=1, numLocalSubmits=3860000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=72993930, numSharedTasksExecuted=1048, numSteals=69457039, numExceptions=0, numParks=80116, numFalseAlarmUnparks=2554, numSharedQueueSwitches=1, numLocalSubmits=10470000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=74906681, numSharedTasksExecuted=1449, numSteals=70092699, numExceptions=0, numParks=76799, numFalseAlarmUnparks=5489, numSharedQueueSwitches=1, numLocalSubmits=14480000, approximateLocalQueueSize=0}
--------------------------------
770,659 ops/s


Result "testStealExpensive":
  780,152 Â±(99.9%) 17,519 ops/s [Average]
  (min, avg, max) = (768,419, 780,152, 795,241), stdev = 11,588
  CI (99.9%): [762,633, 797,671] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testStealExpensive
# Parameters: (strategy = no-conc)

# Run progress: 93,52% complete, ETA 00:48:04
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
530,129 ops/s
# Warmup Iteration   2: 540,194 ops/s
# Warmup Iteration   3: 540,142 ops/s
Iteration   1: 538,354 ops/s
Iteration   2: 538,749 ops/s
Iteration   3: 539,236 ops/s
Iteration   4: 538,873 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
539,656 ops/s

# Run progress: 93,75% complete, ETA 00:46:21
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
528,089 ops/s
# Warmup Iteration   2: 538,732 ops/s
# Warmup Iteration   3: 540,870 ops/s
Iteration   1: 521,014 ops/s
Iteration   2: 507,887 ops/s
Iteration   3: 506,650 ops/s
Iteration   4: 506,401 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
507,376 ops/s


Result "testStealExpensive":
  524,420 Â±(99.9%) 24,042 ops/s [Average]
  (min, avg, max) = (506,401, 524,420, 539,656), stdev = 15,902
  CI (99.9%): [500,378, 548,462] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testStealExpensive
# Parameters: (strategy = ForkJoinLifo)

# Run progress: 93,98% complete, ETA 00:44:38
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1009,681 ops/s
# Warmup Iteration   2: 1056,221 ops/s
# Warmup Iteration   3: 1050,851 ops/s
Iteration   1: 1040,518 ops/s
Iteration   2: 1036,971 ops/s
Iteration   3: 1003,052 ops/s
Iteration   4: 992,370 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
990,339 ops/s

# Run progress: 94,21% complete, ETA 00:42:55
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
991,834 ops/s
# Warmup Iteration   2: 1042,796 ops/s
# Warmup Iteration   3: 993,419 ops/s
Iteration   1: 979,090 ops/s
Iteration   2: 977,439 ops/s
Iteration   3: 974,946 ops/s
Iteration   4: 974,499 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
976,245 ops/s


Result "testStealExpensive":
  994,547 Â±(99.9%) 37,916 ops/s [Average]
  (min, avg, max) = (974,499, 994,547, 1040,518), stdev = 25,079
  CI (99.9%): [956,631, 1032,463] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testStealExpensive
# Parameters: (strategy = J9FjSharedQueues)

# Run progress: 94,44% complete, ETA 00:41:13
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
674,613 ops/s
# Warmup Iteration   2: 692,242 ops/s
# Warmup Iteration   3: 641,073 ops/s
Iteration   1: 650,983 ops/s
Iteration   2: 650,845 ops/s
Iteration   3: 649,146 ops/s
Iteration   4: 653,429 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
651,685 ops/s

# Run progress: 94,68% complete, ETA 00:39:30
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
679,713 ops/s
# Warmup Iteration   2: 696,724 ops/s
# Warmup Iteration   3: 661,305 ops/s
Iteration   1: 656,294 ops/s
Iteration   2: 657,269 ops/s
Iteration   3: 657,278 ops/s
Iteration   4: 657,434 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
657,786 ops/s


Result "testStealExpensive":
  654,215 Â±(99.9%) 5,056 ops/s [Average]
  (min, avg, max) = (649,146, 654,215, 657,786), stdev = 3,344
  CI (99.9%): [649,159, 659,271] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testStealExpensive
# Parameters: (strategy = J9FjLifo)

# Run progress: 94,91% complete, ETA 00:37:47
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
934,335 ops/s
# Warmup Iteration   2: 951,462 ops/s
# Warmup Iteration   3: 921,620 ops/s
Iteration   1: 908,985 ops/s
Iteration   2: 905,156 ops/s
Iteration   3: 903,351 ops/s
Iteration   4: 904,656 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
903,745 ops/s

# Run progress: 95,14% complete, ETA 00:36:04
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
939,831 ops/s
# Warmup Iteration   2: 941,416 ops/s
# Warmup Iteration   3: 932,718 ops/s
Iteration   1: 908,824 ops/s
Iteration   2: 908,361 ops/s
Iteration   3: 905,952 ops/s
Iteration   4: 906,309 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
906,470 ops/s


Result "testStealExpensive":
  906,181 Â±(99.9%) 3,068 ops/s [Average]
  (min, avg, max) = (903,351, 906,181, 908,985), stdev = 2,029
  CI (99.9%): [903,113, 909,249] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testStealExpensive
# Parameters: (strategy = J9FjFifo)

# Run progress: 95,37% complete, ETA 00:34:21
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
792,741 ops/s
# Warmup Iteration   2: 826,476 ops/s
# Warmup Iteration   3: 779,367 ops/s
Iteration   1: 769,040 ops/s
Iteration   2: 770,087 ops/s
Iteration   3: 771,107 ops/s
Iteration   4: 770,604 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
770,054 ops/s

# Run progress: 95,60% complete, ETA 00:32:38
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
785,117 ops/s
# Warmup Iteration   2: 799,116 ops/s
# Warmup Iteration   3: 767,170 ops/s
Iteration   1: 747,122 ops/s
Iteration   2: 746,437 ops/s
Iteration   3: 746,909 ops/s
Iteration   4: 747,185 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
743,972 ops/s


Result "testStealExpensive":
  758,252 Â±(99.9%) 19,071 ops/s [Average]
  (min, avg, max) = (743,972, 758,252, 771,107), stdev = 12,614
  CI (99.9%): [739,181, 777,323] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testStealVeryCheap
# Parameters: (strategy = a-sync-block)

# Run progress: 95,83% complete, ETA 00:30:55
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1193,339 ops/s
# Warmup Iteration   2: 1197,587 ops/s
# Warmup Iteration   3: 1163,549 ops/s
Iteration   1: 1165,135 ops/s
Iteration   2: 1039,946 ops/s
Iteration   3: 1045,511 ops/s
Iteration   4: 1141,892 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=588884521, numSharedTasksExecuted=110262, numSteals=5406030, numExceptions=0, numParks=117536, numFalseAlarmUnparks=228, numSharedQueueSwitches=0, numLocalSubmits=1102610000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=92465263, numSharedTasksExecuted=535, numSteals=89453821, numExceptions=0, numParks=117333, numFalseAlarmUnparks=299, numSharedQueueSwitches=1, numLocalSubmits=5340000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=85519831, numSharedTasksExecuted=292, numSteals=83903183, numExceptions=0, numParks=117092, numFalseAlarmUnparks=66, numSharedQueueSwitches=1, numLocalSubmits=2910000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=78934463, numSharedTasksExecuted=271, numSteals=77449151, numExceptions=0, numParks=117033, numFalseAlarmUnparks=60, numSharedQueueSwitches=1, numLocalSubmits=2700000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=86478249, numSharedTasksExecuted=383, numSteals=84201975, numExceptions=0, numParks=116878, numFalseAlarmUnparks=206, numSharedQueueSwitches=1, numLocalSubmits=3820000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=86042648, numSharedTasksExecuted=1105, numSteals=80163587, numExceptions=0, numParks=115906, numFalseAlarmUnparks=1545, numSharedQueueSwitches=1, numLocalSubmits=11040000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=77077034, numSharedTasksExecuted=2164, numSteals=64329363, numExceptions=0, numParks=113089, numFalseAlarmUnparks=4943, numSharedQueueSwitches=1, numLocalSubmits=21630000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=82625790, numSharedTasksExecuted=2787, numSteals=66796373, numExceptions=0, numParks=106861, numFalseAlarmUnparks=9074, numSharedQueueSwitches=1, numLocalSubmits=27860000, approximateLocalQueueSize=0}
--------------------------------
1141,413 ops/s

# Run progress: 96,06% complete, ETA 00:29:12
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1236,375 ops/s
# Warmup Iteration   2: 1189,443 ops/s
# Warmup Iteration   3: 1129,714 ops/s
Iteration   1: 1087,188 ops/s
Iteration   2: 1024,594 ops/s
Iteration   3: 1021,816 ops/s
Iteration   4: 1022,980 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=497641881, numSharedTasksExecuted=100310, numSteals=7730008, numExceptions=0, numParks=110429, numFalseAlarmUnparks=397, numSharedQueueSwitches=0, numLocalSubmits=1003090000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=96887674, numSharedTasksExecuted=1319, numSteals=90414331, numExceptions=0, numParks=109186, numFalseAlarmUnparks=160, numSharedQueueSwitches=1, numLocalSubmits=13180000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=87546631, numSharedTasksExecuted=660, numSteals=83886803, numExceptions=0, numParks=109080, numFalseAlarmUnparks=97, numSharedQueueSwitches=1, numLocalSubmits=6590000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=80737384, numSharedTasksExecuted=632, numSteals=77323879, numExceptions=0, numParks=109014, numFalseAlarmUnparks=52, numSharedQueueSwitches=1, numLocalSubmits=6310000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=90841323, numSharedTasksExecuted=854, numSteals=86110243, numExceptions=0, numParks=108824, numFalseAlarmUnparks=227, numSharedQueueSwitches=1, numLocalSubmits=8530000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=85910251, numSharedTasksExecuted=1452, numSteals=77769396, numExceptions=0, numParks=107836, numFalseAlarmUnparks=1354, numSharedQueueSwitches=1, numLocalSubmits=14510000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=82150012, numSharedTasksExecuted=2536, numSteals=67735326, numExceptions=0, numParks=105174, numFalseAlarmUnparks=3642, numSharedQueueSwitches=1, numLocalSubmits=25350000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=85355548, numSharedTasksExecuted=2941, numSteals=69509121, numExceptions=0, numParks=100677, numFalseAlarmUnparks=5701, numSharedQueueSwitches=1, numLocalSubmits=29400000, approximateLocalQueueSize=0}
--------------------------------
1022,435 ops/s


Result "testStealVeryCheap":
  1071,291 Â±(99.9%) 87,225 ops/s [Average]
  (min, avg, max) = (1021,816, 1071,291, 1165,135), stdev = 57,694
  CI (99.9%): [984,066, 1158,516] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testStealVeryCheap
# Parameters: (strategy = a-sync-nocheck)

# Run progress: 96,30% complete, ETA 00:27:29
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1289,453 ops/s
# Warmup Iteration   2: 1074,073 ops/s
# Warmup Iteration   3: 1001,023 ops/s
Iteration   1: 1008,693 ops/s
Iteration   2: 996,036 ops/s
Iteration   3: 999,579 ops/s
Iteration   4: 1001,298 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=468256793, numSharedTasksExecuted=97341, numSteals=6451072, numExceptions=0, numParks=106763, numFalseAlarmUnparks=468, numSharedQueueSwitches=0, numLocalSubmits=973400000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=94736126, numSharedTasksExecuted=1080, numSteals=88781164, numExceptions=0, numParks=106037, numFalseAlarmUnparks=128, numSharedQueueSwitches=1, numLocalSubmits=10790000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=86770890, numSharedTasksExecuted=374, numSteals=84536354, numExceptions=0, numParks=105959, numFalseAlarmUnparks=77, numSharedQueueSwitches=1, numLocalSubmits=3730000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=82849847, numSharedTasksExecuted=386, numSteals=80664672, numExceptions=0, numParks=105871, numFalseAlarmUnparks=38, numSharedQueueSwitches=1, numLocalSubmits=3850000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=87623122, numSharedTasksExecuted=632, numSteals=83742841, numExceptions=0, numParks=105676, numFalseAlarmUnparks=227, numSharedQueueSwitches=1, numLocalSubmits=6310000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=86783195, numSharedTasksExecuted=1332, numSteals=78770309, numExceptions=0, numParks=104638, numFalseAlarmUnparks=1508, numSharedQueueSwitches=1, numLocalSubmits=13310000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=85956199, numSharedTasksExecuted=2540, numSteals=70367144, numExceptions=0, numParks=101643, numFalseAlarmUnparks=3628, numSharedQueueSwitches=1, numLocalSubmits=25390000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=76690792, numSharedTasksExecuted=3279, numSteals=56841971, numExceptions=0, numParks=96186, numFalseAlarmUnparks=5481, numSharedQueueSwitches=1, numLocalSubmits=32780000, approximateLocalQueueSize=0}
--------------------------------
1005,451 ops/s

# Run progress: 96,53% complete, ETA 00:25:46
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1223,402 ops/s
# Warmup Iteration   2: 1271,861 ops/s
# Warmup Iteration   3: 1228,836 ops/s
Iteration   1: 1210,467 ops/s
Iteration   2: 1212,351 ops/s
Iteration   3: 1210,577 ops/s
Iteration   4: 1201,902 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=684093489, numSharedTasksExecuted=118515, numSteals=6799326, numExceptions=0, numParks=127969, numFalseAlarmUnparks=350, numSharedQueueSwitches=0, numLocalSubmits=1185140000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=93702354, numSharedTasksExecuted=1003, numSteals=88217800, numExceptions=0, numParks=127223, numFalseAlarmUnparks=130, numSharedQueueSwitches=1, numLocalSubmits=10020000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=88448626, numSharedTasksExecuted=473, numSteals=86053641, numExceptions=0, numParks=127113, numFalseAlarmUnparks=69, numSharedQueueSwitches=1, numLocalSubmits=4720000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=79497270, numSharedTasksExecuted=350, numSteals=77661046, numExceptions=0, numParks=127250, numFalseAlarmUnparks=36, numSharedQueueSwitches=1, numLocalSubmits=3490000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=87347548, numSharedTasksExecuted=590, numSteals=83890616, numExceptions=0, numParks=126960, numFalseAlarmUnparks=198, numSharedQueueSwitches=1, numLocalSubmits=5890000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=84581287, numSharedTasksExecuted=1304, numSteals=76873381, numExceptions=0, numParks=125951, numFalseAlarmUnparks=1796, numSharedQueueSwitches=1, numLocalSubmits=13030000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=80289205, numSharedTasksExecuted=2645, numSteals=65088394, numExceptions=0, numParks=122526, numFalseAlarmUnparks=5597, numSharedQueueSwitches=1, numLocalSubmits=26440000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=84808493, numSharedTasksExecuted=3392, numSteals=65955121, numExceptions=0, numParks=115405, numFalseAlarmUnparks=10121, numSharedQueueSwitches=1, numLocalSubmits=33910000, approximateLocalQueueSize=0}
--------------------------------
1205,232 ops/s


Result "testStealVeryCheap":
  1105,159 Â±(99.9%) 164,196 ops/s [Average]
  (min, avg, max) = (996,036, 1105,159, 1212,351), stdev = 108,605
  CI (99.9%): [940,963, 1269,354] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testStealVeryCheap
# Parameters: (strategy = a-lock-block)

# Run progress: 96,76% complete, ETA 00:24:03
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1227,683 ops/s
# Warmup Iteration   2: 1056,019 ops/s
# Warmup Iteration   3: 966,322 ops/s
Iteration   1: 992,246 ops/s
Iteration   2: 995,840 ops/s
Iteration   3: 988,272 ops/s
Iteration   4: 995,064 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=444884959, numSharedTasksExecuted=96556, numSteals=6569024, numExceptions=0, numParks=105430, numFalseAlarmUnparks=332, numSharedQueueSwitches=0, numLocalSubmits=965550000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=96383498, numSharedTasksExecuted=923, numSteals=91720975, numExceptions=0, numParks=104379, numFalseAlarmUnparks=125, numSharedQueueSwitches=1, numLocalSubmits=9220000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=87482928, numSharedTasksExecuted=533, numSteals=84771187, numExceptions=0, numParks=104252, numFalseAlarmUnparks=77, numSharedQueueSwitches=1, numLocalSubmits=5320000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=82375310, numSharedTasksExecuted=550, numSteals=79593116, numExceptions=0, numParks=104124, numFalseAlarmUnparks=40, numSharedQueueSwitches=1, numLocalSubmits=5490000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=92236179, numSharedTasksExecuted=681, numSteals=88335372, numExceptions=0, numParks=104017, numFalseAlarmUnparks=196, numSharedQueueSwitches=1, numLocalSubmits=6800000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=85070739, numSharedTasksExecuted=1273, numSteals=78163437, numExceptions=0, numParks=103180, numFalseAlarmUnparks=1296, numSharedQueueSwitches=1, numLocalSubmits=12720000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=81576720, numSharedTasksExecuted=2400, numSteals=67293592, numExceptions=0, numParks=100539, numFalseAlarmUnparks=3896, numSharedQueueSwitches=1, numLocalSubmits=23990000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=86925358, numSharedTasksExecuted=2775, numSteals=71150862, numExceptions=0, numParks=95591, numFalseAlarmUnparks=6324, numSharedQueueSwitches=1, numLocalSubmits=27740000, approximateLocalQueueSize=0}
--------------------------------
987,541 ops/s

# Run progress: 96,99% complete, ETA 00:22:20
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1197,499 ops/s
# Warmup Iteration   2: 1235,375 ops/s
# Warmup Iteration   3: 1122,215 ops/s
Iteration   1: 1086,832 ops/s
Iteration   2: 1085,699 ops/s
Iteration   3: 1083,948 ops/s
Iteration   4: 1087,305 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=561398763, numSharedTasksExecuted=107918, numSteals=5825856, numExceptions=0, numParks=115623, numFalseAlarmUnparks=295, numSharedQueueSwitches=0, numLocalSubmits=1079170000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=94173556, numSharedTasksExecuted=714, numSteals=90597030, numExceptions=0, numParks=115049, numFalseAlarmUnparks=108, numSharedQueueSwitches=1, numLocalSubmits=7130000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=84280168, numSharedTasksExecuted=323, numSteals=82406007, numExceptions=0, numParks=114989, numFalseAlarmUnparks=77, numSharedQueueSwitches=1, numLocalSubmits=3220000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=80189373, numSharedTasksExecuted=329, numSteals=78368386, numExceptions=0, numParks=114888, numFalseAlarmUnparks=49, numSharedQueueSwitches=1, numLocalSubmits=3280000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=88818057, numSharedTasksExecuted=458, numSteals=86091208, numExceptions=0, numParks=114705, numFalseAlarmUnparks=175, numSharedQueueSwitches=1, numLocalSubmits=4570000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=83276333, numSharedTasksExecuted=1066, numSteals=77378554, numExceptions=0, numParks=113853, numFalseAlarmUnparks=1433, numSharedQueueSwitches=1, numLocalSubmits=10650000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=79142185, numSharedTasksExecuted=2194, numSteals=66657269, numExceptions=0, numParks=111088, numFalseAlarmUnparks=3670, numSharedQueueSwitches=1, numLocalSubmits=21930000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=86477337, numSharedTasksExecuted=2770, numSteals=71363290, numExceptions=0, numParks=106228, numFalseAlarmUnparks=6687, numSharedQueueSwitches=1, numLocalSubmits=27690000, approximateLocalQueueSize=0}
--------------------------------
1088,631 ops/s


Result "testStealVeryCheap":
  1039,138 Â±(99.9%) 75,569 ops/s [Average]
  (min, avg, max) = (987,541, 1039,138, 1088,631), stdev = 49,984
  CI (99.9%): [963,569, 1114,707] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testStealVeryCheap
# Parameters: (strategy = a-nonblocking)

# Run progress: 97,22% complete, ETA 00:20:37
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1229,680 ops/s
# Warmup Iteration   2: 1237,232 ops/s
# Warmup Iteration   3: 1183,087 ops/s
Iteration   1: 1178,639 ops/s
Iteration   2: 1178,563 ops/s
Iteration   3: 1186,015 ops/s
Iteration   4: 1180,043 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=638640624, numSharedTasksExecuted=111609, numSteals=10123353, numExceptions=0, numParks=125017, numFalseAlarmUnparks=357, numSharedQueueSwitches=0, numLocalSubmits=1116080000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=96726495, numSharedTasksExecuted=1330, numSteals=89332642, numExceptions=0, numParks=123949, numFalseAlarmUnparks=176, numSharedQueueSwitches=1, numLocalSubmits=13290000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=86168988, numSharedTasksExecuted=557, numSteals=83200768, numExceptions=0, numParks=123813, numFalseAlarmUnparks=75, numSharedQueueSwitches=1, numLocalSubmits=5560000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=80702658, numSharedTasksExecuted=574, numSteals=77625387, numExceptions=0, numParks=123687, numFalseAlarmUnparks=55, numSharedQueueSwitches=1, numLocalSubmits=5730000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=87317433, numSharedTasksExecuted=919, numSteals=82590798, numExceptions=0, numParks=123313, numFalseAlarmUnparks=242, numSharedQueueSwitches=1, numLocalSubmits=9180000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=87226413, numSharedTasksExecuted=1947, numSteals=75941559, numExceptions=0, numParks=121913, numFalseAlarmUnparks=2063, numSharedQueueSwitches=1, numLocalSubmits=19460000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=84681241, numSharedTasksExecuted=3876, numSteals=63233267, numExceptions=0, numParks=117638, numFalseAlarmUnparks=3929, numSharedQueueSwitches=1, numLocalSubmits=38750000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=92481538, numSharedTasksExecuted=4578, numSteals=67246297, numExceptions=0, numParks=111705, numFalseAlarmUnparks=5249, numSharedQueueSwitches=1, numLocalSubmits=45770000, approximateLocalQueueSize=0}
--------------------------------
1180,633 ops/s

# Run progress: 97,45% complete, ETA 00:18:54
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
1225,445 ops/s
# Warmup Iteration   2: 1264,789 ops/s
# Warmup Iteration   3: 1130,474 ops/s
Iteration   1: 1220,976 ops/s
Iteration   2: 1234,464 ops/s
Iteration   3: 1229,207 ops/s
Iteration   4: 1226,650 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
ASharedQueueStatistics{approximateSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=698765928, numSharedTasksExecuted=120446, numSteals=6217525, numExceptions=0, numParks=129733, numFalseAlarmUnparks=432, numSharedQueueSwitches=0, numLocalSubmits=1204450000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=93610091, numSharedTasksExecuted=893, numSteals=88490487, numExceptions=0, numParks=129016, numFalseAlarmUnparks=120, numSharedQueueSwitches=1, numLocalSubmits=8920000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=87795753, numSharedTasksExecuted=465, numSteals=85566950, numExceptions=0, numParks=128823, numFalseAlarmUnparks=69, numSharedQueueSwitches=1, numLocalSubmits=4640000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=79578383, numSharedTasksExecuted=418, numSteals=77185821, numExceptions=0, numParks=128838, numFalseAlarmUnparks=38, numSharedQueueSwitches=1, numLocalSubmits=4170000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=87620169, numSharedTasksExecuted=624, numSteals=83749325, numExceptions=0, numParks=128572, numFalseAlarmUnparks=199, numSharedQueueSwitches=1, numLocalSubmits=6230000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=84538553, numSharedTasksExecuted=1261, numSteals=76671099, numExceptions=0, numParks=127645, numFalseAlarmUnparks=2028, numSharedQueueSwitches=1, numLocalSubmits=12600000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=80598255, numSharedTasksExecuted=2494, numSteals=65247687, numExceptions=0, numParks=124061, numFalseAlarmUnparks=5084, numSharedQueueSwitches=1, numLocalSubmits=24930000, approximateLocalQueueSize=0}
AWorkerThreadStatistics{state=TERMINATED, numTasksExecuted=86922806, numSharedTasksExecuted=3337, numSteals=66951644, numExceptions=0, numParks=117339, numFalseAlarmUnparks=9422, numSharedQueueSwitches=1, numLocalSubmits=33360000, approximateLocalQueueSize=0}
--------------------------------
1222,808 ops/s


Result "testStealVeryCheap":
  1203,800 Â±(99.9%) 37,209 ops/s [Average]
  (min, avg, max) = (1178,563, 1203,800, 1234,464), stdev = 24,612
  CI (99.9%): [1166,590, 1241,009] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testStealVeryCheap
# Parameters: (strategy = no-conc)

# Run progress: 97,69% complete, ETA 00:17:11
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
11154,048 ops/s
# Warmup Iteration   2: 11343,034 ops/s
# Warmup Iteration   3: 11468,142 ops/s
Iteration   1: 9911,733 ops/s
Iteration   2: 9422,098 ops/s
Iteration   3: 9509,044 ops/s
Iteration   4: 9464,553 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
9529,229 ops/s

# Run progress: 97,92% complete, ETA 00:15:28
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
11111,546 ops/s
# Warmup Iteration   2: 11289,735 ops/s
# Warmup Iteration   3: 11435,773 ops/s
Iteration   1: 9952,788 ops/s
Iteration   2: 9604,327 ops/s
Iteration   3: 9596,399 ops/s
Iteration   4: 9573,322 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
9573,242 ops/s


Result "testStealVeryCheap":
  9613,673 Â±(99.9%) 268,802 ops/s [Average]
  (min, avg, max) = (9422,098, 9613,673, 9952,788), stdev = 177,796
  CI (99.9%): [9344,871, 9882,476] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testStealVeryCheap
# Parameters: (strategy = ForkJoinLifo)

# Run progress: 98,15% complete, ETA 00:13:45
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
902,131 ops/s
# Warmup Iteration   2: 934,886 ops/s
# Warmup Iteration   3: 923,365 ops/s
Iteration   1: 923,480 ops/s
Iteration   2: 919,064 ops/s
Iteration   3: 918,225 ops/s
Iteration   4: 901,118 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
894,182 ops/s

# Run progress: 98,38% complete, ETA 00:12:02
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
914,234 ops/s
# Warmup Iteration   2: 942,996 ops/s
# Warmup Iteration   3: 926,910 ops/s
Iteration   1: 910,996 ops/s
Iteration   2: 903,828 ops/s
Iteration   3: 908,659 ops/s
Iteration   4: 899,991 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
903,585 ops/s


Result "testStealVeryCheap":
  908,313 Â±(99.9%) 14,381 ops/s [Average]
  (min, avg, max) = (894,182, 908,313, 923,480), stdev = 9,512
  CI (99.9%): [893,931, 922,694] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testStealVeryCheap
# Parameters: (strategy = J9FjSharedQueues)

# Run progress: 98,61% complete, ETA 00:10:19
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
599,520 ops/s
# Warmup Iteration   2: 638,434 ops/s
# Warmup Iteration   3: 614,521 ops/s
Iteration   1: 605,084 ops/s
Iteration   2: 603,219 ops/s
Iteration   3: 604,914 ops/s
Iteration   4: 606,524 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
606,462 ops/s

# Run progress: 98,84% complete, ETA 00:08:36
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
610,794 ops/s
# Warmup Iteration   2: 637,882 ops/s
# Warmup Iteration   3: 621,810 ops/s
Iteration   1: 608,795 ops/s
Iteration   2: 608,194 ops/s
Iteration   3: 607,861 ops/s
Iteration   4: 608,052 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
608,095 ops/s


Result "testStealVeryCheap":
  606,720 Â±(99.9%) 2,749 ops/s [Average]
  (min, avg, max) = (603,219, 606,720, 608,795), stdev = 1,818
  CI (99.9%): [603,972, 609,469] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testStealVeryCheap
# Parameters: (strategy = J9FjLifo)

# Run progress: 99,07% complete, ETA 00:06:52
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
837,945 ops/s
# Warmup Iteration   2: 845,799 ops/s
# Warmup Iteration   3: 848,199 ops/s
Iteration   1: 812,873 ops/s
Iteration   2: 812,773 ops/s
Iteration   3: 809,878 ops/s
Iteration   4: 808,739 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
810,660 ops/s

# Run progress: 99,31% complete, ETA 00:05:09
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
815,515 ops/s
# Warmup Iteration   2: 849,539 ops/s
# Warmup Iteration   3: 834,708 ops/s
Iteration   1: 825,344 ops/s
Iteration   2: 826,613 ops/s
Iteration   3: 823,566 ops/s
Iteration   4: 825,619 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
828,576 ops/s


Result "testStealVeryCheap":
  818,464 Â±(99.9%) 12,200 ops/s [Average]
  (min, avg, max) = (808,739, 818,464, 828,576), stdev = 8,070
  CI (99.9%): [806,264, 830,664] (assumes normal distribution)


# JMH 1.11.2 (released 136 days ago, please consider updating!)
# VM version: JDK 1.8.0_66, VM 25.66-b17
# VM invoker: /opt/jdk1.8.0_66/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 20 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: benchmark.PoolBenchmark.testStealVeryCheap
# Parameters: (strategy = J9FjFifo)

# Run progress: 99,54% complete, ETA 00:03:26
# Fork: 1 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
676,986 ops/s
# Warmup Iteration   2: 709,226 ops/s
# Warmup Iteration   3: 688,156 ops/s
Iteration   1: 670,019 ops/s
Iteration   2: 670,040 ops/s
Iteration   3: 670,919 ops/s
Iteration   4: 670,727 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
670,317 ops/s

# Run progress: 99,77% complete, ETA 00:01:43
# Fork: 2 of 2
# Warmup Iteration   1: Running with 8 on 8 processors
672,808 ops/s
# Warmup Iteration   2: 701,601 ops/s
# Warmup Iteration   3: 687,562 ops/s
Iteration   1: 677,805 ops/s
Iteration   2: 679,972 ops/s
Iteration   3: 679,268 ops/s
Iteration   4: 681,168 ops/s
Iteration   5: 
---- Thread Pool Statistics ----
--------------------------------
678,766 ops/s


Result "testStealVeryCheap":
  674,900 Â±(99.9%) 7,289 ops/s [Average]
  (min, avg, max) = (670,019, 674,900, 681,168), stdev = 4,821
  CI (99.9%): [667,611, 682,189] (assumes normal distribution)


# Run complete. Total time: 12:23:23

Benchmark                                      (strategy)   Mode  Cnt         Score         Error  Units
PoolBenchmark.___testSimpleScheduling01      a-sync-block  thrpt   10      9064,622 Â±     108,674  ops/s
PoolBenchmark.___testSimpleScheduling01    a-sync-nocheck  thrpt   10      9150,008 Â±     136,207  ops/s
PoolBenchmark.___testSimpleScheduling01      a-lock-block  thrpt   10      8642,522 Â±     143,696  ops/s
PoolBenchmark.___testSimpleScheduling01     a-nonblocking  thrpt   10      9007,732 Â±      65,997  ops/s
PoolBenchmark.___testSimpleScheduling01           no-conc  thrpt   10    117323,983 Â±     145,674  ops/s
PoolBenchmark.___testSimpleScheduling01      ForkJoinLifo  thrpt   10      4909,114 Â±     128,468  ops/s
PoolBenchmark.___testSimpleScheduling01  J9FjSharedQueues  thrpt   10      3185,161 Â±     383,457  ops/s
PoolBenchmark.___testSimpleScheduling01          J9FjLifo  thrpt   10      3514,194 Â±     125,316  ops/s
PoolBenchmark.___testSimpleScheduling01          J9FjFifo  thrpt   10      3798,688 Â±      61,104  ops/s

PoolBenchmark.recPar_00010a                  a-sync-block  thrpt   10      8226,976 Â±    1893,958  ops/s
PoolBenchmark.recPar_00010a                a-sync-nocheck  thrpt   10      9934,810 Â±      82,355  ops/s
PoolBenchmark.recPar_00010a                  a-lock-block  thrpt   10      8386,499 Â±    2697,805  ops/s
PoolBenchmark.recPar_00010a                 a-nonblocking  thrpt   10      9131,614 Â±     867,386  ops/s
PoolBenchmark.recPar_00010a                       no-conc  thrpt   10     80896,928 Â±     993,023  ops/s
PoolBenchmark.recPar_00010a                  ForkJoinLifo  thrpt   10      7840,354 Â±     930,855  ops/s
PoolBenchmark.recPar_00010a              J9FjSharedQueues  thrpt   10      1977,014 Â±      34,411  ops/s
PoolBenchmark.recPar_00010a                      J9FjLifo  thrpt   10      6689,246 Â±     727,452  ops/s
PoolBenchmark.recPar_00010a                      J9FjFifo  thrpt   10      6572,507 Â±     506,987  ops/s

PoolBenchmark.recPar_00010b                  a-sync-block  thrpt   10    886707,770 Â±   13055,530  ops/s
PoolBenchmark.recPar_00010b                a-sync-nocheck  thrpt   10    881486,904 Â±    6972,477  ops/s
PoolBenchmark.recPar_00010b                  a-lock-block  thrpt   10    882026,208 Â±    4952,846  ops/s
PoolBenchmark.recPar_00010b                 a-nonblocking  thrpt   10    888395,745 Â±    8063,654  ops/s
PoolBenchmark.recPar_00010b                       no-conc  thrpt   10  67726163,596 Â± 1312915,594  ops/s
PoolBenchmark.recPar_00010b                  ForkJoinLifo  thrpt   10    900895,926 Â±   21265,338  ops/s
PoolBenchmark.recPar_00010b              J9FjSharedQueues  thrpt   10    705672,681 Â±   17506,432  ops/s
PoolBenchmark.recPar_00010b                      J9FjLifo  thrpt   10    854593,923 Â±    4556,535  ops/s
PoolBenchmark.recPar_00010b                      J9FjFifo  thrpt   10    858320,271 Â±    7370,662  ops/s

PoolBenchmark.recPar_01000                   a-sync-block  thrpt   10     63012,273 Â±   16996,376  ops/s
PoolBenchmark.recPar_01000                 a-sync-nocheck  thrpt   10     85655,247 Â±   17626,577  ops/s
PoolBenchmark.recPar_01000                   a-lock-block  thrpt   10     78683,752 Â±   19480,366  ops/s
PoolBenchmark.recPar_01000                  a-nonblocking  thrpt   10     73436,859 Â±   20960,006  ops/s
PoolBenchmark.recPar_01000                        no-conc  thrpt   10    608674,351 Â±   14026,679  ops/s
PoolBenchmark.recPar_01000                   ForkJoinLifo  thrpt   10     95682,627 Â±    1185,763  ops/s
PoolBenchmark.recPar_01000               J9FjSharedQueues  thrpt   10     15277,601 Â±     346,091  ops/s
PoolBenchmark.recPar_01000                       J9FjLifo  thrpt   10     67015,349 Â±    2062,656  ops/s
PoolBenchmark.recPar_01000                       J9FjFifo  thrpt   10     73351,070 Â±    3892,138  ops/s

PoolBenchmark.recPar_10000                   a-sync-block  thrpt   10      9082,828 Â±    3886,667  ops/s
PoolBenchmark.recPar_10000                 a-sync-nocheck  thrpt   10      7222,464 Â±    3042,876  ops/s
PoolBenchmark.recPar_10000                   a-lock-block  thrpt   10      8226,742 Â±    3889,502  ops/s
PoolBenchmark.recPar_10000                  a-nonblocking  thrpt   10      7990,826 Â±    1376,427  ops/s
PoolBenchmark.recPar_10000                   ForkJoinLifo  thrpt   10     11029,938 Â±      46,170  ops/s
PoolBenchmark.recPar_10000               J9FjSharedQueues  thrpt   10      1559,102 Â±      45,459  ops/s
PoolBenchmark.recPar_10000                       J9FjLifo  thrpt   10      7750,983 Â±     166,329  ops/s
PoolBenchmark.recPar_10000                       J9FjFifo  thrpt   10      7263,851 Â±     776,918  ops/s

PoolBenchmark.testFactorial01                a-sync-block  thrpt   10    145873,301 Â±    2809,548  ops/s
PoolBenchmark.testFactorial01              a-sync-nocheck  thrpt   10    146787,504 Â±    3685,151  ops/s
PoolBenchmark.testFactorial01                a-lock-block  thrpt   10    142270,830 Â±    5441,988  ops/s
PoolBenchmark.testFactorial01               a-nonblocking  thrpt   10    146392,746 Â±    4483,490  ops/s
PoolBenchmark.testFactorial01                     no-conc  thrpt   10  18802631,620 Â±  419204,828  ops/s
PoolBenchmark.testFactorial01                ForkJoinLifo  thrpt   10     92160,499 Â±    1048,505  ops/s
PoolBenchmark.testFactorial01            J9FjSharedQueues  thrpt   10     74537,204 Â±     504,680  ops/s
PoolBenchmark.testFactorial01                    J9FjLifo  thrpt   10     79847,891 Â±     402,537  ops/s
PoolBenchmark.testFactorial01                    J9FjFifo  thrpt   10     79552,805 Â±     324,039  ops/s

PoolBenchmark.testFactorial07                a-sync-block  thrpt   10    874289,022 Â±    9597,354  ops/s
PoolBenchmark.testFactorial07              a-sync-nocheck  thrpt   10    870991,529 Â±    6497,315  ops/s
PoolBenchmark.testFactorial07                a-lock-block  thrpt   10    871068,849 Â±    7871,999  ops/s
PoolBenchmark.testFactorial07               a-nonblocking  thrpt   10    867950,182 Â±    5837,076  ops/s
PoolBenchmark.testFactorial07                     no-conc  thrpt   10  48677752,841 Â±   77951,548  ops/s
PoolBenchmark.testFactorial07                ForkJoinLifo  thrpt   10    889656,052 Â±    4975,644  ops/s
PoolBenchmark.testFactorial07            J9FjSharedQueues  thrpt   10    640130,580 Â±   33613,219  ops/s
PoolBenchmark.testFactorial07                    J9FjLifo  thrpt   10    837323,526 Â±    6174,000  ops/s
PoolBenchmark.testFactorial07                    J9FjFifo  thrpt   10    839119,388 Â±    5077,273  ops/s

PoolBenchmark.testFactorial08                a-sync-block  thrpt   10    910561,899 Â±    7131,572  ops/s
PoolBenchmark.testFactorial08              a-sync-nocheck  thrpt   10    900755,520 Â±   19853,508  ops/s
PoolBenchmark.testFactorial08                a-lock-block  thrpt   10    905844,922 Â±    8181,653  ops/s
PoolBenchmark.testFactorial08               a-nonblocking  thrpt   10    912967,047 Â±    5915,521  ops/s
PoolBenchmark.testFactorial08                     no-conc  thrpt   10  53180376,190 Â±  174433,527  ops/s
PoolBenchmark.testFactorial08                ForkJoinLifo  thrpt   10   1146441,342 Â±   32274,797  ops/s
PoolBenchmark.testFactorial08            J9FjSharedQueues  thrpt   10    655806,491 Â±   34730,696  ops/s
PoolBenchmark.testFactorial08                    J9FjLifo  thrpt   10   1101795,521 Â±    6442,082  ops/s
PoolBenchmark.testFactorial08                    J9FjFifo  thrpt   10    918724,110 Â±   49416,900  ops/s

PoolBenchmark.testFactorial15                a-sync-block  thrpt   10   1235131,411 Â±   30020,161  ops/s
PoolBenchmark.testFactorial15              a-sync-nocheck  thrpt   10   1256117,950 Â±   30054,175  ops/s
PoolBenchmark.testFactorial15                a-lock-block  thrpt   10   1240641,880 Â±   28423,486  ops/s
PoolBenchmark.testFactorial15               a-nonblocking  thrpt   10   1246558,855 Â±   23979,035  ops/s
PoolBenchmark.testFactorial15                     no-conc  thrpt   10  52965044,408 Â±  459258,929  ops/s
PoolBenchmark.testFactorial15                ForkJoinLifo  thrpt   10   1241481,672 Â±    6627,363  ops/s
PoolBenchmark.testFactorial15            J9FjSharedQueues  thrpt   10    760349,965 Â±   16604,599  ops/s
PoolBenchmark.testFactorial15                    J9FjLifo  thrpt   10   1215446,245 Â±   10639,050  ops/s
PoolBenchmark.testFactorial15                    J9FjFifo  thrpt   10   1208138,570 Â±    9508,476  ops/s

PoolBenchmark.testFactorial16                a-sync-block  thrpt   10   1260947,255 Â±   39340,168  ops/s
PoolBenchmark.testFactorial16              a-sync-nocheck  thrpt   10   1250739,990 Â±   21863,592  ops/s
PoolBenchmark.testFactorial16                a-lock-block  thrpt   10   1253716,029 Â±   10892,946  ops/s
PoolBenchmark.testFactorial16               a-nonblocking  thrpt   10   1258892,457 Â±   26129,508  ops/s
PoolBenchmark.testFactorial16                     no-conc  thrpt   10  52535911,431 Â±  137449,503  ops/s
PoolBenchmark.testFactorial16                ForkJoinLifo  thrpt   10   1232304,588 Â±   16999,739  ops/s
PoolBenchmark.testFactorial16            J9FjSharedQueues  thrpt   10    773958,097 Â±   21458,919  ops/s
PoolBenchmark.testFactorial16                    J9FjLifo  thrpt   10   1216578,664 Â±   15423,472  ops/s
PoolBenchmark.testFactorial16                    J9FjFifo  thrpt   10   1213097,679 Â±   12835,469  ops/s

PoolBenchmark.testPingPong01                 a-sync-block  thrpt   10      3347,207 Â±     216,689  ops/s
PoolBenchmark.testPingPong01               a-sync-nocheck  thrpt   10      2786,094 Â±     579,937  ops/s
PoolBenchmark.testPingPong01                 a-lock-block  thrpt   10      3240,925 Â±     114,859  ops/s
PoolBenchmark.testPingPong01                a-nonblocking  thrpt   10      2833,288 Â±     626,190  ops/s
PoolBenchmark.testPingPong01                 ForkJoinLifo  thrpt   10       510,580 Â±      16,603  ops/s
PoolBenchmark.testPingPong01             J9FjSharedQueues  thrpt   10       272,210 Â±       1,184  ops/s
PoolBenchmark.testPingPong01                     J9FjLifo  thrpt   10       416,369 Â±       8,652  ops/s
PoolBenchmark.testPingPong01                     J9FjFifo  thrpt   10       436,513 Â±       5,944  ops/s

PoolBenchmark.testPingPong02                 a-sync-block  thrpt   10      2049,944 Â±     429,244  ops/s
PoolBenchmark.testPingPong02               a-sync-nocheck  thrpt   10      2639,487 Â±      92,261  ops/s
PoolBenchmark.testPingPong02                 a-lock-block  thrpt   10      2124,071 Â±     792,569  ops/s
PoolBenchmark.testPingPong02                a-nonblocking  thrpt   10      2156,029 Â±     292,144  ops/s
PoolBenchmark.testPingPong02                 ForkJoinLifo  thrpt   10       665,683 Â±      60,334  ops/s
PoolBenchmark.testPingPong02             J9FjSharedQueues  thrpt   10       314,754 Â±       2,575  ops/s
PoolBenchmark.testPingPong02                     J9FjLifo  thrpt   10       570,284 Â±       6,205  ops/s
PoolBenchmark.testPingPong02                     J9FjFifo  thrpt   10       634,284 Â±       5,669  ops/s

PoolBenchmark.testPingPong07                 a-sync-block  thrpt   10      1360,286 Â±     461,382  ops/s
PoolBenchmark.testPingPong07               a-sync-nocheck  thrpt   10      1229,969 Â±      31,866  ops/s
PoolBenchmark.testPingPong07                 a-lock-block  thrpt   10      1142,398 Â±      88,216  ops/s
PoolBenchmark.testPingPong07                a-nonblocking  thrpt   10       806,099 Â±      33,397  ops/s
PoolBenchmark.testPingPong07                 ForkJoinLifo  thrpt   10      1521,810 Â±      46,622  ops/s
PoolBenchmark.testPingPong07             J9FjSharedQueues  thrpt   10       213,551 Â±       9,517  ops/s
PoolBenchmark.testPingPong07                     J9FjLifo  thrpt   10       995,746 Â±     121,508  ops/s
PoolBenchmark.testPingPong07                     J9FjFifo  thrpt   10       822,363 Â±      73,174  ops/s

PoolBenchmark.testPingPong08                 a-sync-block  thrpt   10       898,661 Â±      32,919  ops/s
PoolBenchmark.testPingPong08               a-sync-nocheck  thrpt   10       919,928 Â±      52,943  ops/s
PoolBenchmark.testPingPong08                 a-lock-block  thrpt   10       927,097 Â±     155,207  ops/s
PoolBenchmark.testPingPong08                a-nonblocking  thrpt   10      1079,390 Â±     239,164  ops/s
PoolBenchmark.testPingPong08                 ForkJoinLifo  thrpt   10       605,903 Â±      23,898  ops/s
PoolBenchmark.testPingPong08             J9FjSharedQueues  thrpt   10       195,848 Â±       8,127  ops/s
PoolBenchmark.testPingPong08                     J9FjLifo  thrpt   10       821,730 Â±     227,021  ops/s
PoolBenchmark.testPingPong08                     J9FjFifo  thrpt   10       679,664 Â±      71,661  ops/s

PoolBenchmark.testPingPong15                 a-sync-block  thrpt   10       506,841 Â±     240,906  ops/s
PoolBenchmark.testPingPong15               a-sync-nocheck  thrpt   10       624,818 Â±      28,347  ops/s
PoolBenchmark.testPingPong15                 a-lock-block  thrpt   10       650,157 Â±      33,326  ops/s
PoolBenchmark.testPingPong15                a-nonblocking  thrpt   10       503,708 Â±     195,619  ops/s
PoolBenchmark.testPingPong15                 ForkJoinLifo  thrpt   10       630,043 Â±      93,581  ops/s
PoolBenchmark.testPingPong15             J9FjSharedQueues  thrpt   10       113,307 Â±       2,711  ops/s
PoolBenchmark.testPingPong15                     J9FjLifo  thrpt   10       494,308 Â±      46,918  ops/s
PoolBenchmark.testPingPong15                     J9FjFifo  thrpt   10       473,924 Â±      81,147  ops/s

PoolBenchmark.testPingPong16                 a-sync-block  thrpt   10       466,564 Â±     201,498  ops/s
PoolBenchmark.testPingPong16               a-sync-nocheck  thrpt   10       686,153 Â±      15,776  ops/s
PoolBenchmark.testPingPong16                 a-lock-block  thrpt   10       706,413 Â±      34,086  ops/s
PoolBenchmark.testPingPong16                a-nonblocking  thrpt   10       604,138 Â±     112,400  ops/s
PoolBenchmark.testPingPong16                 ForkJoinLifo  thrpt   10       362,482 Â±      52,823  ops/s
PoolBenchmark.testPingPong16             J9FjSharedQueues  thrpt   10       106,736 Â±       2,029  ops/s
PoolBenchmark.testPingPong16                     J9FjLifo  thrpt   10       391,407 Â±      16,219  ops/s
PoolBenchmark.testPingPong16                     J9FjFifo  thrpt   10       440,037 Â±      94,696  ops/s

PoolBenchmark.testPingPong32                 a-sync-block  thrpt   10       292,504 Â±      29,643  ops/s
PoolBenchmark.testPingPong32               a-sync-nocheck  thrpt   10       307,319 Â±     181,768  ops/s
PoolBenchmark.testPingPong32                 a-lock-block  thrpt   10       204,024 Â±      47,751  ops/s
PoolBenchmark.testPingPong32                a-nonblocking  thrpt   10       397,106 Â±      66,004  ops/s
PoolBenchmark.testPingPong32                 ForkJoinLifo  thrpt   10       244,313 Â±       7,481  ops/s
PoolBenchmark.testPingPong32             J9FjSharedQueues  thrpt   10        54,011 Â±       1,707  ops/s
PoolBenchmark.testPingPong32                     J9FjLifo  thrpt   10       204,451 Â±      21,019  ops/s
PoolBenchmark.testPingPong32                     J9FjFifo  thrpt   10       200,142 Â±       9,722  ops/s

PoolBenchmark.testRecursiveFibo              a-sync-block  thrpt   10      2284,390 Â±      16,825  ops/s
PoolBenchmark.testRecursiveFibo            a-sync-nocheck  thrpt   10      2279,331 Â±      12,232  ops/s
PoolBenchmark.testRecursiveFibo              a-lock-block  thrpt   10      2262,646 Â±      49,028  ops/s
PoolBenchmark.testRecursiveFibo             a-nonblocking  thrpt   10      2280,690 Â±      14,415  ops/s
PoolBenchmark.testRecursiveFibo                   no-conc  thrpt   10    580076,847 Â±    3634,881  ops/s
PoolBenchmark.testRecursiveFibo              ForkJoinLifo  thrpt   10      8957,106 Â±      88,963  ops/s
PoolBenchmark.testRecursiveFibo          J9FjSharedQueues  thrpt   10      3866,411 Â±      11,988  ops/s
PoolBenchmark.testRecursiveFibo                  J9FjLifo  thrpt   10      8004,383 Â±      67,149  ops/s
PoolBenchmark.testRecursiveFibo                  J9FjFifo  thrpt   10      8066,375 Â±      21,953  ops/s

PoolBenchmark.testSimpleScheduling07         a-sync-block  thrpt   10     26943,565 Â±    2500,307  ops/s
PoolBenchmark.testSimpleScheduling07       a-sync-nocheck  thrpt   10     29029,346 Â±    8102,618  ops/s
PoolBenchmark.testSimpleScheduling07         a-lock-block  thrpt   10     40696,576 Â±    2129,501  ops/s
PoolBenchmark.testSimpleScheduling07        a-nonblocking  thrpt   10     28933,908 Â±     592,999  ops/s
PoolBenchmark.testSimpleScheduling07              no-conc  thrpt   10    566891,686 Â±    2161,173  ops/s
PoolBenchmark.testSimpleScheduling07         ForkJoinLifo  thrpt   10     21169,188 Â±     610,805  ops/s
PoolBenchmark.testSimpleScheduling07     J9FjSharedQueues  thrpt   10     20154,577 Â±    1036,904  ops/s
PoolBenchmark.testSimpleScheduling07             J9FjLifo  thrpt   10     19384,440 Â±    1047,478  ops/s
PoolBenchmark.testSimpleScheduling07             J9FjFifo  thrpt   10     19708,623 Â±    1512,251  ops/s

PoolBenchmark.testSimpleScheduling08         a-sync-block  thrpt   10     31100,946 Â±    3897,171  ops/s
PoolBenchmark.testSimpleScheduling08       a-sync-nocheck  thrpt   10     32350,011 Â±    1251,208  ops/s
PoolBenchmark.testSimpleScheduling08         a-lock-block  thrpt   10     40009,523 Â±    3132,194  ops/s
PoolBenchmark.testSimpleScheduling08        a-nonblocking  thrpt   10     32100,883 Â±     633,505  ops/s
PoolBenchmark.testSimpleScheduling08              no-conc  thrpt   10    603001,402 Â±    5883,061  ops/s
PoolBenchmark.testSimpleScheduling08         ForkJoinLifo  thrpt   10     22943,137 Â±     677,750  ops/s
PoolBenchmark.testSimpleScheduling08     J9FjSharedQueues  thrpt   10     21385,567 Â±    1039,124  ops/s
PoolBenchmark.testSimpleScheduling08             J9FjLifo  thrpt   10     21408,232 Â±     952,179  ops/s
PoolBenchmark.testSimpleScheduling08             J9FjFifo  thrpt   10     21284,411 Â±     823,064  ops/s

PoolBenchmark.testSimpleScheduling15         a-sync-block  thrpt   10     12116,533 Â±    1274,128  ops/s
PoolBenchmark.testSimpleScheduling15       a-sync-nocheck  thrpt   10     14159,742 Â±    2158,975  ops/s
PoolBenchmark.testSimpleScheduling15         a-lock-block  thrpt   10     11403,322 Â±    2083,497  ops/s
PoolBenchmark.testSimpleScheduling15        a-nonblocking  thrpt   10     13371,533 Â±    1786,405  ops/s
PoolBenchmark.testSimpleScheduling15              no-conc  thrpt   10    602064,258 Â±    6540,118  ops/s
PoolBenchmark.testSimpleScheduling15         ForkJoinLifo  thrpt   10     24325,851 Â±     360,040  ops/s
PoolBenchmark.testSimpleScheduling15     J9FjSharedQueues  thrpt   10     23046,379 Â±     307,206  ops/s
PoolBenchmark.testSimpleScheduling15             J9FjLifo  thrpt   10     22900,222 Â±     587,531  ops/s
PoolBenchmark.testSimpleScheduling15             J9FjFifo  thrpt   10     21686,029 Â±    1640,893  ops/s

PoolBenchmark.testSimpleScheduling16         a-sync-block  thrpt   10     15406,624 Â±    2858,948  ops/s
PoolBenchmark.testSimpleScheduling16       a-sync-nocheck  thrpt   10     13819,980 Â±     762,590  ops/s
PoolBenchmark.testSimpleScheduling16         a-lock-block  thrpt   10     12830,572 Â±    1772,763  ops/s
PoolBenchmark.testSimpleScheduling16        a-nonblocking  thrpt   10     15306,189 Â±    2390,805  ops/s
PoolBenchmark.testSimpleScheduling16              no-conc  thrpt   10    603939,112 Â±    2784,858  ops/s
PoolBenchmark.testSimpleScheduling16         ForkJoinLifo  thrpt   10     23995,916 Â±     718,354  ops/s
PoolBenchmark.testSimpleScheduling16     J9FjSharedQueues  thrpt   10     24223,293 Â±    1046,293  ops/s
PoolBenchmark.testSimpleScheduling16             J9FjLifo  thrpt   10     23643,474 Â±     588,633  ops/s
PoolBenchmark.testSimpleScheduling16             J9FjFifo  thrpt   10     21992,001 Â±     666,314  ops/s

PoolBenchmark.testStealExpensive             a-sync-block  thrpt   10       754,507 Â±      50,540  ops/s
PoolBenchmark.testStealExpensive           a-sync-nocheck  thrpt   10       745,150 Â±      20,871  ops/s
PoolBenchmark.testStealExpensive             a-lock-block  thrpt   10       769,771 Â±       5,945  ops/s
PoolBenchmark.testStealExpensive            a-nonblocking  thrpt   10       780,152 Â±      17,519  ops/s
PoolBenchmark.testStealExpensive                  no-conc  thrpt   10       524,420 Â±      24,042  ops/s
PoolBenchmark.testStealExpensive             ForkJoinLifo  thrpt   10       994,547 Â±      37,916  ops/s
PoolBenchmark.testStealExpensive         J9FjSharedQueues  thrpt   10       654,215 Â±       5,056  ops/s
PoolBenchmark.testStealExpensive                 J9FjLifo  thrpt   10       906,181 Â±       3,068  ops/s
PoolBenchmark.testStealExpensive                 J9FjFifo  thrpt   10       758,252 Â±      19,071  ops/s

PoolBenchmark.testStealVeryCheap             a-sync-block  thrpt   10      1071,291 Â±      87,225  ops/s
PoolBenchmark.testStealVeryCheap           a-sync-nocheck  thrpt   10      1105,159 Â±     164,196  ops/s
PoolBenchmark.testStealVeryCheap             a-lock-block  thrpt   10      1039,138 Â±      75,569  ops/s
PoolBenchmark.testStealVeryCheap            a-nonblocking  thrpt   10      1203,800 Â±      37,209  ops/s
PoolBenchmark.testStealVeryCheap                  no-conc  thrpt   10      9613,673 Â±     268,802  ops/s
PoolBenchmark.testStealVeryCheap             ForkJoinLifo  thrpt   10       908,313 Â±      14,381  ops/s
PoolBenchmark.testStealVeryCheap         J9FjSharedQueues  thrpt   10       606,720 Â±       2,749  ops/s
PoolBenchmark.testStealVeryCheap                 J9FjLifo  thrpt   10       818,464 Â±      12,200  ops/s
PoolBenchmark.testStealVeryCheap                 J9FjFifo  thrpt   10       674,900 Â±       7,289  ops/s
